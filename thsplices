accelerate-1.3.0.0: unregistering (local file changes: CHANGELOG.md README.md Setup.hs accelerate.cabal cbits/align.h cbits/atomic.c cbits/clock.c cbits...)
accelerate> configure (lib)
[1 of 2] Compiling Main             ( /home/david/Documents/accelerate/accelerate/Setup.hs, /home/david/Documents/accelerate/accelerate/.stack-work/dist/x86_64-linux/Cabal-3.4.1.0/setup/Main.o )
[2 of 2] Compiling StackSetupShim   ( /home/david/.stack/setup-exe-src/setup-shim-mPHDZzAJ.hs, /home/david/Documents/accelerate/accelerate/.stack-work/dist/x86_64-linux/Cabal-3.4.1.0/setup/StackSetupShim.o )
Linking /home/david/Documents/accelerate/accelerate/.stack-work/dist/x86_64-linux/Cabal-3.4.1.0/setup/setup ...
Configuring accelerate-1.3.0.0...
accelerate> build (lib)
Preprocessing library for accelerate-1.3.0.0..
Building library for accelerate-1.3.0.0..
[  1 of 150] Compiling Crypto.Hash.XKCP
/home/david/Documents/accelerate/accelerate/src/Crypto/Hash/XKCP.hs:(178,1)-(183,11): Splicing declarations
    runQ
      $ do addForeignFilePath LangC "cbits/xkcp/KeccakHash.c"
           addForeignFilePath LangC "cbits/xkcp/KeccakSponge.c"
           addForeignFilePath LangC "cbits/xkcp/SimpleFIPS202.c"
           addForeignFilePath LangC "cbits/xkcp/KeccakP-1600-opt64.c"
           return []
  ======>
[  2 of 150] Compiling Data.Array.Accelerate.Analysis.Hash.TH
[  3 of 150] Compiling Data.Array.Accelerate.Async
[  4 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Clock
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Debug/Internal/Clock.hs:(40,1)-(42,11): Splicing declarations
    runQ
      $ do addForeignFilePath LangC "cbits/clock.c"
           return []
  ======>
[  5 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Flags
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Debug/Internal/Flags.hs:(254,1)-(257,11): Splicing declarations
    runQ
      $ do addForeignFilePath LangC "cbits/flags.c"
           addForeignFilePath LangC "cbits/getopt_long.c"
           return []
  ======>
[  6 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Trace
[  7 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Timed
[  8 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Stats
[  9 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Tracy
[ 10 of 150] Compiling Data.Array.Accelerate.Error
[ 11 of 150] Compiling Data.Array.Accelerate.Array.Remote.Nursery
[ 12 of 150] Compiling Data.Array.Accelerate.Lifetime
[ 13 of 150] Compiling Data.Array.Accelerate.Orphans
[ 14 of 150] Compiling Data.Array.Accelerate.Pretty.Graphviz

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Graphviz.hs:27:3: warning: [-Wdodgy-exports]
    The export item ‘PrettyGraph(..)’ suggests that
    ‘PrettyGraph’ has (in-scope) constructors or class methods,
    but it has none
   |
27 |   PrettyGraph(..), Detail(..),
   |   ^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Graphviz.hs:27:20: warning: [-Wdodgy-exports]
    The export item ‘Detail(..)’ suggests that
    ‘Detail’ has (in-scope) constructors or class methods,
    but it has none
   |
27 |   PrettyGraph(..), Detail(..),
   |                    ^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Graphviz.hs:34:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: graphDelayedAcc :: a
   |
34 | graphDelayedAcc = undefined
   | ^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Graphviz.hs:35:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: graphDelayedAfun :: a
   |
35 | graphDelayedAfun = undefined 
   | ^^^^^^^^^^^^^^^^
[ 15 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Graph
[ 16 of 150] Compiling Data.Array.Accelerate.Test.NoFib.Config
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Test/NoFib/Config.hs:101:29-75: Splicing expression
    [| finiteBitSize (undefined :: Int) == 64 |]
  ======>
    (finiteBitSize (undefined :: Int) == 64)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Test/NoFib/Config.hs:95:29-75: Splicing expression
    [| finiteBitSize (undefined :: Int) == 32 |]
  ======>
    (finiteBitSize (undefined :: Int) == 32)
[ 17 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.Graph[boot]
[ 18 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.Solver
[ 19 of 150] Compiling Data.Atomic
/home/david/Documents/accelerate/accelerate/src/Data/Atomic.hs:(98,1)-(100,11): Splicing declarations
    runQ
      $ do addForeignFilePath LangC "cbits/atomic.c"
           return []
  ======>
[ 20 of 150] Compiling Data.Array.Accelerate.Debug.Internal.Profile
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Debug/Internal/Profile.hs:(55,1)-(58,3): Splicing declarations
    runQ
      $ sequence
          [sigD (mkName "___nursery") (conT ''CString),
           valD
             (varP (mkName "___nursery"))
             (normalB
                (conE 'Ptr
                   `appE` litE (stringPrimL (map (fromIntegral . ord) "nursery\0"))))
             []]
  ======>
    ___nursery :: CString
    ___nursery = Ptr "nursery\NUL"#
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Debug/Internal/Profile.hs:(186,1)-(188,11): Splicing declarations
    runQ
      $ do addForeignFilePath LangC "cbits/monitoring.c"
           return []
  ======>
[ 21 of 150] Compiling Data.Array.Accelerate.Debug.Internal
[ 22 of 150] Compiling Data.BitSet
[ 23 of 150] Compiling Data.Array.Accelerate.Trafo.Config
[ 24 of 150] Compiling Language.Haskell.TH.Extra
[ 25 of 150] Compiling Data.Primitive.Vec
[ 26 of 150] Compiling Data.Array.Accelerate.Type
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Type.hs:(441,1)-(519,46): Splicing declarations
    runQ
      $ do let bits_a14rF :: FiniteBits b_a14rM => b_a14rM -> Integer
               bits_a14rF = toInteger . finiteBitSize
               integralTypes_a14rG :: [(Name, Integer)]
               integralTypes_a14rG
                 = [(''Int, bits_a14rF (undefined :: Int)), (''Int8, 8),
                    (''Int16, 16), (''Int32, 32), (''Int64, 64),
                    (''Word, bits_a14rF (undefined :: Word)), (''Word8, 8),
                    (''Word16, 16), (''Word32, 32), (''Word64, 64)]
               floatingTypes_a14rH :: [(Name, Integer)]
               floatingTypes_a14rH = [(''Half, 16), (''Float, 32), (''Double, 64)]
               vectorTypes_a14rI :: [(Name, Integer)]
               vectorTypes_a14rI = integralTypes_a14rG ++ floatingTypes_a14rH
               mkIntegral_a14rJ :: Name -> Integer -> Q [Dec]
               mkIntegral_a14rJ t_a14rN n_a14rO
                 = [d| type instance BitSize $(conT t_a14rN) = $(litT
                                                                   (numTyLit n_a14rO))
                       instance IsScalar $(conT t_a14rN) where
                         scalarType = SingleScalarType singleType
                       instance IsSingle $(conT t_a14rN) where
                         singleType = NumSingleType numType
                       instance IsBounded $(conT t_a14rN) where
                         boundedType = IntegralBoundedType integralType
                       instance IsNum $(conT t_a14rN) where
                         numType = IntegralNumType integralType
                       instance IsIntegral $(conT t_a14rN) where
                         integralType = $(conE (mkName ("Type" ++ nameBase t_a14rN))) |]
                   pending(rn) [<splice_a14rW, conE
                                                 (mkName ("Type" ++ nameBase t_a14rN))>,
                                <splice_a14rV, conT t_a14rN>, <splice_a14rU, conT t_a14rN>,
                                <splice_a14rT, conT t_a14rN>, <splice_a14rS, conT t_a14rN>,
                                <splice_a14rR, conT t_a14rN>,
                                <splice_a14rQ, litT (numTyLit n_a14rO)>,
                                <splice_a14rP, conT t_a14rN>]
               mkFloating_a14rK :: Name -> Integer -> Q [Dec]
               mkFloating_a14rK t_a14rX n_a14rY
                 = [d| type instance BitSize $(conT t_a14rX) = $(litT
                                                                   (numTyLit n_a14rY))
                       instance IsScalar $(conT t_a14rX) where
                         scalarType = SingleScalarType singleType
                       instance IsSingle $(conT t_a14rX) where
                         singleType = NumSingleType numType
                       instance IsNum $(conT t_a14rX) where
                         numType = FloatingNumType floatingType
                       instance IsFloating $(conT t_a14rX) where
                         floatingType = $(conE (mkName ("Type" ++ nameBase t_a14rX))) |]
                   pending(rn) [<splice_a14s5, conE
                                                 (mkName ("Type" ++ nameBase t_a14rX))>,
                                <splice_a14s4, conT t_a14rX>, <splice_a14s3, conT t_a14rX>,
                                <splice_a14s2, conT t_a14rX>, <splice_a14s1, conT t_a14rX>,
                                <splice_a14s0, litT (numTyLit n_a14rY)>,
                                <splice_a14rZ, conT t_a14rX>]
               mkVector_a14rL :: Name -> Integer -> Q [Dec]
               mkVector_a14rL t_a14s6 n_a14s7
                 = [d| type instance BitSize (Vec w_a14s8 $(conT t_a14s6)) = w_a14s8
                                                                             *
                                                                             $(litT
                                                                                 (numTyLit n_a14s7))
                       instance KnownNat n_a14sb =>
                                IsScalar (Vec n_a14sb $(conT t_a14s6)) where
                         scalarType
                           = VectorScalarType
                               (VectorType
                                  (fromIntegral (natVal' (proxy# :: Proxy# n_a14sb))) singleType) |]
                   pending(rn) [<splice_a14sc, conT t_a14s6>,
                                <splice_a14sa, litT (numTyLit n_a14s7)>,
                                <splice_a14s9, conT t_a14s6>]
           is_a14sd <- mapM (uncurry mkIntegral_a14rJ) integralTypes_a14rG
           fs_a14se <- mapM (uncurry mkFloating_a14rK) floatingTypes_a14rH
           vs_a14sf <- mapM (uncurry mkVector_a14rL) vectorTypes_a14rI
           return (concat is_a14sd ++ concat fs_a14se ++ concat vs_a14sf)
  ======>
    instance IsIntegral Int where
      integralType = TypeInt
    instance IsNum Int where
      numType = IntegralNumType integralType
    instance IsBounded Int where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Int where
      singleType = NumSingleType numType
    instance IsScalar Int where
      scalarType = SingleScalarType singleType
    type instance BitSize Int = 64
    instance IsIntegral Int8 where
      integralType = TypeInt8
    instance IsNum Int8 where
      numType = IntegralNumType integralType
    instance IsBounded Int8 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Int8 where
      singleType = NumSingleType numType
    instance IsScalar Int8 where
      scalarType = SingleScalarType singleType
    type instance BitSize Int8 = 8
    instance IsIntegral Int16 where
      integralType = TypeInt16
    instance IsNum Int16 where
      numType = IntegralNumType integralType
    instance IsBounded Int16 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Int16 where
      singleType = NumSingleType numType
    instance IsScalar Int16 where
      scalarType = SingleScalarType singleType
    type instance BitSize Int16 = 16
    instance IsIntegral Int32 where
      integralType = TypeInt32
    instance IsNum Int32 where
      numType = IntegralNumType integralType
    instance IsBounded Int32 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Int32 where
      singleType = NumSingleType numType
    instance IsScalar Int32 where
      scalarType = SingleScalarType singleType
    type instance BitSize Int32 = 32
    instance IsIntegral Int64 where
      integralType = TypeInt64
    instance IsNum Int64 where
      numType = IntegralNumType integralType
    instance IsBounded Int64 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Int64 where
      singleType = NumSingleType numType
    instance IsScalar Int64 where
      scalarType = SingleScalarType singleType
    type instance BitSize Int64 = 64
    instance IsIntegral Word where
      integralType = TypeWord
    instance IsNum Word where
      numType = IntegralNumType integralType
    instance IsBounded Word where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Word where
      singleType = NumSingleType numType
    instance IsScalar Word where
      scalarType = SingleScalarType singleType
    type instance BitSize Word = 64
    instance IsIntegral Word8 where
      integralType = TypeWord8
    instance IsNum Word8 where
      numType = IntegralNumType integralType
    instance IsBounded Word8 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Word8 where
      singleType = NumSingleType numType
    instance IsScalar Word8 where
      scalarType = SingleScalarType singleType
    type instance BitSize Word8 = 8
    instance IsIntegral Word16 where
      integralType = TypeWord16
    instance IsNum Word16 where
      numType = IntegralNumType integralType
    instance IsBounded Word16 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Word16 where
      singleType = NumSingleType numType
    instance IsScalar Word16 where
      scalarType = SingleScalarType singleType
    type instance BitSize Word16 = 16
    instance IsIntegral Word32 where
      integralType = TypeWord32
    instance IsNum Word32 where
      numType = IntegralNumType integralType
    instance IsBounded Word32 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Word32 where
      singleType = NumSingleType numType
    instance IsScalar Word32 where
      scalarType = SingleScalarType singleType
    type instance BitSize Word32 = 32
    instance IsIntegral Word64 where
      integralType = TypeWord64
    instance IsNum Word64 where
      numType = IntegralNumType integralType
    instance IsBounded Word64 where
      boundedType = IntegralBoundedType integralType
    instance IsSingle Word64 where
      singleType = NumSingleType numType
    instance IsScalar Word64 where
      scalarType = SingleScalarType singleType
    type instance BitSize Word64 = 64
    instance IsFloating Half where
      floatingType = TypeHalf
    instance IsNum Half where
      numType = FloatingNumType floatingType
    instance IsSingle Half where
      singleType = NumSingleType numType
    instance IsScalar Half where
      scalarType = SingleScalarType singleType
    type instance BitSize Half = 16
    instance IsFloating Float where
      floatingType = TypeFloat
    instance IsNum Float where
      numType = FloatingNumType floatingType
    instance IsSingle Float where
      singleType = NumSingleType numType
    instance IsScalar Float where
      scalarType = SingleScalarType singleType
    type instance BitSize Float = 32
    instance IsFloating Double where
      floatingType = TypeDouble
    instance IsNum Double where
      numType = FloatingNumType floatingType
    instance IsSingle Double where
      singleType = NumSingleType numType
    instance IsScalar Double where
      scalarType = SingleScalarType singleType
    type instance BitSize Double = 64
    instance KnownNat n_a14HI => IsScalar (Vec n_a14HI Int) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HI))))
               singleType)
    type instance BitSize (Vec w_a14HJ Int) = (*) w_a14HJ 64
    instance KnownNat n_a14HK => IsScalar (Vec n_a14HK Int8) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HK))))
               singleType)
    type instance BitSize (Vec w_a14HL Int8) = (*) w_a14HL 8
    instance KnownNat n_a14HM => IsScalar (Vec n_a14HM Int16) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HM))))
               singleType)
    type instance BitSize (Vec w_a14HN Int16) = (*) w_a14HN 16
    instance KnownNat n_a14HO => IsScalar (Vec n_a14HO Int32) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HO))))
               singleType)
    type instance BitSize (Vec w_a14HP Int32) = (*) w_a14HP 32
    instance KnownNat n_a14HQ => IsScalar (Vec n_a14HQ Int64) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HQ))))
               singleType)
    type instance BitSize (Vec w_a14HR Int64) = (*) w_a14HR 64
    instance KnownNat n_a14HS => IsScalar (Vec n_a14HS Word) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HS))))
               singleType)
    type instance BitSize (Vec w_a14HT Word) = (*) w_a14HT 64
    instance KnownNat n_a14HU => IsScalar (Vec n_a14HU Word8) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HU))))
               singleType)
    type instance BitSize (Vec w_a14HV Word8) = (*) w_a14HV 8
    instance KnownNat n_a14HW => IsScalar (Vec n_a14HW Word16) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HW))))
               singleType)
    type instance BitSize (Vec w_a14HX Word16) = (*) w_a14HX 16
    instance KnownNat n_a14HY => IsScalar (Vec n_a14HY Word32) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14HY))))
               singleType)
    type instance BitSize (Vec w_a14HZ Word32) = (*) w_a14HZ 32
    instance KnownNat n_a14I0 => IsScalar (Vec n_a14I0 Word64) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14I0))))
               singleType)
    type instance BitSize (Vec w_a14I1 Word64) = (*) w_a14I1 64
    instance KnownNat n_a14I2 => IsScalar (Vec n_a14I2 Half) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14I2))))
               singleType)
    type instance BitSize (Vec w_a14I3 Half) = (*) w_a14I3 16
    instance KnownNat n_a14I4 => IsScalar (Vec n_a14I4 Float) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14I4))))
               singleType)
    type instance BitSize (Vec w_a14I5 Float) = (*) w_a14I5 32
    instance KnownNat n_a14I6 => IsScalar (Vec n_a14I6 Double) where
      scalarType
        = VectorScalarType
            ((VectorType (fromIntegral (natVal' (proxy# :: Proxy# n_a14I6))))
               singleType)
    type instance BitSize (Vec w_a14I7 Double) = (*) w_a14I7 64
[ 27 of 150] Compiling Data.Array.Accelerate.Classes.RealFrac[boot]
[ 28 of 150] Compiling Data.Array.Accelerate.Sugar.Foreign
[ 29 of 150] Compiling Data.Array.Accelerate.Representation.Type
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Representation/Type.hs:(189,1)-(199,18): Splicing declarations
    runQ
      $ let
          mkT_a1ieL :: Int -> Q Dec
          mkT_a1ieL n_a1ieM
            = let
                xs_a1ieN
                  = [mkName ('x' : show i_a1ieQ) | i_a1ieQ <- [0 .. n_a1ieM - 1]]
                ts_a1ieO = map varT xs_a1ieN
                rhs_a1ieP
                  = foldl
                      (\ a_a1ieR b_a1ieS
                         -> [t| ($a_a1ieR, $b_a1ieS) |]
                            pending(rn) [<splice_a1ieU, b_a1ieS>, <splice_a1ieT, a_a1ieR>])
                      [t| () |] ts_a1ieO
              in
                tySynD
                  (mkName ("Tup" ++ show n_a1ieM)) (map plainTV xs_a1ieN) rhs_a1ieP
        in mapM mkT_a1ieL [2 .. 16]
  ======>
    type Tup2 x0 x1 = (((), x0), x1)
    type Tup3 x0 x1 x2 = ((((), x0), x1), x2)
    type Tup4 x0 x1 x2 x3 = (((((), x0), x1), x2), x3)
    type Tup5 x0 x1 x2 x3 x4 = ((((((), x0), x1), x2), x3), x4)
    type Tup6 x0 x1 x2 x3 x4 x5 =
        (((((((), x0), x1), x2), x3), x4), x5)
    type Tup7 x0 x1 x2 x3 x4 x5 x6 =
        ((((((((), x0), x1), x2), x3), x4), x5), x6)
    type Tup8 x0 x1 x2 x3 x4 x5 x6 x7 =
        (((((((((), x0), x1), x2), x3), x4), x5), x6), x7)
    type Tup9 x0 x1 x2 x3 x4 x5 x6 x7 x8 =
        ((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8)
    type Tup10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 =
        (((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8), x9)
    type Tup11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 =
        ((((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8), x9),
         x10)
    type Tup12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 =
        (((((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8), x9),
          x10),
         x11)
    type Tup13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 =
        ((((((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8), x9),
           x10),
          x11),
         x12)
    type Tup14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 =
        (((((((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8), x9),
            x10),
           x11),
          x12),
         x13)
    type Tup15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 =
        ((((((((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8),
              x9),
             x10),
            x11),
           x12),
          x13),
         x14)
    type Tup16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 =
        (((((((((((((((((), x0), x1), x2), x3), x4), x5), x6), x7), x8),
               x9),
              x10),
             x11),
            x12),
           x13),
          x14),
         x15)
[ 30 of 150] Compiling Data.Array.Accelerate.Representation.Vec
[ 31 of 150] Compiling Data.Array.Accelerate.Representation.Tag
[ 32 of 150] Compiling Data.Array.Accelerate.Sugar.Tag
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Sugar/Tag.hs:(73,1)-(83,22): Splicing declarations
    runQ
      $ do let mkTuple_a1pnb :: Int -> Q Dec
               mkTuple_a1pnb n_a1pnc
                 = let
                     xs_a1pnd
                       = [mkName ('x' : show i_a1png) | i_a1png <- [0 .. n_a1pnc - 1]]
                     ts_a1pne = map varT xs_a1pnd
                     res_a1pnf = tupT ts_a1pne
                   in
                     instanceD
                       (return [])
                       [t| Tagged $res_a1pnf |]
                       pending(rn) [<splice_a1pnh, res_a1pnf>]
                       []
           mapM mkTuple_a1pnb [2 .. 16]
  ======>
    instance Tagged (x0, x1)
    instance Tagged (x0, x1, x2)
    instance Tagged (x0, x1, x2, x3)
    instance Tagged (x0, x1, x2, x3, x4)
    instance Tagged (x0, x1, x2, x3, x4, x5)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                     x12)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                     x12, x13)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                     x12, x13, x14)
    instance Tagged (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                     x12, x13, x14, x15)
[ 33 of 150] Compiling Data.Array.Accelerate.Representation.Shape
[ 34 of 150] Compiling Data.Array.Accelerate.Representation.Slice
[ 35 of 150] Compiling Data.Array.Accelerate.Representation.Elt
[ 36 of 150] Compiling Data.Array.Accelerate.Sugar.Elt
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Sugar/Elt.hs:(300,1)-(398,39): Splicing declarations
    runQ
      $ do let integralTypes_a1xRu :: [Name]
               integralTypes_a1xRu
                 = [''Int, ''Int8, ''Int16, ''Int32, ''Int64, ''Word, ''Word8,
                    ''Word16, ''Word32, ''Word64]
               floatingTypes_a1xRv :: [Name]
               floatingTypes_a1xRv = [''Half, ''Float, ''Double]
               newtypes_a1xRw :: [Name]
               newtypes_a1xRw
                 = [''CShort, ''CUShort, ''CInt, ''CUInt, ''CLong, ''CULong,
                    ''CLLong, ''CULLong, ''CFloat, ''CDouble, ''CChar, ''CSChar,
                    ''CUChar]
               mkSimple_a1xRx :: Name -> Q [Dec]
               mkSimple_a1xRx name_a1xRA
                 = let t_a1xRB = conT name_a1xRA
                   in
                     [d| instance Elt $t_a1xRB where
                           type EltR $t_a1xRB = $t_a1xRB
                           eltR = TupRsingle scalarType
                           tagsR = [TagRsingle scalarType]
                           fromElt = id
                           toElt = id |]
                     pending(rn) [<splice_a1xRE, t_a1xRB>, <splice_a1xRD, t_a1xRB>,
                                  <splice_a1xRC, t_a1xRB>]
               mkTuple_a1xRy :: Int -> Q Dec
               mkTuple_a1xRy n_a1xRF
                 = let
                     xs_a1xRG
                       = [mkName ('x' : show i_a1xRK) | i_a1xRK <- [0 .. n_a1xRF - 1]]
                     ts_a1xRH = map varT xs_a1xRG
                     res_a1xRI = tupT ts_a1xRH
                     ctx_a1xRJ = mapM (appT [t| Elt |]) ts_a1xRH
                   in
                     instanceD
                       ctx_a1xRJ
                       [t| Elt $res_a1xRI |]
                       pending(rn) [<splice_a1xRL, res_a1xRI>]
                       []
               mkNewtype_a1xRz :: Name -> Q [Dec]
               mkNewtype_a1xRz name_a1xRM
                 = do r_a1xRN <- reify name_a1xRM
                      base_a1xRP <- case r_a1xRN of
                                      TyConI (NewtypeD _ _ _ _ (NormalC _ [(_, ConT b_a1xRO)]) _)
                                        -> return b_a1xRO
                                      _ -> error "unexpected case generating newtype Elt instance"
                      [d| instance Elt $(conT name_a1xRM) where
                            type EltR $(conT name_a1xRM) = $(conT base_a1xRP)
                            eltR = TupRsingle scalarType
                            tagsR = [TagRsingle scalarType]
                            fromElt $(conP (mkName (nameBase name_a1xRM)) [varP (mkName "x")])
                              = x
                            toElt = $(conE (mkName (nameBase name_a1xRM))) |]
                      pending(rn) [<splice_a1xRU, conT base_a1xRP>,
                                   <splice_a1xRT, conT name_a1xRM>,
                                   <splice_a1xRS, conE (mkName (nameBase name_a1xRM))>,
                                   <splice_a1xRR, conP
                                                    (mkName (nameBase name_a1xRM))
                                                    [varP (mkName "x")]>,
                                   <splice_a1xRQ, conT name_a1xRM>]
           ss_a1xRV <- mapM
                         mkSimple_a1xRx (integralTypes_a1xRu ++ floatingTypes_a1xRv)
           ns_a1xRW <- mapM mkNewtype_a1xRz newtypes_a1xRw
           ts_a1xRX <- mapM mkTuple_a1xRy [2 .. 16]
           return (concat ss_a1xRV ++ concat ns_a1xRW ++ ts_a1xRX)
  ======>
    instance Elt Int where
      type EltR Int = Int
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Int8 where
      type EltR Int8 = Int8
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Int16 where
      type EltR Int16 = Int16
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Int32 where
      type EltR Int32 = Int32
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Int64 where
      type EltR Int64 = Int64
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Word where
      type EltR Word = Word
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Word8 where
      type EltR Word8 = Word8
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Word16 where
      type EltR Word16 = Word16
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Word32 where
      type EltR Word32 = Word32
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Word64 where
      type EltR Word64 = Word64
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Half where
      type EltR Half = Half
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Float where
      type EltR Float = Float
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt Double where
      type EltR Double = Double
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt = id
      toElt = id
    instance Elt CShort where
      type EltR CShort = Int16
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CShort x) = x
      toElt = CShort
    instance Elt CUShort where
      type EltR CUShort = Word16
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CUShort x) = x
      toElt = CUShort
    instance Elt CInt where
      type EltR CInt = Int32
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CInt x) = x
      toElt = CInt
    instance Elt CUInt where
      type EltR CUInt = Word32
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CUInt x) = x
      toElt = CUInt
    instance Elt CLong where
      type EltR CLong = Int64
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CLong x) = x
      toElt = CLong
    instance Elt CULong where
      type EltR CULong = Word64
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CULong x) = x
      toElt = CULong
    instance Elt CLLong where
      type EltR CLLong = Int64
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CLLong x) = x
      toElt = CLLong
    instance Elt CULLong where
      type EltR CULLong = Word64
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CULLong x) = x
      toElt = CULLong
    instance Elt CFloat where
      type EltR CFloat = Float
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CFloat x) = x
      toElt = CFloat
    instance Elt CDouble where
      type EltR CDouble = Double
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CDouble x) = x
      toElt = CDouble
    instance Elt CChar where
      type EltR CChar = Int8
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CChar x) = x
      toElt = CChar
    instance Elt CSChar where
      type EltR CSChar = Int8
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CSChar x) = x
      toElt = CSChar
    instance Elt CUChar where
      type EltR CUChar = Word8
      eltR = TupRsingle scalarType
      tagsR = [TagRsingle scalarType]
      fromElt (CUChar x) = x
      toElt = CUChar
    instance (Elt x0, Elt x1) => Elt (x0, x1)
    instance (Elt x0, Elt x1, Elt x2) => Elt (x0, x1, x2)
    instance (Elt x0, Elt x1, Elt x2, Elt x3) => Elt (x0, x1, x2, x3)
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4) =>
             Elt (x0, x1, x2, x3, x4)
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5) =>
             Elt (x0, x1, x2, x3, x4, x5)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6) =>
             Elt (x0, x1, x2, x3, x4, x5, x6)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9,
              Elt x10) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9,
              Elt x10,
              Elt x11) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9,
              Elt x10,
              Elt x11,
              Elt x12) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9,
              Elt x10,
              Elt x11,
              Elt x12,
              Elt x13) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9,
              Elt x10,
              Elt x11,
              Elt x12,
              Elt x13,
              Elt x14) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                  x14)
    instance (Elt x0,
              Elt x1,
              Elt x2,
              Elt x3,
              Elt x4,
              Elt x5,
              Elt x6,
              Elt x7,
              Elt x8,
              Elt x9,
              Elt x10,
              Elt x11,
              Elt x12,
              Elt x13,
              Elt x14,
              Elt x15) =>
             Elt (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                  x14, x15)
[ 37 of 150] Compiling Data.Array.Accelerate.Sugar.Vec
[ 38 of 150] Compiling Data.Array.Accelerate.Sugar.Shape
[ 39 of 150] Compiling Data.Array.Accelerate.Array.Unique
[ 40 of 150] Compiling Data.Array.Accelerate.Array.Buffer
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Array/Buffer.hs:(391,1)-(395,70): Splicing declarations
    runQ
      [d| type HTYPE_INT_a26Tq =
              $(case finiteBitSize (undefined :: Int) of
                  32 -> [t| Int32 |]
                  64 -> [t| Int64 |]
                  _ -> error "I don't know what architecture I am") |]
      pending(rn) [<splice_a26Tr, case
                                      finiteBitSize (undefined :: Int)
                                  of
                                    32 -> [t| Int32 |]
                                    64 -> [t| Int64 |]
                                    _ -> error "I don't know what architecture I am">]
  ======>
    type HTYPE_INT_a26Vg = Int64
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Array/Buffer.hs:(397,1)-(401,70): Splicing declarations
    runQ
      [d| type HTYPE_WORD_a26Vp =
              $(case finiteBitSize (undefined :: Word) of
                  32 -> [t| Word32 |]
                  64 -> [t| Word64 |]
                  _ -> error "I don't know what architecture I am") |]
      pending(rn) [<splice_a26Vq, case
                                      finiteBitSize (undefined :: Word)
                                  of
                                    32 -> [t| Word32 |]
                                    64 -> [t| Word64 |]
                                    _ -> error "I don't know what architecture I am">]
  ======>
    type HTYPE_WORD_a26WX = Word64
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Array/Buffer.hs:(403,1)-(407,70): Splicing declarations
    runQ
      [d| type HTYPE_CLONG_a26X6 =
              $(case finiteBitSize (undefined :: CLong) of
                  32 -> [t| Int32 |]
                  64 -> [t| Int64 |]
                  _ -> error "I don't know what architecture I am") |]
      pending(rn) [<splice_a26X7, case
                                      finiteBitSize (undefined :: CLong)
                                  of
                                    32 -> [t| Int32 |]
                                    64 -> [t| Int64 |]
                                    _ -> error "I don't know what architecture I am">]
  ======>
    type HTYPE_CLONG_a26YE = Int64
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Array/Buffer.hs:(409,1)-(413,70): Splicing declarations
    runQ
      [d| type HTYPE_CULONG_a26YN =
              $(case finiteBitSize (undefined :: CULong) of
                  32 -> [t| Word32 |]
                  64 -> [t| Word64 |]
                  _ -> error "I don't know what architecture I am") |]
      pending(rn) [<splice_a26YO, case
                                      finiteBitSize (undefined :: CULong)
                                  of
                                    32 -> [t| Word32 |]
                                    64 -> [t| Word64 |]
                                    _ -> error "I don't know what architecture I am">]
  ======>
    type HTYPE_CULONG_a270l = Word64
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Array/Buffer.hs:(415,1)-(418,38): Splicing declarations
    runQ
      [d| type HTYPE_CCHAR_a270u =
              $(if isSigned (undefined :: CChar) then
                    [t| Int8 |]
                else
                    [t| Word8 |]) |]
      pending(rn) [<splice_a270v, if isSigned (undefined :: CChar) then
                                      [t| Int8 |]
                                  else
                                      [t| Word8 |]>]
  ======>
    type HTYPE_CCHAR_a271p = Int8
[ 41 of 150] Compiling Data.Array.Accelerate.Representation.Array
[ 42 of 150] Compiling Data.Array.Accelerate.Sugar.Array
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Sugar/Array.hs:(311,1)-(323,22): Splicing declarations
    runQ
      $ do let mkTuple_a2nyB :: Int -> Q Dec
               mkTuple_a2nyB n_a2nyC
                 = let
                     xs_a2nyD
                       = [mkName ('x' : show i_a2nyH) | i_a2nyH <- [0 .. n_a2nyC - 1]]
                     ts_a2nyE = map varT xs_a2nyD
                     res_a2nyF = tupT ts_a2nyE
                     ctx_a2nyG = mapM (appT [t| Arrays |]) ts_a2nyE
                   in
                     instanceD
                       ctx_a2nyG
                       [t| Arrays $res_a2nyF |]
                       pending(rn) [<splice_a2nyI, res_a2nyF>]
                       []
           mapM mkTuple_a2nyB [2 .. 16]
  ======>
    instance (Arrays x0, Arrays x1) => Arrays (x0, x1)
    instance (Arrays x0, Arrays x1, Arrays x2) => Arrays (x0, x1, x2)
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3) =>
             Arrays (x0, x1, x2, x3)
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4) =>
             Arrays (x0, x1, x2, x3, x4)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5) =>
             Arrays (x0, x1, x2, x3, x4, x5)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9,
              Arrays x10) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9,
              Arrays x10,
              Arrays x11) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9,
              Arrays x10,
              Arrays x11,
              Arrays x12) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9,
              Arrays x10,
              Arrays x11,
              Arrays x12,
              Arrays x13) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9,
              Arrays x10,
              Arrays x11,
              Arrays x12,
              Arrays x13,
              Arrays x14) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                     x14)
    instance (Arrays x0,
              Arrays x1,
              Arrays x2,
              Arrays x3,
              Arrays x4,
              Arrays x5,
              Arrays x6,
              Arrays x7,
              Arrays x8,
              Arrays x9,
              Arrays x10,
              Arrays x11,
              Arrays x12,
              Arrays x13,
              Arrays x14,
              Arrays x15) =>
             Arrays (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                     x14, x15)
[ 43 of 150] Compiling Data.Array.Accelerate.Representation.Stencil
[ 44 of 150] Compiling Data.Array.Accelerate.Representation.Ground
[ 45 of 150] Compiling Data.Array.Accelerate.Array.Remote.Class
[ 46 of 150] Compiling Data.Array.Accelerate.Array.Remote.Table
[ 47 of 150] Compiling Data.Array.Accelerate.AST.LeftHandSide
[ 48 of 150] Compiling Data.Array.Accelerate.AST.Idx
[ 49 of 150] Compiling Data.Array.Accelerate.AST.Var
[ 50 of 150] Compiling Data.Array.Accelerate.AST.Environment
[ 51 of 150] Compiling Data.Array.Accelerate.AST.IdxSet
[ 52 of 150] Compiling Data.Array.Accelerate.Trafo.SkipEnvironment
[ 53 of 150] Compiling Data.Array.Accelerate.AST.CountEnv
[ 54 of 150] Compiling Data.Array.Accelerate.AST.Exp
[ 55 of 150] Compiling Data.Array.Accelerate.Pretty.Exp

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Exp.hs:48:1: warning: [-Wdeprecations]
    Module ‘Data.Text.Prettyprint.Doc’ is deprecated:
      Use "Prettyprinter" instead.
   |
48 | import Data.Text.Prettyprint.Doc
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 56 of 150] Compiling Data.Array.Accelerate.Pretty.Type

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Type.hs:28:1: warning: [-Wdeprecations]
    Module ‘Data.Text.Prettyprint.Doc’ is deprecated:
      Use "Prettyprinter" instead.
   |
28 | import Data.Text.Prettyprint.Doc
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 57 of 150] Compiling Data.Array.Accelerate.Analysis.Hash.Exp
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:122:42-59: Splicing expression
    hashQ "TupRunit" ======> (-7072078906498459620)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:123:42-59: Splicing expression
    hashQ "TupRpair" ======> 5833120886195651786
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:124:42-61: Splicing expression
    hashQ "TupRsingle" ======> (-2777795768009799008)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:127:58-87: Splicing expression
    hashQ "LeftHandSideWildcard" ======> (-5734264126767864178)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:128:58-83: Splicing expression
    hashQ "LeftHandSidePair" ======> (-4854569731591805356)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:129:58-84: Splicing expression
    hashQ "LeftHandSideArray" ======> 9202588003643582572
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:155:45-57: Splicing expression
    hashQ "Let" ======> (-5011854932532618349)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:156:45-58: Splicing expression
    hashQ "Evar" ======> 3693923227720443263
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:157:45-57: Splicing expression
    hashQ "Nil" ======> (-6317676723297268971)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:158:45-58: Splicing expression
    hashQ "Pair" ======> (-6948079798528238165)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:159:45-61: Splicing expression
    hashQ "VecPack" ======> (-743284470047954159)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:160:45-63: Splicing expression
    hashQ "VecUnpack" ======> 3682369375081246596
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:161:45-59: Splicing expression
    hashQ "Const" ======> (-7070488446027152385)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:162:45-59: Splicing expression
    hashQ "Undef" ======> 2041714246644653442
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:163:45-64: Splicing expression
    hashQ "IndexSlice" ======> (-8404040527218158917)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:164:45-63: Splicing expression
    hashQ "IndexFull" ======> (-5396864751260597131)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:165:45-61: Splicing expression
    hashQ "ToIndex" ======> (-2061273114016524951)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:166:45-63: Splicing expression
    hashQ "FromIndex" ======> (-269093925660377664)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:167:45-58: Splicing expression
    hashQ "Case" ======> 5627229783328524775
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:168:45-58: Splicing expression
    hashQ "Cond" ======> (-8950914513370005985)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:169:45-59: Splicing expression
    hashQ "While" ======> (-4689335287214990155)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:170:45-61: Splicing expression
    hashQ "PrimApp" ======> (-1035106447116550543)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:171:45-63: Splicing expression
    hashQ "PrimConst" ======> 6967324680344915271
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:172:45-64: Splicing expression
    hashQ "ArrayInstr" ======> (-2329892163721896096)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:173:45-63: Splicing expression
    hashQ "ShapeSize" ======> 1926829808084145072
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:174:45-61: Splicing expression
    hashQ "Foreign" ======> 4435258100552173274
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:175:45-60: Splicing expression
    hashQ "Coerce" ======> 1121203964389620476
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:185:38-51: Splicing expression
    hashQ "Body" ======> (-7467599635483170381)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:186:38-50: Splicing expression
    hashQ "Lam" ======> (-5015768094416664404)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:196:57-69: Splicing expression
    hashQ "Vec" ======> 7193292582469435272
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:203:47-59: Splicing expression
    hashQ "Int" ======> (-3193954292768860493)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:204:47-60: Splicing expression
    hashQ "Int8" ======> 6644022722411546908
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:205:47-61: Splicing expression
    hashQ "Int16" ======> (-6659655008507449478)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:206:47-61: Splicing expression
    hashQ "Int32" ======> (-6657671489530535276)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:207:47-61: Splicing expression
    hashQ "Int64" ======> (-6654869933902421321)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:208:47-60: Splicing expression
    hashQ "Word" ======> (-4778945901920748041)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:209:47-61: Splicing expression
    hashQ "Word8" ======> (-9023728617134112780)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:210:47-62: Splicing expression
    hashQ "Word16" ======> 7410754692204922038
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:211:47-62: Splicing expression
    hashQ "Word32" ======> 7408920706809444528
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:212:47-62: Splicing expression
    hashQ "Word64" ======> 7413591432205138743
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:215:65-78: Splicing expression
    hashQ "Half" ======> 2179162238959009606
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:216:65-79: Splicing expression
    hashQ "Float" ======> 5520187308622893230
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:217:65-80: Splicing expression
    hashQ "Double" ======> 3827604953854302804
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:220:46-67: Splicing expression
    hashQ "PrimMinBound" ======> 6035690971471924151
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:221:46-67: Splicing expression
    hashQ "PrimMaxBound" ======> 8728671393665923645
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:222:46-61: Splicing expression
    hashQ "PrimPi" ======> (-2874373554952107834)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:225:53-69: Splicing expression
    hashQ "PrimAdd" ======> (-1054259939676201663)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:226:53-69: Splicing expression
    hashQ "PrimSub" ======> 7799942273235092960
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:227:53-69: Splicing expression
    hashQ "PrimMul" ======> 6520779241402747956
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:228:53-69: Splicing expression
    hashQ "PrimNeg" ======> 5749520212918139140
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:229:53-69: Splicing expression
    hashQ "PrimAbs" ======> (-1052251131931838614)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:230:53-69: Splicing expression
    hashQ "PrimSig" ======> 7819077074097064499
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:231:53-70: Splicing expression
    hashQ "PrimQuot" ======> 2705680098668145930
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:232:53-69: Splicing expression
    hashQ "PrimRem" ======> 8315074466025174474
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:233:53-73: Splicing expression
    hashQ "PrimQuotRem" ======> (-483349154147416787)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:234:53-70: Splicing expression
    hashQ "PrimIDiv" ======> (-4905167159181018111)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:235:53-69: Splicing expression
    hashQ "PrimMod" ======> 6496057821958971686
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:236:53-72: Splicing expression
    hashQ "PrimDivMod" ======> 6891067468872721664
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:237:53-70: Splicing expression
    hashQ "PrimBAnd" ======> (-8494834341328761428)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:238:53-69: Splicing expression
    hashQ "PrimBOr" ======> (-1574169510489913835)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:239:53-70: Splicing expression
    hashQ "PrimBXor" ======> 5531889480809402512
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:240:53-70: Splicing expression
    hashQ "PrimBNot" ======> (-1507548996557220564)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:241:53-73: Splicing expression
    hashQ "PrimBShiftL" ======> 4844986538673491948
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:242:53-73: Splicing expression
    hashQ "PrimBShiftR" ======> 4844957951371158450
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:243:53-74: Splicing expression
    hashQ "PrimBRotateL" ======> 7646057993528714920
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:244:53-74: Splicing expression
    hashQ "PrimBRotateR" ======> 7646064590598484186
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:245:53-74: Splicing expression
    hashQ "PrimPopCount" ======> (-9070479757146742727)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:246:53-83: Splicing expression
    hashQ "PrimCountLeadingZeros" ======> 7974604241732328126
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:247:53-84: Splicing expression
    hashQ "PrimCountTrailingZeros" ======> 6344514437682848887
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:248:53-70: Splicing expression
    hashQ "PrimFDiv" ======> (-7312517260923049758)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:249:53-71: Splicing expression
    hashQ "PrimRecip" ======> (-8801322945643207453)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:250:53-69: Splicing expression
    hashQ "PrimSin" ======> 7819069377515667016
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:251:53-69: Splicing expression
    hashQ "PrimCos" ======> (-2345718810044370355)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:252:53-69: Splicing expression
    hashQ "PrimTan" ======> (-6451961530316215919)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:253:53-70: Splicing expression
    hashQ "PrimAsin" ======> 8551747674348905468
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:254:53-70: Splicing expression
    hashQ "PrimAcos" ======> (-1562962156602473423)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:255:53-70: Splicing expression
    hashQ "PrimAtan" ======> 6505291552474151817
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:256:53-70: Splicing expression
    hashQ "PrimSinh" ======> 6283101654831012941
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:257:53-70: Splicing expression
    hashQ "PrimCosh" ======> 700550678878089166
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:258:53-70: Splicing expression
    hashQ "PrimTanh" ======> (-2398116357551727982)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:259:53-71: Splicing expression
    hashQ "PrimAsinh" ======> 28954883233464861
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:260:53-71: Splicing expression
    hashQ "PrimAcosh" ======> 8749088660240569770
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:261:53-71: Splicing expression
    hashQ "PrimAtanh" ======> (-459490085642187550)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:262:53-77: Splicing expression
    hashQ "PrimExpFloating" ======> 1442118422616612255
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:263:53-70: Splicing expression
    hashQ "PrimSqrt" ======> (-8830648843137985395)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:264:53-69: Splicing expression
    hashQ "PrimLog" ======> 7053120990194181988
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:265:53-70: Splicing expression
    hashQ "PrimFPow" ======> 3627013205503569243
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:266:53-73: Splicing expression
    hashQ "PrimLogBase" ======> (-1185991424042441627)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:267:53-71: Splicing expression
    hashQ "PrimAtan2" ======> (-459549459270110944)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:268:53-74: Splicing expression
    hashQ "PrimTruncate" ======> (-8764491862781316995)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:269:53-71: Splicing expression
    hashQ "PrimRound" ======> 7537103389188557632
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:270:53-71: Splicing expression
    hashQ "PrimFloor" ======> 5748757982869650182
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:271:53-73: Splicing expression
    hashQ "PrimCeiling" ======> 500094358470643901
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:272:53-71: Splicing expression
    hashQ "PrimIsNaN" ======> 6611011120478187849
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:273:53-76: Splicing expression
    hashQ "PrimIsInfinite" ======> 719164166098501069
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:274:53-68: Splicing expression
    hashQ "PrimLt" ======> (-2878282318789641043)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:275:53-68: Splicing expression
    hashQ "PrimGt" ======> (-2888699091953230578)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:276:53-70: Splicing expression
    hashQ "PrimLtEq" ======> 7419860289775961577
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:277:53-70: Splicing expression
    hashQ "PrimGtEq" ======> (-4122964897185798886)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:278:53-68: Splicing expression
    hashQ "PrimEq" ======> (-2886745259790278081)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:279:53-69: Splicing expression
    hashQ "PrimNEq" ======> 5779908515292579554
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:280:53-69: Splicing expression
    hashQ "PrimMax" ======> 6501652137122173900
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:281:53-69: Splicing expression
    hashQ "PrimMin" ======> 6494076502005313906
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:282:53-78: Splicing expression
    hashQ "PrimFromIntegral" ======> (-3192132577526936829)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:283:53-76: Splicing expression
    hashQ "PrimToFloating" ======> 5385320230482078714
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:284:53-70: Splicing expression
    hashQ "PrimLAnd" ======> (-660760726092321066)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:285:53-69: Splicing expression
    hashQ "PrimLOr" ======> 7022707399052292715
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:286:53-70: Splicing expression
    hashQ "PrimLNot" ======> (-6409166946057964070)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:290:39-56: Splicing expression
    hashQ "TupRunit" ======> (-7072078906498459620)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:291:39-58: Splicing expression
    hashQ "TupRsingle" ======> (-2777795768009799008)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:292:39-56: Splicing expression
    hashQ "TupRpair" ======> 5833120886195651786
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:301:50-75: Splicing expression
    hashQ "SingleScalarType" ======> (-4396715023704579597)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:302:50-75: Splicing expression
    hashQ "VectorScalarType" ======> 7128673772495747560
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:305:47-69: Splicing expression
    hashQ "NumSingleType" ======> (-6332140206658740844)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:308:46-65: Splicing expression
    hashQ "VectorType" ======> (-26893419618111458)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:311:54-82: Splicing expression
    hashQ "IntegralBoundedType" ======> (-4858321326386436261)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:314:46-70: Splicing expression
    hashQ "IntegralNumType" ======> 2532990460142099782
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:315:46-70: Splicing expression
    hashQ "FloatingNumType" ======> (-3419277810292042724)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:318:44-56: Splicing expression
    hashQ "Int" ======> (-3193954292768860493)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:319:44-57: Splicing expression
    hashQ "Int8" ======> 6644022722411546908
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:320:44-58: Splicing expression
    hashQ "Int16" ======> (-6659655008507449478)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:321:44-58: Splicing expression
    hashQ "Int32" ======> (-6657671489530535276)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:322:44-58: Splicing expression
    hashQ "Int64" ======> (-6654869933902421321)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:323:44-57: Splicing expression
    hashQ "Word" ======> (-4778945901920748041)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:324:44-58: Splicing expression
    hashQ "Word8" ======> (-9023728617134112780)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:325:44-59: Splicing expression
    hashQ "Word16" ======> 7410754692204922038
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:326:44-59: Splicing expression
    hashQ "Word32" ======> 7408920706809444528
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:327:44-59: Splicing expression
    hashQ "Word64" ======> 7413591432205138743
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:330:44-57: Splicing expression
    hashQ "Half" ======> 2179162238959009606
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:331:44-58: Splicing expression
    hashQ "Float" ======> 5520187308622893230
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:332:44-59: Splicing expression
    hashQ "Double" ======> 3827604953854302804
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:335:46-63: Splicing expression
    hashQ "SliceNil" ======> 1051082469295578302
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:336:46-63: Splicing expression
    hashQ "SliceAll" ======> 9154734955235455330
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:337:46-65: Splicing expression
    hashQ "sliceFixed" ======> (-1823924576814470735)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:340:35-51: Splicing expression
    hashQ "Nothing" ======> 7706703620533934663
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Exp.hs:341:35-48: Splicing expression
    hashQ "Just" ======> 1849541771167607853
[ 58 of 150] Compiling Data.Array.Accelerate.AST
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST.hs:510:45-71: Splicing expression
    hashQ ("Index" :: String) ======> 1942147710713815296
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST.hs:511:45-77: Splicing expression
    hashQ ("LinearIndex" :: String) ======> (-5767244494494203251)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST.hs:512:45-71: Splicing expression
    hashQ ("Shape" :: String) ======> (-8888828770332863923)
[ 59 of 150] Compiling Data.Array.Accelerate.Smart
[ 60 of 150] Compiling Data.Array.Accelerate.Unsafe
[ 61 of 150] Compiling Data.Array.Accelerate.Pattern
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pattern.hs:(120,1)-(220,36): Splicing declarations
    runQ
      $ do let mkAccPattern_a5iHO :: Int -> Q [Dec]
               mkAccPattern_a5iHO n_a5iHR
                 = do a_a5iHS <- newName "a"
                      let xs_a5iHT
                            = [mkName ('x' : show i_a5iHY) | i_a5iHY <- [0 .. n_a5iHR - 1]]
                          b_a5iHU
                            = tupT
                                (map
                                   (\ t_a5iHZ
                                      -> [t| Acc $(varT t_a5iHZ) |]
                                         pending(rn) [<splice_a5iI0, varT t_a5iHZ>])
                                   xs_a5iHT)
                          snoc_a5iHV
                            = foldl
                                (\ sn_a5iI1 t_a5iI2
                                   -> [t| ($sn_a5iI1, ArraysR $(varT t_a5iI2)) |]
                                      pending(rn) [<splice_a5iI4, varT t_a5iI2>,
                                                   <splice_a5iI3, sn_a5iI1>])
                                [t| () |] xs_a5iHT
                          context_a5iHW
                            = tupT
                                $ [t| Arrays $(varT a_a5iHS) |]
                                  pending(rn) [<splice_a5iI5, varT a_a5iHS>]
                                    : [t| ArraysR $(varT a_a5iHS) ~ $snoc_a5iHV |]
                                      pending(rn) [<splice_a5iI7, snoc_a5iHV>,
                                                   <splice_a5iI6, varT a_a5iHS>]
                                        : map
                                            (\ t_a5iI8
                                               -> [t| Arrays $(varT t_a5iI8) |]
                                                  pending(rn) [<splice_a5iI9, varT t_a5iI8>])
                                            xs_a5iHT
                          get_a5iHX x_a5iIa 0
                            = [| Acc (SmartAcc (Aprj PairIdxRight $x_a5iIa)) |]
                              pending(rn) [<splice_a5iIb, x_a5iIa>]
                          get_a5iHX x_a5iIc i_a5iId
                            = get_a5iHX
                                [| SmartAcc (Aprj PairIdxLeft $x_a5iIc) |]
                                pending(rn) [<splice_a5iIe, x_a5iIc>]
                                (i_a5iId - 1)
                      _x_a5iIf <- newName "_x"
                      [d| instance $context_a5iHW =>
                                   IsPattern Acc $(varT a_a5iHS) $b_a5iHU where
                            builder
                              $(tupP
                                  (map
                                     (\ x_a5iIk
                                        -> [p| Acc $(varP x_a5iIk) |]
                                           pending(rn) [<splice_a5iIl, varP x_a5iIk>])
                                     xs_a5iHT))
                              = Acc
                                  $(foldl
                                      (\ vs_a5iIn v_a5iIo
                                         -> [| SmartAcc ($vs_a5iIn `Apair` $(varE v_a5iIo)) |]
                                            pending(rn) [<splice_a5iIq, varE v_a5iIo>,
                                                         <splice_a5iIp, vs_a5iIn>])
                                      [| SmartAcc Anil |] xs_a5iHT)
                            matcher (Acc $(varP _x_a5iIf))
                              = $(tupE
                                    (map
                                       (get_a5iHX (varE _x_a5iIf))
                                       [(n_a5iHR - 1), (n_a5iHR - 2) .. 0])) |]
                      pending(rn) [<splice_a5iIs, tupE
                                                    (map
                                                       (get_a5iHX (varE _x_a5iIf))
                                                       [(n_a5iHR - 1), (n_a5iHR - 2) .. 0])>,
                                   <splice_a5iIr, varP _x_a5iIf>,
                                   <splice_a5iIm, foldl
                                                    (\ vs_a5iIn v_a5iIo
                                                       -> [| SmartAcc
                                                               ($vs_a5iIn
                                                                  `Apair` $(varE v_a5iIo)) |]
                                                          pending(rn) [<splice_a5iIq, varE v_a5iIo>,
                                                                       <splice_a5iIp, vs_a5iIn>])
                                                    [| SmartAcc Anil |] xs_a5iHT>,
                                   <splice_a5iIj, tupP
                                                    (map
                                                       (\ x_a5iIk
                                                          -> [p| Acc $(varP x_a5iIk) |]
                                                             pending(rn) [<splice_a5iIl, varP
                                                                                           x_a5iIk>])
                                                       xs_a5iHT)>,
                                   <splice_a5iIi, b_a5iHU>, <splice_a5iIh, varT a_a5iHS>,
                                   <splice_a5iIg, context_a5iHW>]
               mkExpPattern_a5iHP :: Int -> Q [Dec]
               mkExpPattern_a5iHP n_a5iIt
                 = do a_a5iIu <- newName "a"
                      let xs_a5iIv
                            = [mkName ('x' : show i_a5iIC) | i_a5iIC <- [0 .. n_a5iIt - 1]]
                          ms_a5iIw
                            = [mkName ('m' : show i_a5iID) | i_a5iID <- [0 .. n_a5iIt - 1]]
                          tags_a5iIx
                            = foldl
                                (\ ts_a5iIE t_a5iIF
                                   -> [p| $ts_a5iIE `TagRpair` $(varP t_a5iIF) |]
                                      pending(rn) [<splice_a5iIH, varP t_a5iIF>,
                                                   <splice_a5iIG, ts_a5iIE>])
                                [p| TagRunit |] ms_a5iIw
                          b_a5iIy
                            = tupT
                                (map
                                   (\ t_a5iII
                                      -> [t| Exp $(varT t_a5iII) |]
                                         pending(rn) [<splice_a5iIJ, varT t_a5iII>])
                                   xs_a5iIv)
                          snoc_a5iIz
                            = foldl
                                (\ sn_a5iIK t_a5iIL
                                   -> [t| ($sn_a5iIK, EltR $(varT t_a5iIL)) |]
                                      pending(rn) [<splice_a5iIN, varT t_a5iIL>,
                                                   <splice_a5iIM, sn_a5iIK>])
                                [t| () |] xs_a5iIv
                          context_a5iIA
                            = tupT
                                $ [t| Elt $(varT a_a5iIu) |]
                                  pending(rn) [<splice_a5iIO, varT a_a5iIu>]
                                    : [t| EltR $(varT a_a5iIu) ~ $snoc_a5iIz |]
                                      pending(rn) [<splice_a5iIQ, snoc_a5iIz>,
                                                   <splice_a5iIP, varT a_a5iIu>]
                                        : map
                                            (\ t_a5iIR
                                               -> [t| Elt $(varT t_a5iIR) |]
                                                  pending(rn) [<splice_a5iIS, varT t_a5iIR>])
                                            xs_a5iIv
                          get_a5iIB x_a5iIT 0
                            = [| SmartExp (Prj PairIdxRight $x_a5iIT) |]
                              pending(rn) [<splice_a5iIU, x_a5iIT>]
                          get_a5iIB x_a5iIV i_a5iIW
                            = get_a5iIB
                                [| SmartExp (Prj PairIdxLeft $x_a5iIV) |]
                                pending(rn) [<splice_a5iIX, x_a5iIV>]
                                (i_a5iIW - 1)
                      _x_a5iIY <- newName "_x"
                      _y_a5iIZ <- newName "_y"
                      [d| instance $context_a5iIA =>
                                   IsPattern Exp $(varT a_a5iIu) $b_a5iIy where
                            builder
                              $(tupP
                                  (map
                                     (\ x_a5iJ4
                                        -> [p| Exp $(varP x_a5iJ4) |]
                                           pending(rn) [<splice_a5iJ5, varP x_a5iJ4>])
                                     xs_a5iIv))
                              = let
                                  _unmatch_a5iJ6 :: SmartExp a_a5iJ7 -> SmartExp a_a5iJ7
                                  _unmatch_a5iJ6 (SmartExp (Match _ $(varP _y_a5iIZ)))
                                    = $(varE _y_a5iIZ)
                                  _unmatch_a5iJ6 x_a5iJa = x_a5iJa
                                in
                                  Exp
                                    $(foldl
                                        (\ vs_a5iJc v_a5iJd
                                           -> [| SmartExp
                                                   ($vs_a5iJc
                                                      `Pair` _unmatch_a5iJ6 $(varE v_a5iJd)) |]
                                              pending(rn) [<splice_a5iJf, varE v_a5iJd>,
                                                           <splice_a5iJe, vs_a5iJc>])
                                        [| SmartExp Nil |] xs_a5iIv)
                            matcher (Exp $(varP _x_a5iIY))
                              = case $(varE _x_a5iIY) of
                                  SmartExp (Match $tags_a5iIx $(varP _y_a5iIZ))
                                    -> $(tupE
                                           [[| Exp
                                                 (SmartExp
                                                    (Match
                                                       $(varE m_a5iJl)
                                                       $(get_a5iIB (varE _x_a5iIY) i_a5iJm))) |]
                                            pending(rn) [<splice_a5iJo, get_a5iIB
                                                                          (varE _x_a5iIY) i_a5iJm>,
                                                         <splice_a5iJn, varE m_a5iJl>] |
                                              m_a5iJl <- ms_a5iIw | 
                                              i_a5iJm <- [(n_a5iIt - 1), (n_a5iIt - 2) .. 0]])
                                  _ -> $(tupE
                                           [[| Exp $(get_a5iIB (varE _x_a5iIY) i_a5iJq) |]
                                            pending(rn) [<splice_a5iJr, get_a5iIB
                                                                          (varE _x_a5iIY)
                                                                          i_a5iJq>] |
                                              i_a5iJq <- [(n_a5iIt - 1), (n_a5iIt - 2) .. 0]]) |]
                      pending(rn) [<splice_a5iJp, tupE
                                                    [[| Exp $(get_a5iIB (varE _x_a5iIY) i_a5iJq) |]
                                                     pending(rn) [<splice_a5iJr, get_a5iIB
                                                                                   (varE _x_a5iIY)
                                                                                   i_a5iJq>] |
                                                       i_a5iJq <- [(n_a5iIt - 1), (n_a5iIt
                                                                                     - 2) .. 0]]>,
                                   <splice_a5iJk, tupE
                                                    [[| Exp
                                                          (SmartExp
                                                             (Match
                                                                $(varE m_a5iJl)
                                                                $(get_a5iIB
                                                                    (varE _x_a5iIY) i_a5iJm))) |]
                                                     pending(rn) [<splice_a5iJo, get_a5iIB
                                                                                   (varE _x_a5iIY)
                                                                                   i_a5iJm>,
                                                                  <splice_a5iJn, varE m_a5iJl>] |
                                                       m_a5iJl <- ms_a5iIw | 
                                                       i_a5iJm <- [(n_a5iIt - 1), (n_a5iIt
                                                                                     - 2) .. 0]]>,
                                   <splice_a5iJj, varP _y_a5iIZ>, <splice_a5iJi, tags_a5iIx>,
                                   <splice_a5iJh, varE _x_a5iIY>, <splice_a5iJg, varP _x_a5iIY>,
                                   <splice_a5iJb, foldl
                                                    (\ vs_a5iJc v_a5iJd
                                                       -> [| SmartExp
                                                               ($vs_a5iJc
                                                                  `Pair`
                                                                    _unmatch_a5iJ6
                                                                      $(varE v_a5iJd)) |]
                                                          pending(rn) [<splice_a5iJf, varE v_a5iJd>,
                                                                       <splice_a5iJe, vs_a5iJc>])
                                                    [| SmartExp Nil |] xs_a5iIv>,
                                   <splice_a5iJ9, varE _y_a5iIZ>, <splice_a5iJ8, varP _y_a5iIZ>,
                                   <splice_a5iJ3, tupP
                                                    (map
                                                       (\ x_a5iJ4
                                                          -> [p| Exp $(varP x_a5iJ4) |]
                                                             pending(rn) [<splice_a5iJ5, varP
                                                                                           x_a5iJ4>])
                                                       xs_a5iIv)>,
                                   <splice_a5iJ2, b_a5iIy>, <splice_a5iJ1, varT a_a5iIu>,
                                   <splice_a5iJ0, context_a5iIA>]
               mkVecPattern_a5iHQ :: Int -> Q [Dec]
               mkVecPattern_a5iHQ n_a5iJs
                 = do a_a5iJt <- newName "a"
                      v_a5iJu <- newName "v"
                      let tup_a5iJv
                            = tupT
                                (replicate
                                   n_a5iJs
                                   ([t| Exp $(varT a_a5iJt) |]
                                    pending(rn) [<splice_a5iJA, varT a_a5iJt>]))
                          vec_a5iJw
                            = [t| Vec $(litT (numTyLit (fromIntegral n_a5iJs))) $(varT
                                                                                    a_a5iJt) |]
                              pending(rn) [<splice_a5iJC, varT a_a5iJt>,
                                           <splice_a5iJB, litT (numTyLit (fromIntegral n_a5iJs))>]
                          context_a5iJx
                            = [t| (Elt $(varT v_a5iJu), VecElt $(varT a_a5iJt),
                                   EltR $(varT v_a5iJu) ~ $vec_a5iJw) |]
                              pending(rn) [<splice_a5iJG, vec_a5iJw>,
                                           <splice_a5iJF, varT v_a5iJu>,
                                           <splice_a5iJE, varT a_a5iJt>,
                                           <splice_a5iJD, varT v_a5iJu>]
                          vecR_a5iJy
                            = foldr
                                appE
                                ([| VecRnil |] `appE` (varE 'singleType `appTypeE` varT a_a5iJt))
                                (replicate n_a5iJs [| VecRsucc |])
                          tR_a5iJz = tupT (replicate n_a5iJs (varT a_a5iJt))
                      [d| instance $context_a5iJx =>
                                   IsVector Exp $(varT v_a5iJu) $tup_a5iJv where
                            vpack x_a5iJK
                              = case builder x_a5iJK :: Exp $tR_a5iJz of {
                                  Exp x'_a5iJM -> Exp (SmartExp (VecPack $vecR_a5iJy x'_a5iJM)) }
                            vunpack (Exp x_a5iJO)
                              = matcher
                                  (Exp (SmartExp (VecUnpack $vecR_a5iJy x_a5iJO)) ::
                                     Exp $tR_a5iJz) |]
                      pending(rn) [<splice_a5iJQ, vecR_a5iJy>, <splice_a5iJP, tR_a5iJz>,
                                   <splice_a5iJN, vecR_a5iJy>, <splice_a5iJL, tR_a5iJz>,
                                   <splice_a5iJJ, tup_a5iJv>, <splice_a5iJI, varT v_a5iJu>,
                                   <splice_a5iJH, context_a5iJx>]
           es_a5iJR <- mapM mkExpPattern_a5iHP [0 .. 16]
           as_a5iJS <- mapM mkAccPattern_a5iHO [0 .. 16]
           vs_a5iJT <- mapM mkVecPattern_a5iHQ [2, 3, 4, 8, 16]
           return $ concat (es_a5iJR ++ as_a5iJS ++ vs_a5iJT)
  ======>
    instance (Elt a_a5jcL, EltR a_a5jcL ~ ()) =>
             IsPattern Exp a_a5jcL () where
      builder ()
        = let
            _unmatch_a5jcP :: SmartExp a_a5jcO -> SmartExp a_a5jcO
            _unmatch_a5jcP (SmartExp (Match _ _y_a5jcN)) = _y_a5jcN
            _unmatch_a5jcP x_a5jcQ = x_a5jcQ
          in Exp (SmartExp Nil)
      matcher (Exp _x_a5jcM)
        = case _x_a5jcM of
            SmartExp (Match TagRunit _y_a5jcN) -> ()
            _ -> ()
    instance (Elt a_a5jcR, EltR a_a5jcR ~ ((), EltR x0), Elt x0) =>
             IsPattern Exp a_a5jcR (Exp x0) where
      builder (Exp x0)
        = let
            _unmatch_a5jcV :: SmartExp a_a5jcU -> SmartExp a_a5jcU
            _unmatch_a5jcV (SmartExp (Match _ _y_a5jcT)) = _y_a5jcT
            _unmatch_a5jcV x_a5jcW = x_a5jcW
          in Exp (SmartExp (SmartExp Nil `Pair` _unmatch_a5jcV x0))
      matcher (Exp _x_a5jcS)
        = case _x_a5jcS of
            SmartExp (Match (TagRunit `TagRpair` m0) _y_a5jcT)
              -> Exp
                   (SmartExp ((Match m0) (SmartExp ((Prj PairIdxRight) _x_a5jcS))))
            _ -> Exp (SmartExp ((Prj PairIdxRight) _x_a5jcS))
    instance (Elt a_a5jcX, EltR a_a5jcX ~ (((), EltR x0), EltR x1),
              Elt x0, Elt x1) =>
             IsPattern Exp a_a5jcX (Exp x0, Exp x1) where
      builder (Exp x0, Exp x1)
        = let
            _unmatch_a5jd1 :: SmartExp a_a5jd0 -> SmartExp a_a5jd0
            _unmatch_a5jd1 (SmartExp (Match _ _y_a5jcZ)) = _y_a5jcZ
            _unmatch_a5jd1 x_a5jd2 = x_a5jd2
          in
            Exp
              (SmartExp
                 (SmartExp (SmartExp Nil `Pair` _unmatch_a5jd1 x0)
                    `Pair` _unmatch_a5jd1 x1))
      matcher (Exp _x_a5jcY)
        = case _x_a5jcY of
            SmartExp (Match ((TagRunit `TagRpair` m0) `TagRpair` m1) _y_a5jcZ)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jcY)))))), 
                  Exp
                    (SmartExp ((Match m1) (SmartExp ((Prj PairIdxRight) _x_a5jcY)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jcY)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jcY)))
    instance (Elt a_a5jd3,
              EltR a_a5jd3 ~ ((((), EltR x0), EltR x1), EltR x2), Elt x0, Elt x1,
              Elt x2) =>
             IsPattern Exp a_a5jd3 (Exp x0, Exp x1, Exp x2) where
      builder (Exp x0, Exp x1, Exp x2)
        = let
            _unmatch_a5jd7 :: SmartExp a_a5jd6 -> SmartExp a_a5jd6
            _unmatch_a5jd7 (SmartExp (Match _ _y_a5jd5)) = _y_a5jd5
            _unmatch_a5jd7 x_a5jd8 = x_a5jd8
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp (SmartExp Nil `Pair` _unmatch_a5jd7 x0)
                       `Pair` _unmatch_a5jd7 x1)
                    `Pair` _unmatch_a5jd7 x2))
      matcher (Exp _x_a5jd4)
        = case _x_a5jd4 of
            SmartExp (Match (((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2)
                            _y_a5jd5)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jd4)))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jd4)))))), 
                  Exp
                    (SmartExp ((Match m2) (SmartExp ((Prj PairIdxRight) _x_a5jd4)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jd4)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jd4)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jd4)))
    instance (Elt a_a5jd9,
              EltR a_a5jd9 ~ (((((), EltR x0), EltR x1), EltR x2), EltR x3),
              Elt x0, Elt x1, Elt x2, Elt x3) =>
             IsPattern Exp a_a5jd9 (Exp x0, Exp x1, Exp x2, Exp x3) where
      builder (Exp x0, Exp x1, Exp x2, Exp x3)
        = let
            _unmatch_a5jdd :: SmartExp a_a5jdc -> SmartExp a_a5jdc
            _unmatch_a5jdd (SmartExp (Match _ _y_a5jdb)) = _y_a5jdb
            _unmatch_a5jdd x_a5jde = x_a5jde
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdd x0)
                          `Pair` _unmatch_a5jdd x1)
                       `Pair` _unmatch_a5jdd x2)
                    `Pair` _unmatch_a5jdd x3))
      matcher (Exp _x_a5jda)
        = case _x_a5jda of
            SmartExp (Match ((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3)
                            _y_a5jdb)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jda)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jda)))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jda)))))), 
                  Exp
                    (SmartExp ((Match m3) (SmartExp ((Prj PairIdxRight) _x_a5jda)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jda)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jda)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jda)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jda)))
    instance (Elt a_a5jdf,
              EltR a_a5jdf
              ~ ((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4) =>
             IsPattern Exp a_a5jdf (Exp x0, Exp x1, Exp x2, Exp x3,
                                    Exp x4) where
      builder (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4)
        = let
            _unmatch_a5jdj :: SmartExp a_a5jdi -> SmartExp a_a5jdi
            _unmatch_a5jdj (SmartExp (Match _ _y_a5jdh)) = _y_a5jdh
            _unmatch_a5jdj x_a5jdk = x_a5jdk
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdj x0)
                             `Pair` _unmatch_a5jdj x1)
                          `Pair` _unmatch_a5jdj x2)
                       `Pair` _unmatch_a5jdj x3)
                    `Pair` _unmatch_a5jdj x4))
      matcher (Exp _x_a5jdg)
        = case _x_a5jdg of
            SmartExp (Match (((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4)
                            _y_a5jdh)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdg)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))))), 
                  Exp
                    (SmartExp ((Match m4) (SmartExp ((Prj PairIdxRight) _x_a5jdg)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdg)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdg)))
    instance (Elt a_a5jdl,
              EltR a_a5jdl
              ~
              (((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
               EltR x5),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5) =>
             IsPattern Exp a_a5jdl (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5) where
      builder (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5)
        = let
            _unmatch_a5jdp :: SmartExp a_a5jdo -> SmartExp a_a5jdo
            _unmatch_a5jdp (SmartExp (Match _ _y_a5jdn)) = _y_a5jdn
            _unmatch_a5jdp x_a5jdq = x_a5jdq
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdp x0)
                                `Pair` _unmatch_a5jdp x1)
                             `Pair` _unmatch_a5jdp x2)
                          `Pair` _unmatch_a5jdp x3)
                       `Pair` _unmatch_a5jdp x4)
                    `Pair` _unmatch_a5jdp x5))
      matcher (Exp _x_a5jdm)
        = case _x_a5jdm of
            SmartExp (Match ((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5)
                            _y_a5jdn)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdm)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdm)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))))), 
                  Exp
                    (SmartExp ((Match m5) (SmartExp ((Prj PairIdxRight) _x_a5jdm)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdm)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdm)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdm)))
    instance (Elt a_a5jdr,
              EltR a_a5jdr
              ~
              ((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                EltR x5),
               EltR x6),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6) =>
             IsPattern Exp a_a5jdr (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6) where
      builder (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6)
        = let
            _unmatch_a5jdv :: SmartExp a_a5jdu -> SmartExp a_a5jdu
            _unmatch_a5jdv (SmartExp (Match _ _y_a5jdt)) = _y_a5jdt
            _unmatch_a5jdv x_a5jdw = x_a5jdw
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdv x0)
                                   `Pair` _unmatch_a5jdv x1)
                                `Pair` _unmatch_a5jdv x2)
                             `Pair` _unmatch_a5jdv x3)
                          `Pair` _unmatch_a5jdv x4)
                       `Pair` _unmatch_a5jdv x5)
                    `Pair` _unmatch_a5jdv x6))
      matcher (Exp _x_a5jds)
        = case _x_a5jds of
            SmartExp (Match (((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6)
                            _y_a5jdt)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jds)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jds)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jds)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jds)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jds)))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jds)))))), 
                  Exp
                    (SmartExp ((Match m6) (SmartExp ((Prj PairIdxRight) _x_a5jds)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jds)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jds)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jds)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jds)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jds)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jds)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jds)))
    instance (Elt a_a5jdx,
              EltR a_a5jdx
              ~
              (((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                 EltR x5),
                EltR x6),
               EltR x7),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7) =>
             IsPattern Exp a_a5jdx (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7)
        = let
            _unmatch_a5jdB :: SmartExp a_a5jdA -> SmartExp a_a5jdA
            _unmatch_a5jdB (SmartExp (Match _ _y_a5jdz)) = _y_a5jdz
            _unmatch_a5jdB x_a5jdC = x_a5jdC
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdB x0)
                                      `Pair` _unmatch_a5jdB x1)
                                   `Pair` _unmatch_a5jdB x2)
                                `Pair` _unmatch_a5jdB x3)
                             `Pair` _unmatch_a5jdB x4)
                          `Pair` _unmatch_a5jdB x5)
                       `Pair` _unmatch_a5jdB x6)
                    `Pair` _unmatch_a5jdB x7))
      matcher (Exp _x_a5jdy)
        = case _x_a5jdy of
            SmartExp (Match ((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7)
                            _y_a5jdz)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdy)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdy)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdy)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdy)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))))), 
                  Exp
                    (SmartExp ((Match m7) (SmartExp ((Prj PairIdxRight) _x_a5jdy)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdy)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdy)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdy)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdy)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdy)))
    instance (Elt a_a5jdD,
              EltR a_a5jdD
              ~
              ((((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                  EltR x5),
                 EltR x6),
                EltR x7),
               EltR x8),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8) =>
             IsPattern Exp a_a5jdD (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8)
        = let
            _unmatch_a5jdH :: SmartExp a_a5jdG -> SmartExp a_a5jdG
            _unmatch_a5jdH (SmartExp (Match _ _y_a5jdF)) = _y_a5jdF
            _unmatch_a5jdH x_a5jdI = x_a5jdI
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdH x0)
                                         `Pair` _unmatch_a5jdH x1)
                                      `Pair` _unmatch_a5jdH x2)
                                   `Pair` _unmatch_a5jdH x3)
                                `Pair` _unmatch_a5jdH x4)
                             `Pair` _unmatch_a5jdH x5)
                          `Pair` _unmatch_a5jdH x6)
                       `Pair` _unmatch_a5jdH x7)
                    `Pair` _unmatch_a5jdH x8))
      matcher (Exp _x_a5jdE)
        = case _x_a5jdE of
            SmartExp (Match (((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8)
                            _y_a5jdF)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdE)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdE)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdE)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdE)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdE)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))))), 
                  Exp
                    (SmartExp ((Match m8) (SmartExp ((Prj PairIdxRight) _x_a5jdE)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdE)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdE)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdE)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdE)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdE)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdE)))
    instance (Elt a_a5jdJ,
              EltR a_a5jdJ
              ~
              (((((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                   EltR x5),
                  EltR x6),
                 EltR x7),
                EltR x8),
               EltR x9),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9) =>
             IsPattern Exp a_a5jdJ (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9)
        = let
            _unmatch_a5jdN :: SmartExp a_a5jdM -> SmartExp a_a5jdM
            _unmatch_a5jdN (SmartExp (Match _ _y_a5jdL)) = _y_a5jdL
            _unmatch_a5jdN x_a5jdO = x_a5jdO
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdN x0)
                                            `Pair` _unmatch_a5jdN x1)
                                         `Pair` _unmatch_a5jdN x2)
                                      `Pair` _unmatch_a5jdN x3)
                                   `Pair` _unmatch_a5jdN x4)
                                `Pair` _unmatch_a5jdN x5)
                             `Pair` _unmatch_a5jdN x6)
                          `Pair` _unmatch_a5jdN x7)
                       `Pair` _unmatch_a5jdN x8)
                    `Pair` _unmatch_a5jdN x9))
      matcher (Exp _x_a5jdK)
        = case _x_a5jdK of
            SmartExp (Match ((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9)
                            _y_a5jdL)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jdK)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdK)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdK)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdK)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdK)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdK)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))))), 
                  Exp
                    (SmartExp ((Match m9) (SmartExp ((Prj PairIdxRight) _x_a5jdK)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdK)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdK)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdK)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdK)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdK)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdK)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdK)))
    instance (Elt a_a5jdP,
              EltR a_a5jdP
              ~
              ((((((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                    EltR x5),
                   EltR x6),
                  EltR x7),
                 EltR x8),
                EltR x9),
               EltR x10),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9, Elt x10) =>
             IsPattern Exp a_a5jdP (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9, Exp x10) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9, Exp x10)
        = let
            _unmatch_a5jdT :: SmartExp a_a5jdS -> SmartExp a_a5jdS
            _unmatch_a5jdT (SmartExp (Match _ _y_a5jdR)) = _y_a5jdR
            _unmatch_a5jdT x_a5jdU = x_a5jdU
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp
                                            (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdT x0)
                                               `Pair` _unmatch_a5jdT x1)
                                            `Pair` _unmatch_a5jdT x2)
                                         `Pair` _unmatch_a5jdT x3)
                                      `Pair` _unmatch_a5jdT x4)
                                   `Pair` _unmatch_a5jdT x5)
                                `Pair` _unmatch_a5jdT x6)
                             `Pair` _unmatch_a5jdT x7)
                          `Pair` _unmatch_a5jdT x8)
                       `Pair` _unmatch_a5jdT x9)
                    `Pair` _unmatch_a5jdT x10))
      matcher (Exp _x_a5jdQ)
        = case _x_a5jdQ of
            SmartExp (Match (((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9) `TagRpair` m10)
                            _y_a5jdR)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jdQ)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jdQ)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdQ)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdQ)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdQ)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdQ)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdQ)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))))))), 
                  Exp
                    (SmartExp
                       ((Match m9)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))))), 
                  Exp
                    (SmartExp ((Match m10) (SmartExp ((Prj PairIdxRight) _x_a5jdQ)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jdQ)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdQ)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdQ)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdQ)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdQ)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdQ)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdQ)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdQ)))
    instance (Elt a_a5jdV,
              EltR a_a5jdV
              ~
              (((((((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                     EltR x5),
                    EltR x6),
                   EltR x7),
                  EltR x8),
                 EltR x9),
                EltR x10),
               EltR x11),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9, Elt x10, Elt x11) =>
             IsPattern Exp a_a5jdV (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9, Exp x10, Exp x11) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9, Exp x10, Exp x11)
        = let
            _unmatch_a5jdZ :: SmartExp a_a5jdY -> SmartExp a_a5jdY
            _unmatch_a5jdZ (SmartExp (Match _ _y_a5jdX)) = _y_a5jdX
            _unmatch_a5jdZ x_a5je0 = x_a5je0
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp
                                            (SmartExp
                                               (SmartExp (SmartExp Nil `Pair` _unmatch_a5jdZ x0)
                                                  `Pair` _unmatch_a5jdZ x1)
                                               `Pair` _unmatch_a5jdZ x2)
                                            `Pair` _unmatch_a5jdZ x3)
                                         `Pair` _unmatch_a5jdZ x4)
                                      `Pair` _unmatch_a5jdZ x5)
                                   `Pair` _unmatch_a5jdZ x6)
                                `Pair` _unmatch_a5jdZ x7)
                             `Pair` _unmatch_a5jdZ x8)
                          `Pair` _unmatch_a5jdZ x9)
                       `Pair` _unmatch_a5jdZ x10)
                    `Pair` _unmatch_a5jdZ x11))
      matcher (Exp _x_a5jdW)
        = case _x_a5jdW of
            SmartExp (Match ((((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9) `TagRpair` m10) `TagRpair` m11)
                            _y_a5jdX)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5jdW)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jdW)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jdW)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdW)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdW)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdW)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdW)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdW)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m9)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))))))), 
                  Exp
                    (SmartExp
                       ((Match m10)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))))), 
                  Exp
                    (SmartExp ((Match m11) (SmartExp ((Prj PairIdxRight) _x_a5jdW)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jdW)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jdW)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jdW)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jdW)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jdW)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jdW)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jdW)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jdW)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jdW)))
    instance (Elt a_a5je1,
              EltR a_a5je1
              ~
              ((((((((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                      EltR x5),
                     EltR x6),
                    EltR x7),
                   EltR x8),
                  EltR x9),
                 EltR x10),
                EltR x11),
               EltR x12),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9, Elt x10, Elt x11, Elt x12) =>
             IsPattern Exp a_a5je1 (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9, Exp x10, Exp x11,
                                    Exp x12) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9, Exp x10, Exp x11, Exp x12)
        = let
            _unmatch_a5je5 :: SmartExp a_a5je4 -> SmartExp a_a5je4
            _unmatch_a5je5 (SmartExp (Match _ _y_a5je3)) = _y_a5je3
            _unmatch_a5je5 x_a5je6 = x_a5je6
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp
                                            (SmartExp
                                               (SmartExp
                                                  (SmartExp (SmartExp Nil `Pair` _unmatch_a5je5 x0)
                                                     `Pair` _unmatch_a5je5 x1)
                                                  `Pair` _unmatch_a5je5 x2)
                                               `Pair` _unmatch_a5je5 x3)
                                            `Pair` _unmatch_a5je5 x4)
                                         `Pair` _unmatch_a5je5 x5)
                                      `Pair` _unmatch_a5je5 x6)
                                   `Pair` _unmatch_a5je5 x7)
                                `Pair` _unmatch_a5je5 x8)
                             `Pair` _unmatch_a5je5 x9)
                          `Pair` _unmatch_a5je5 x10)
                       `Pair` _unmatch_a5je5 x11)
                    `Pair` _unmatch_a5je5 x12))
      matcher (Exp _x_a5je2)
        = case _x_a5je2 of
            SmartExp (Match (((((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9) `TagRpair` m10) `TagRpair` m11) `TagRpair` m12)
                            _y_a5je3)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5je2)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5je2)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5je2)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5je2)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5je2)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5je2)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5je2)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5je2)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5je2)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m9)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5je2)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m10)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5je2)))))))), 
                  Exp
                    (SmartExp
                       ((Match m11)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5je2)))))), 
                  Exp
                    (SmartExp ((Match m12) (SmartExp ((Prj PairIdxRight) _x_a5je2)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5je2)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5je2)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5je2)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5je2)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5je2)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5je2)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5je2)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5je2)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5je2)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5je2)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5je2)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5je2)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5je2)))
    instance (Elt a_a5je7,
              EltR a_a5je7
              ~
              (((((((((((((((), EltR x0), EltR x1), EltR x2), EltR x3), EltR x4),
                       EltR x5),
                      EltR x6),
                     EltR x7),
                    EltR x8),
                   EltR x9),
                  EltR x10),
                 EltR x11),
                EltR x12),
               EltR x13),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9, Elt x10, Elt x11, Elt x12, Elt x13) =>
             IsPattern Exp a_a5je7 (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9, Exp x10, Exp x11,
                                    Exp x12, Exp x13) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9, Exp x10, Exp x11, Exp x12, Exp x13)
        = let
            _unmatch_a5jeb :: SmartExp a_a5jea -> SmartExp a_a5jea
            _unmatch_a5jeb (SmartExp (Match _ _y_a5je9)) = _y_a5je9
            _unmatch_a5jeb x_a5jec = x_a5jec
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp
                                            (SmartExp
                                               (SmartExp
                                                  (SmartExp
                                                     (SmartExp
                                                        (SmartExp Nil `Pair` _unmatch_a5jeb x0)
                                                        `Pair` _unmatch_a5jeb x1)
                                                     `Pair` _unmatch_a5jeb x2)
                                                  `Pair` _unmatch_a5jeb x3)
                                               `Pair` _unmatch_a5jeb x4)
                                            `Pair` _unmatch_a5jeb x5)
                                         `Pair` _unmatch_a5jeb x6)
                                      `Pair` _unmatch_a5jeb x7)
                                   `Pair` _unmatch_a5jeb x8)
                                `Pair` _unmatch_a5jeb x9)
                             `Pair` _unmatch_a5jeb x10)
                          `Pair` _unmatch_a5jeb x11)
                       `Pair` _unmatch_a5jeb x12)
                    `Pair` _unmatch_a5jeb x13))
      matcher (Exp _x_a5je8)
        = case _x_a5je8 of
            SmartExp (Match ((((((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9) `TagRpair` m10) `TagRpair` m11) `TagRpair` m12) `TagRpair` m13)
                            _y_a5je9)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              _x_a5je8)))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5je8)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5je8)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5je8)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5je8)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5je8)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5je8)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5je8)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5je8)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m9)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5je8)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m10)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5je8)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m11)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5je8)))))))), 
                  Exp
                    (SmartExp
                       ((Match m12)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5je8)))))), 
                  Exp
                    (SmartExp ((Match m13) (SmartExp ((Prj PairIdxRight) _x_a5je8)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5je8)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5je8)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5je8)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5je8)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5je8)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5je8)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5je8)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5je8)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5je8)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5je8)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5je8)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5je8)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5je8)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5je8)))
    instance (Elt a_a5jed,
              EltR a_a5jed
              ~
              ((((((((((((((((), EltR x0), EltR x1), EltR x2), EltR x3),
                         EltR x4),
                        EltR x5),
                       EltR x6),
                      EltR x7),
                     EltR x8),
                    EltR x9),
                   EltR x10),
                  EltR x11),
                 EltR x12),
                EltR x13),
               EltR x14),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9, Elt x10, Elt x11, Elt x12, Elt x13, Elt x14) =>
             IsPattern Exp a_a5jed (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9, Exp x10, Exp x11,
                                    Exp x12, Exp x13, Exp x14) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9, Exp x10, Exp x11, Exp x12, Exp x13, Exp x14)
        = let
            _unmatch_a5jeh :: SmartExp a_a5jeg -> SmartExp a_a5jeg
            _unmatch_a5jeh (SmartExp (Match _ _y_a5jef)) = _y_a5jef
            _unmatch_a5jeh x_a5jei = x_a5jei
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp
                                            (SmartExp
                                               (SmartExp
                                                  (SmartExp
                                                     (SmartExp
                                                        (SmartExp
                                                           (SmartExp Nil `Pair` _unmatch_a5jeh x0)
                                                           `Pair` _unmatch_a5jeh x1)
                                                        `Pair` _unmatch_a5jeh x2)
                                                     `Pair` _unmatch_a5jeh x3)
                                                  `Pair` _unmatch_a5jeh x4)
                                               `Pair` _unmatch_a5jeh x5)
                                            `Pair` _unmatch_a5jeh x6)
                                         `Pair` _unmatch_a5jeh x7)
                                      `Pair` _unmatch_a5jeh x8)
                                   `Pair` _unmatch_a5jeh x9)
                                `Pair` _unmatch_a5jeh x10)
                             `Pair` _unmatch_a5jeh x11)
                          `Pair` _unmatch_a5jeh x12)
                       `Pair` _unmatch_a5jeh x13)
                    `Pair` _unmatch_a5jeh x14))
      matcher (Exp _x_a5jee)
        = case _x_a5jee of
            SmartExp (Match (((((((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9) `TagRpair` m10) `TagRpair` m11) `TagRpair` m12) `TagRpair` m13) `TagRpair` m14)
                            _y_a5jef)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              (SmartExp
                                                                                                                 ((Prj
                                                                                                                     PairIdxLeft)
                                                                                                                    _x_a5jee)))))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              _x_a5jee)))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5jee)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5jee)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jee)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jee)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jee)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jee)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jee)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m9)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jee)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m10)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jee)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m11)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jee)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m12)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jee)))))))), 
                  Exp
                    (SmartExp
                       ((Match m13)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jee)))))), 
                  Exp
                    (SmartExp ((Match m14) (SmartExp ((Prj PairIdxRight) _x_a5jee)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              _x_a5jee)))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5jee)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5jee)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jee)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jee)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jee)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jee)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jee)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jee)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jee)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jee)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jee)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jee)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jee)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jee)))
    instance (Elt a_a5jej,
              EltR a_a5jej
              ~
              (((((((((((((((((), EltR x0), EltR x1), EltR x2), EltR x3),
                          EltR x4),
                         EltR x5),
                        EltR x6),
                       EltR x7),
                      EltR x8),
                     EltR x9),
                    EltR x10),
                   EltR x11),
                  EltR x12),
                 EltR x13),
                EltR x14),
               EltR x15),
              Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
              Elt x8, Elt x9, Elt x10, Elt x11, Elt x12, Elt x13, Elt x14,
              Elt x15) =>
             IsPattern Exp a_a5jej (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4,
                                    Exp x5, Exp x6, Exp x7, Exp x8, Exp x9, Exp x10, Exp x11,
                                    Exp x12, Exp x13, Exp x14, Exp x15) where
      builder
        (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6, Exp x7,
         Exp x8, Exp x9, Exp x10, Exp x11, Exp x12, Exp x13, Exp x14,
         Exp x15)
        = let
            _unmatch_a5jen :: SmartExp a_a5jem -> SmartExp a_a5jem
            _unmatch_a5jen (SmartExp (Match _ _y_a5jel)) = _y_a5jel
            _unmatch_a5jen x_a5jeo = x_a5jeo
          in
            Exp
              (SmartExp
                 (SmartExp
                    (SmartExp
                       (SmartExp
                          (SmartExp
                             (SmartExp
                                (SmartExp
                                   (SmartExp
                                      (SmartExp
                                         (SmartExp
                                            (SmartExp
                                               (SmartExp
                                                  (SmartExp
                                                     (SmartExp
                                                        (SmartExp
                                                           (SmartExp
                                                              (SmartExp Nil
                                                                 `Pair` _unmatch_a5jen x0)
                                                              `Pair` _unmatch_a5jen x1)
                                                           `Pair` _unmatch_a5jen x2)
                                                        `Pair` _unmatch_a5jen x3)
                                                     `Pair` _unmatch_a5jen x4)
                                                  `Pair` _unmatch_a5jen x5)
                                               `Pair` _unmatch_a5jen x6)
                                            `Pair` _unmatch_a5jen x7)
                                         `Pair` _unmatch_a5jen x8)
                                      `Pair` _unmatch_a5jen x9)
                                   `Pair` _unmatch_a5jen x10)
                                `Pair` _unmatch_a5jen x11)
                             `Pair` _unmatch_a5jen x12)
                          `Pair` _unmatch_a5jen x13)
                       `Pair` _unmatch_a5jen x14)
                    `Pair` _unmatch_a5jen x15))
      matcher (Exp _x_a5jek)
        = case _x_a5jek of
            SmartExp (Match ((((((((((((((((TagRunit `TagRpair` m0) `TagRpair` m1) `TagRpair` m2) `TagRpair` m3) `TagRpair` m4) `TagRpair` m5) `TagRpair` m6) `TagRpair` m7) `TagRpair` m8) `TagRpair` m9) `TagRpair` m10) `TagRpair` m11) `TagRpair` m12) `TagRpair` m13) `TagRpair` m14) `TagRpair` m15)
                            _y_a5jel)
              -> (Exp
                    (SmartExp
                       ((Match m0)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              (SmartExp
                                                                                                                 ((Prj
                                                                                                                     PairIdxLeft)
                                                                                                                    (SmartExp
                                                                                                                       ((Prj
                                                                                                                           PairIdxLeft)
                                                                                                                          _x_a5jek)))))))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m1)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              (SmartExp
                                                                                                                 ((Prj
                                                                                                                     PairIdxLeft)
                                                                                                                    _x_a5jek)))))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m2)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              _x_a5jek)))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m3)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5jek)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m4)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5jek)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m5)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jek)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m6)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jek)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m7)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jek)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m8)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jek)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m9)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jek)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m10)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jek)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m11)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jek)))))))))))), 
                  Exp
                    (SmartExp
                       ((Match m12)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jek)))))))))), 
                  Exp
                    (SmartExp
                       ((Match m13)
                          (SmartExp
                             ((Prj PairIdxRight)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jek)))))))), 
                  Exp
                    (SmartExp
                       ((Match m14)
                          (SmartExp
                             ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jek)))))), 
                  Exp
                    (SmartExp ((Match m15) (SmartExp ((Prj PairIdxRight) _x_a5jek)))))
            _ -> (Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              (SmartExp
                                                                                                                 ((Prj
                                                                                                                     PairIdxLeft)
                                                                                                                    _x_a5jek)))))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        (SmartExp
                                                                                                           ((Prj
                                                                                                               PairIdxLeft)
                                                                                                              _x_a5jek)))))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  (SmartExp
                                                                                                     ((Prj
                                                                                                         PairIdxLeft)
                                                                                                        _x_a5jek)))))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            (SmartExp
                                                                                               ((Prj
                                                                                                   PairIdxLeft)
                                                                                                  _x_a5jek)))))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      (SmartExp
                                                                                         ((Prj
                                                                                             PairIdxLeft)
                                                                                            _x_a5jek)))))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                (SmartExp
                                                                                   ((Prj
                                                                                       PairIdxLeft)
                                                                                      _x_a5jek)))))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          (SmartExp
                                                                             ((Prj PairIdxLeft)
                                                                                _x_a5jek)))))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    (SmartExp
                                                                       ((Prj PairIdxLeft)
                                                                          _x_a5jek)))))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              (SmartExp
                                                                 ((Prj PairIdxLeft)
                                                                    _x_a5jek)))))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft)
                                                        (SmartExp
                                                           ((Prj PairIdxLeft)
                                                              _x_a5jek)))))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp
                                               ((Prj PairIdxLeft)
                                                  (SmartExp
                                                     ((Prj PairIdxLeft) _x_a5jek)))))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp
                                         ((Prj PairIdxLeft)
                                            (SmartExp ((Prj PairIdxLeft) _x_a5jek)))))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft)
                                (SmartExp
                                   ((Prj PairIdxLeft)
                                      (SmartExp ((Prj PairIdxLeft) _x_a5jek)))))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight)
                          (SmartExp
                             ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a5jek)))))), 
                  Exp
                    (SmartExp
                       ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a5jek)))), 
                  Exp (SmartExp ((Prj PairIdxRight) _x_a5jek)))
    instance (Arrays a_a5jep, ArraysR a_a5jep ~ ()) =>
             IsPattern Acc a_a5jep () where
      builder () = Acc (SmartAcc Anil)
      matcher (Acc _x_a5jeq) = ()
    instance (Arrays a_a5jer, ArraysR a_a5jer ~ ((), ArraysR x0),
              Arrays x0) =>
             IsPattern Acc a_a5jer (Acc x0) where
      builder (Acc x0) = Acc (SmartAcc (SmartAcc Anil `Apair` x0))
      matcher (Acc _x_a5jes)
        = Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jes))
    instance (Arrays a_a5jet,
              ArraysR a_a5jet ~ (((), ArraysR x0), ArraysR x1), Arrays x0,
              Arrays x1) =>
             IsPattern Acc a_a5jet (Acc x0, Acc x1) where
      builder (Acc x0, Acc x1)
        = Acc (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1))
      matcher (Acc _x_a5jeu)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeu)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeu)))
    instance (Arrays a_a5jev,
              ArraysR a_a5jev ~ ((((), ArraysR x0), ArraysR x1), ArraysR x2),
              Arrays x0, Arrays x1, Arrays x2) =>
             IsPattern Acc a_a5jev (Acc x0, Acc x1, Acc x2) where
      builder (Acc x0, Acc x1, Acc x2)
        = Acc
            (SmartAcc
               (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                  `Apair` x2))
      matcher (Acc _x_a5jew)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jew)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jew)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jew)))
    instance (Arrays a_a5jex,
              ArraysR a_a5jex
              ~ (((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3) =>
             IsPattern Acc a_a5jex (Acc x0, Acc x1, Acc x2, Acc x3) where
      builder (Acc x0, Acc x1, Acc x2, Acc x3)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                     `Apair` x2)
                  `Apair` x3))
      matcher (Acc _x_a5jey)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jey)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jey)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jey)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jey)))
    instance (Arrays a_a5jez,
              ArraysR a_a5jez
              ~
              ((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
               ArraysR x4),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4) =>
             IsPattern Acc a_a5jez (Acc x0, Acc x1, Acc x2, Acc x3,
                                    Acc x4) where
      builder (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                        `Apair` x2)
                     `Apair` x3)
                  `Apair` x4))
      matcher (Acc _x_a5jeA)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeA)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeA)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeA)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeA)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeA)))
    instance (Arrays a_a5jeB,
              ArraysR a_a5jeB
              ~
              (((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                ArraysR x4),
               ArraysR x5),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5) =>
             IsPattern Acc a_a5jeB (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5) where
      builder (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                           `Apair` x2)
                        `Apair` x3)
                     `Apair` x4)
                  `Apair` x5))
      matcher (Acc _x_a5jeC)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeC)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeC)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeC)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeC)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeC)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeC)))
    instance (Arrays a_a5jeD,
              ArraysR a_a5jeD
              ~
              ((((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                 ArraysR x4),
                ArraysR x5),
               ArraysR x6),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6) =>
             IsPattern Acc a_a5jeD (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6) where
      builder (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                              `Apair` x2)
                           `Apair` x3)
                        `Apair` x4)
                     `Apair` x5)
                  `Apair` x6))
      matcher (Acc _x_a5jeE)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeE)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeE)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeE)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeE)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeE)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeE)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeE)))
    instance (Arrays a_a5jeF,
              ArraysR a_a5jeF
              ~
              (((((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                  ArraysR x4),
                 ArraysR x5),
                ArraysR x6),
               ArraysR x7),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7) =>
             IsPattern Acc a_a5jeF (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                 `Apair` x2)
                              `Apair` x3)
                           `Apair` x4)
                        `Apair` x5)
                     `Apair` x6)
                  `Apair` x7))
      matcher (Acc _x_a5jeG)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeG)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeG)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeG)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeG)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeG)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeG)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeG)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeG)))
    instance (Arrays a_a5jeH,
              ArraysR a_a5jeH
              ~
              ((((((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                   ArraysR x4),
                  ArraysR x5),
                 ArraysR x6),
                ArraysR x7),
               ArraysR x8),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8) =>
             IsPattern Acc a_a5jeH (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                    `Apair` x2)
                                 `Apair` x3)
                              `Apair` x4)
                           `Apair` x5)
                        `Apair` x6)
                     `Apair` x7)
                  `Apair` x8))
      matcher (Acc _x_a5jeI)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeI)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeI)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeI)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeI)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeI)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeI)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeI)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeI)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeI)))
    instance (Arrays a_a5jeJ,
              ArraysR a_a5jeJ
              ~
              (((((((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                    ArraysR x4),
                   ArraysR x5),
                  ArraysR x6),
                 ArraysR x7),
                ArraysR x8),
               ArraysR x9),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9) =>
             IsPattern Acc a_a5jeJ (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                       `Apair` x2)
                                    `Apair` x3)
                                 `Apair` x4)
                              `Apair` x5)
                           `Apair` x6)
                        `Apair` x7)
                     `Apair` x8)
                  `Apair` x9))
      matcher (Acc _x_a5jeK)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeK)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeK)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeK)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeK)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeK)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeK)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeK)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeK)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeK)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeK)))
    instance (Arrays a_a5jeL,
              ArraysR a_a5jeL
              ~
              ((((((((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                     ArraysR x4),
                    ArraysR x5),
                   ArraysR x6),
                  ArraysR x7),
                 ArraysR x8),
                ArraysR x9),
               ArraysR x10),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10) =>
             IsPattern Acc a_a5jeL (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9, Acc x10) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9, Acc x10)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc
                                       (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                          `Apair` x2)
                                       `Apair` x3)
                                    `Apair` x4)
                                 `Apair` x5)
                              `Apair` x6)
                           `Apair` x7)
                        `Apair` x8)
                     `Apair` x9)
                  `Apair` x10))
      matcher (Acc _x_a5jeM)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a5jeM)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeM)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeM)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeM)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeM)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeM)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeM)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeM)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeM)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeM)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeM)))
    instance (Arrays a_a5jeN,
              ArraysR a_a5jeN
              ~
              (((((((((((((), ArraysR x0), ArraysR x1), ArraysR x2), ArraysR x3),
                      ArraysR x4),
                     ArraysR x5),
                    ArraysR x6),
                   ArraysR x7),
                  ArraysR x8),
                 ArraysR x9),
                ArraysR x10),
               ArraysR x11),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10,
              Arrays x11) =>
             IsPattern Acc a_a5jeN (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9, Acc x10, Acc x11) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9, Acc x10, Acc x11)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc
                                       (SmartAcc
                                          (SmartAcc (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                             `Apair` x2)
                                          `Apair` x3)
                                       `Apair` x4)
                                    `Apair` x5)
                                 `Apair` x6)
                              `Apair` x7)
                           `Apair` x8)
                        `Apair` x9)
                     `Apair` x10)
                  `Apair` x11))
      matcher (Acc _x_a5jeO)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a5jeO)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a5jeO)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeO)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeO)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeO)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeO)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeO)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeO)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeO)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeO)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeO)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeO)))
    instance (Arrays a_a5jeP,
              ArraysR a_a5jeP
              ~
              ((((((((((((((), ArraysR x0), ArraysR x1), ArraysR x2),
                        ArraysR x3),
                       ArraysR x4),
                      ArraysR x5),
                     ArraysR x6),
                    ArraysR x7),
                   ArraysR x8),
                  ArraysR x9),
                 ArraysR x10),
                ArraysR x11),
               ArraysR x12),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10, Arrays x11,
              Arrays x12) =>
             IsPattern Acc a_a5jeP (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9, Acc x10, Acc x11,
                                    Acc x12) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9, Acc x10, Acc x11, Acc x12)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc
                                       (SmartAcc
                                          (SmartAcc
                                             (SmartAcc
                                                (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                                `Apair` x2)
                                             `Apair` x3)
                                          `Apair` x4)
                                       `Apair` x5)
                                    `Apair` x6)
                                 `Apair` x7)
                              `Apair` x8)
                           `Apair` x9)
                        `Apair` x10)
                     `Apair` x11)
                  `Apair` x12))
      matcher (Acc _x_a5jeQ)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a5jeQ)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a5jeQ)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a5jeQ)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeQ)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeQ)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeQ)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeQ)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeQ)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeQ)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeQ)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeQ)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeQ)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeQ)))
    instance (Arrays a_a5jeR,
              ArraysR a_a5jeR
              ~
              (((((((((((((((), ArraysR x0), ArraysR x1), ArraysR x2),
                         ArraysR x3),
                        ArraysR x4),
                       ArraysR x5),
                      ArraysR x6),
                     ArraysR x7),
                    ArraysR x8),
                   ArraysR x9),
                  ArraysR x10),
                 ArraysR x11),
                ArraysR x12),
               ArraysR x13),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10, Arrays x11,
              Arrays x12, Arrays x13) =>
             IsPattern Acc a_a5jeR (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9, Acc x10, Acc x11,
                                    Acc x12, Acc x13) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9, Acc x10, Acc x11, Acc x12, Acc x13)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc
                                       (SmartAcc
                                          (SmartAcc
                                             (SmartAcc
                                                (SmartAcc
                                                   (SmartAcc (SmartAcc Anil `Apair` x0) `Apair` x1)
                                                   `Apair` x2)
                                                `Apair` x3)
                                             `Apair` x4)
                                          `Apair` x5)
                                       `Apair` x6)
                                    `Apair` x7)
                                 `Apair` x8)
                              `Apair` x9)
                           `Apair` x10)
                        `Apair` x11)
                     `Apair` x12)
                  `Apair` x13))
      matcher (Acc _x_a5jeS)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a5jeS)))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a5jeS)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a5jeS)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a5jeS)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeS)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeS)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeS)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeS)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeS)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeS)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeS)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeS)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeS)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeS)))
    instance (Arrays a_a5jeT,
              ArraysR a_a5jeT
              ~
              ((((((((((((((((), ArraysR x0), ArraysR x1), ArraysR x2),
                          ArraysR x3),
                         ArraysR x4),
                        ArraysR x5),
                       ArraysR x6),
                      ArraysR x7),
                     ArraysR x8),
                    ArraysR x9),
                   ArraysR x10),
                  ArraysR x11),
                 ArraysR x12),
                ArraysR x13),
               ArraysR x14),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10, Arrays x11,
              Arrays x12, Arrays x13, Arrays x14) =>
             IsPattern Acc a_a5jeT (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9, Acc x10, Acc x11,
                                    Acc x12, Acc x13, Acc x14) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9, Acc x10, Acc x11, Acc x12, Acc x13, Acc x14)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc
                                       (SmartAcc
                                          (SmartAcc
                                             (SmartAcc
                                                (SmartAcc
                                                   (SmartAcc
                                                      (SmartAcc (SmartAcc Anil `Apair` x0)
                                                         `Apair` x1)
                                                      `Apair` x2)
                                                   `Apair` x3)
                                                `Apair` x4)
                                             `Apair` x5)
                                          `Apair` x6)
                                       `Apair` x7)
                                    `Apair` x8)
                                 `Apair` x9)
                              `Apair` x10)
                           `Apair` x11)
                        `Apair` x12)
                     `Apair` x13)
                  `Apair` x14))
      matcher (Acc _x_a5jeU)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartAcc
                                                                                                    ((Aprj
                                                                                                        PairIdxLeft)
                                                                                                       _x_a5jeU)))))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a5jeU)))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a5jeU)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a5jeU)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a5jeU)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeU)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeU)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeU)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeU)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeU)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeU)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeU)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeU)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeU)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeU)))
    instance (Arrays a_a5jeV,
              ArraysR a_a5jeV
              ~
              (((((((((((((((((), ArraysR x0), ArraysR x1), ArraysR x2),
                           ArraysR x3),
                          ArraysR x4),
                         ArraysR x5),
                        ArraysR x6),
                       ArraysR x7),
                      ArraysR x8),
                     ArraysR x9),
                    ArraysR x10),
                   ArraysR x11),
                  ArraysR x12),
                 ArraysR x13),
                ArraysR x14),
               ArraysR x15),
              Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4, Arrays x5,
              Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10, Arrays x11,
              Arrays x12, Arrays x13, Arrays x14, Arrays x15) =>
             IsPattern Acc a_a5jeV (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4,
                                    Acc x5, Acc x6, Acc x7, Acc x8, Acc x9, Acc x10, Acc x11,
                                    Acc x12, Acc x13, Acc x14, Acc x15) where
      builder
        (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6, Acc x7,
         Acc x8, Acc x9, Acc x10, Acc x11, Acc x12, Acc x13, Acc x14,
         Acc x15)
        = Acc
            (SmartAcc
               (SmartAcc
                  (SmartAcc
                     (SmartAcc
                        (SmartAcc
                           (SmartAcc
                              (SmartAcc
                                 (SmartAcc
                                    (SmartAcc
                                       (SmartAcc
                                          (SmartAcc
                                             (SmartAcc
                                                (SmartAcc
                                                   (SmartAcc
                                                      (SmartAcc
                                                         (SmartAcc (SmartAcc Anil `Apair` x0)
                                                            `Apair` x1)
                                                         `Apair` x2)
                                                      `Apair` x3)
                                                   `Apair` x4)
                                                `Apair` x5)
                                             `Apair` x6)
                                          `Apair` x7)
                                       `Apair` x8)
                                    `Apair` x9)
                                 `Apair` x10)
                              `Apair` x11)
                           `Apair` x12)
                        `Apair` x13)
                     `Apair` x14)
                  `Apair` x15))
      matcher (Acc _x_a5jeW)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartAcc
                                                                                                    ((Aprj
                                                                                                        PairIdxLeft)
                                                                                                       (SmartAcc
                                                                                                          ((Aprj
                                                                                                              PairIdxLeft)
                                                                                                             _x_a5jeW)))))))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartAcc
                                                                                                    ((Aprj
                                                                                                        PairIdxLeft)
                                                                                                       _x_a5jeW)))))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a5jeW)))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a5jeW)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a5jeW)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a5jeW)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a5jeW)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a5jeW)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a5jeW)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a5jeW)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a5jeW)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a5jeW)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a5jeW)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeW)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a5jeW)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a5jeW)))
    instance (Elt v_a5jeY, VecElt a_a5jeX,
              EltR v_a5jeY ~ Vec 2 a_a5jeX) =>
             IsVector Exp v_a5jeY (Exp a_a5jeX, Exp a_a5jeX) where
      vpack x_a5jeZ
        = case builder x_a5jeZ :: Exp (a_a5jeX, a_a5jeX) of {
            Exp x'_a5jf0
              -> Exp
                   (SmartExp
                      ((VecPack (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jeX)))))
                         x'_a5jf0)) }
      vunpack (Exp x_a5jf1)
        = matcher
            (Exp
               (SmartExp
                  ((VecUnpack (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jeX)))))
                     x_a5jf1)) ::
               Exp (a_a5jeX, a_a5jeX))
    instance (Elt v_a5jf3, VecElt a_a5jf2,
              EltR v_a5jf3 ~ Vec 3 a_a5jf2) =>
             IsVector Exp v_a5jf3 (Exp a_a5jf2, Exp a_a5jf2, Exp a_a5jf2) where
      vpack x_a5jf4
        = case builder x_a5jf4 :: Exp (a_a5jf2, a_a5jf2, a_a5jf2) of {
            Exp x'_a5jf5
              -> Exp
                   (SmartExp
                      ((VecPack
                          (VecRsucc (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jf2))))))
                         x'_a5jf5)) }
      vunpack (Exp x_a5jf6)
        = matcher
            (Exp
               (SmartExp
                  ((VecUnpack
                      (VecRsucc (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jf2))))))
                     x_a5jf6)) ::
               Exp (a_a5jf2, a_a5jf2, a_a5jf2))
    instance (Elt v_a5jf8, VecElt a_a5jf7,
              EltR v_a5jf8 ~ Vec 4 a_a5jf7) =>
             IsVector Exp v_a5jf8 (Exp a_a5jf7, Exp a_a5jf7, Exp a_a5jf7,
                                   Exp a_a5jf7) where
      vpack x_a5jf9
        = case  builder x_a5jf9 :: Exp (a_a5jf7, a_a5jf7, a_a5jf7, a_a5jf7)
          of {
            Exp x'_a5jfa
              -> Exp
                   (SmartExp
                      ((VecPack
                          (VecRsucc
                             (VecRsucc (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jf7)))))))
                         x'_a5jfa)) }
      vunpack (Exp x_a5jfb)
        = matcher
            (Exp
               (SmartExp
                  ((VecUnpack
                      (VecRsucc
                         (VecRsucc (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jf7)))))))
                     x_a5jfb)) ::
               Exp (a_a5jf7, a_a5jf7, a_a5jf7, a_a5jf7))
    instance (Elt v_a5jfd, VecElt a_a5jfc,
              EltR v_a5jfd ~ Vec 8 a_a5jfc) =>
             IsVector Exp v_a5jfd (Exp a_a5jfc, Exp a_a5jfc, Exp a_a5jfc,
                                   Exp a_a5jfc, Exp a_a5jfc, Exp a_a5jfc, Exp a_a5jfc,
                                   Exp a_a5jfc) where
      vpack x_a5jfe
        = case  builder x_a5jfe ::
                  Exp (a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc,
                       a_a5jfc)
          of {
            Exp x'_a5jff
              -> Exp
                   (SmartExp
                      ((VecPack
                          (VecRsucc
                             (VecRsucc
                                (VecRsucc
                                   (VecRsucc
                                      (VecRsucc
                                         (VecRsucc
                                            (VecRsucc
                                               (VecRsucc (VecRnil (singleType @a_a5jfc)))))))))))
                         x'_a5jff)) }
      vunpack (Exp x_a5jfg)
        = matcher
            (Exp
               (SmartExp
                  ((VecUnpack
                      (VecRsucc
                         (VecRsucc
                            (VecRsucc
                               (VecRsucc
                                  (VecRsucc
                                     (VecRsucc
                                        (VecRsucc (VecRsucc (VecRnil (singleType @a_a5jfc)))))))))))
                     x_a5jfg)) ::
               Exp (a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc, a_a5jfc,
                    a_a5jfc))
    instance (Elt v_a5jfi, VecElt a_a5jfh,
              EltR v_a5jfi ~ Vec 16 a_a5jfh) =>
             IsVector Exp v_a5jfi (Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh,
                                   Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh,
                                   Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh,
                                   Exp a_a5jfh, Exp a_a5jfh, Exp a_a5jfh) where
      vpack x_a5jfj
        = case  builder x_a5jfj ::
                  Exp (a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh,
                       a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh,
                       a_a5jfh, a_a5jfh)
          of {
            Exp x'_a5jfk
              -> Exp
                   (SmartExp
                      ((VecPack
                          (VecRsucc
                             (VecRsucc
                                (VecRsucc
                                   (VecRsucc
                                      (VecRsucc
                                         (VecRsucc
                                            (VecRsucc
                                               (VecRsucc
                                                  (VecRsucc
                                                     (VecRsucc
                                                        (VecRsucc
                                                           (VecRsucc
                                                              (VecRsucc
                                                                 (VecRsucc
                                                                    (VecRsucc
                                                                       (VecRsucc
                                                                          (VecRnil
                                                                             (singleType
                                                                                @a_a5jfh)))))))))))))))))))
                         x'_a5jfk)) }
      vunpack (Exp x_a5jfl)
        = matcher
            (Exp
               (SmartExp
                  ((VecUnpack
                      (VecRsucc
                         (VecRsucc
                            (VecRsucc
                               (VecRsucc
                                  (VecRsucc
                                     (VecRsucc
                                        (VecRsucc
                                           (VecRsucc
                                              (VecRsucc
                                                 (VecRsucc
                                                    (VecRsucc
                                                       (VecRsucc
                                                          (VecRsucc
                                                             (VecRsucc
                                                                (VecRsucc
                                                                   (VecRsucc
                                                                      (VecRnil
                                                                         (singleType
                                                                            @a_a5jfh)))))))))))))))))))
                     x_a5jfl)) ::
               Exp (a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh,
                    a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh, a_a5jfh,
                    a_a5jfh, a_a5jfh))
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pattern.hs:(242,1)-(296,36): Splicing declarations
    runQ
      $ do let mkT_a5vCj :: Int -> Q [Dec]
               mkT_a5vCj n_a5vCm
                 = let
                     xs_a5vCn
                       = [mkName ('x' : show i_a5vCu) | i_a5vCu <- [0 .. n_a5vCm - 1]]
                     ts_a5vCo = map varT xs_a5vCn
                     name_a5vCp = mkName ('T' : show n_a5vCm)
                     con_a5vCq = varT (mkName "con")
                     ty1_a5vCr = tupT ts_a5vCo
                     ty2_a5vCs = tupT (map (con_a5vCq `appT`) ts_a5vCo)
                     sig_a5vCt
                       = foldr
                           (\ t_a5vCv r_a5vCw
                              -> [t| $con_a5vCq $t_a5vCv -> $r_a5vCw |]
                                 pending(rn) [<splice_a5vCz, r_a5vCw>, <splice_a5vCy, t_a5vCv>,
                                              <splice_a5vCx, con_a5vCq>])
                           (appT con_a5vCq ty1_a5vCr) ts_a5vCo
                   in
                     sequence
                       [patSynSigD
                          name_a5vCp
                          [t| IsPattern $con_a5vCq $ty1_a5vCr $ty2_a5vCs => $sig_a5vCt |]
                          pending(rn) [<splice_a5vCD, sig_a5vCt>, <splice_a5vCC, ty2_a5vCs>,
                                       <splice_a5vCB, ty1_a5vCr>, <splice_a5vCA, con_a5vCq>],
                        patSynD
                          name_a5vCp (prefixPatSyn xs_a5vCn) implBidir
                          [p| Pattern $(tupP (map varP xs_a5vCn)) |]
                          pending(rn) [<splice_a5vCE, tupP (map varP xs_a5vCn)>],
                        pragCompleteD [name_a5vCp] (Just ''Acc),
                        pragCompleteD [name_a5vCp] (Just ''Exp)]
               mkI_a5vCk :: Int -> Q [Dec]
               mkI_a5vCk n_a5vCF
                 = let
                     xs_a5vCG
                       = [mkName ('x' : show i_a5vCN) | i_a5vCN <- [0 .. n_a5vCF - 1]]
                     ts_a5vCH = map varT xs_a5vCG
                     name_a5vCI = mkName ('I' : show n_a5vCF)
                     ix_a5vCJ = mkName "Ix"
                     cst_a5vCK
                       = tupT
                           (map
                              (\ t_a5vCO
                                 -> [t| Elt $t_a5vCO |]
                                    pending(rn) [<splice_a5vCP, t_a5vCO>])
                              ts_a5vCH)
                     dim_a5vCL
                       = foldl
                           (\ h_a5vCQ t_a5vCR
                              -> [t| $h_a5vCQ :. $t_a5vCR |]
                                 pending(rn) [<splice_a5vCT, t_a5vCR>, <splice_a5vCS, h_a5vCQ>])
                           [t| Z |] ts_a5vCH
                     sig_a5vCM
                       = foldr
                           (\ t_a5vCU r_a5vCV
                              -> [t| Exp $t_a5vCU -> $r_a5vCV |]
                                 pending(rn) [<splice_a5vCX, r_a5vCV>, <splice_a5vCW, t_a5vCU>])
                           [t| Exp $dim_a5vCL |]
                           pending(rn) [<splice_a5vCY, dim_a5vCL>]
                           ts_a5vCH
                   in
                     sequence
                       [patSynSigD
                          name_a5vCI
                          [t| $cst_a5vCK => $sig_a5vCM |]
                          pending(rn) [<splice_a5vD0, sig_a5vCM>, <splice_a5vCZ, cst_a5vCK>],
                        patSynD
                          name_a5vCI (prefixPatSyn xs_a5vCG) implBidir
                          (foldl
                             (\ ps_a5vD1 p_a5vD2 -> infixP ps_a5vD1 ix_a5vCJ (varP p_a5vD2))
                             [p| Z_ |] xs_a5vCG),
                        pragCompleteD [name_a5vCI] Nothing]
               mkV_a5vCl :: Int -> Q [Dec]
               mkV_a5vCl n_a5vD3
                 = let
                     xs_a5vD4
                       = [mkName ('x' : show i_a5vDb) | i_a5vDb <- [0 .. n_a5vD3 - 1]]
                     ts_a5vD5 = map varT xs_a5vD4
                     name_a5vD6 = mkName ('V' : show n_a5vD3)
                     con_a5vD7 = varT (mkName "con")
                     ty1_a5vD8 = varT (mkName "vec")
                     ty2_a5vD9 = tupT (map (con_a5vD7 `appT`) ts_a5vD5)
                     sig_a5vDa
                       = foldr
                           (\ t_a5vDc r_a5vDd
                              -> [t| $con_a5vD7 $t_a5vDc -> $r_a5vDd |]
                                 pending(rn) [<splice_a5vDg, r_a5vDd>, <splice_a5vDf, t_a5vDc>,
                                              <splice_a5vDe, con_a5vD7>])
                           (appT con_a5vD7 ty1_a5vD8) ts_a5vD5
                   in
                     sequence
                       [patSynSigD
                          name_a5vD6
                          [t| IsVector $con_a5vD7 $ty1_a5vD8 $ty2_a5vD9 => $sig_a5vDa |]
                          pending(rn) [<splice_a5vDk, sig_a5vDa>, <splice_a5vDj, ty2_a5vD9>,
                                       <splice_a5vDi, ty1_a5vD8>, <splice_a5vDh, con_a5vD7>],
                        patSynD
                          name_a5vD6 (prefixPatSyn xs_a5vD4) implBidir
                          [p| Vector $(tupP (map varP xs_a5vD4)) |]
                          pending(rn) [<splice_a5vDl, tupP (map varP xs_a5vD4)>],
                        pragCompleteD [name_a5vD6] (Just ''Exp)]
           ts_a5vDm <- mapM mkT_a5vCj [2 .. 16]
           is_a5vDn <- mapM mkI_a5vCk [0 .. 9]
           vs_a5vDo <- mapM mkV_a5vCl [2, 3, 4, 8, 16]
           return $ concat (ts_a5vDm ++ is_a5vDn ++ vs_a5vDo)
  ======>
    pattern T2 ::
              IsPattern con (x0, x1) (con x0, con x1) =>
              con x0 -> con x1 -> con (x0, x1)
    pattern T2 x0 x1 = Pattern (x0, x1)
    {-# COMPLETE T2 :: Acc #-}
    {-# COMPLETE T2 :: Exp #-}
    pattern T3 ::
              IsPattern con (x0, x1, x2) (con x0, con x1, con x2) =>
              con x0 -> con x1 -> con x2 -> con (x0, x1, x2)
    pattern T3 x0 x1 x2 = Pattern (x0, x1, x2)
    {-# COMPLETE T3 :: Acc #-}
    {-# COMPLETE T3 :: Exp #-}
    pattern T4 ::
              IsPattern con (x0, x1, x2, x3) (con x0, con x1, con x2, con x3) =>
              con x0 -> con x1 -> con x2 -> con x3 -> con (x0, x1, x2, x3)
    pattern T4 x0 x1 x2 x3 = Pattern (x0, x1, x2, x3)
    {-# COMPLETE T4 :: Acc #-}
    {-# COMPLETE T4 :: Exp #-}
    pattern T5 ::
              IsPattern con (x0, x1, x2, x3, x4) (con x0, con x1, con x2, con x3,
                                                  con x4) =>
              con x0
              -> con x1 -> con x2 -> con x3 -> con x4 -> con (x0, x1, x2, x3, x4)
    pattern T5 x0 x1 x2 x3 x4 = Pattern (x0, x1, x2, x3, x4)
    {-# COMPLETE T5 :: Acc #-}
    {-# COMPLETE T5 :: Exp #-}
    pattern T6 ::
              IsPattern con (x0, x1, x2, x3, x4, x5) (con x0, con x1, con x2,
                                                      con x3, con x4, con x5) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3 -> con x4 -> con x5 -> con (x0, x1, x2, x3, x4, x5)
    pattern T6 x0 x1 x2 x3 x4 x5 = Pattern (x0, x1, x2, x3, x4, x5)
    {-# COMPLETE T6 :: Acc #-}
    {-# COMPLETE T6 :: Exp #-}
    pattern T7 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6) (con x0, con x1, con x2,
                                                          con x3, con x4, con x5, con x6) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4 -> con x5 -> con x6 -> con (x0, x1, x2, x3, x4, x5, x6)
    pattern T7 x0 x1 x2 x3 x4 x5 x6 = Pattern (x0, x1, x2, x3, x4, x5,
                                               x6)
    {-# COMPLETE T7 :: Acc #-}
    {-# COMPLETE T7 :: Exp #-}
    pattern T8 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7) (con x0, con x1,
                                                              con x2, con x3, con x4, con x5,
                                                              con x6, con x7) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6 -> con x7 -> con (x0, x1, x2, x3, x4, x5, x6, x7)
    pattern T8 x0 x1 x2 x3 x4 x5 x6 x7 = Pattern (x0, x1, x2, x3, x4,
                                                  x5, x6, x7)
    {-# COMPLETE T8 :: Acc #-}
    {-# COMPLETE T8 :: Exp #-}
    pattern T9 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8) (con x0, con x1,
                                                                  con x2, con x3, con x4, con x5,
                                                                  con x6, con x7, con x8) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7 -> con x8 -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8)
    pattern T9 x0 x1 x2 x3 x4 x5 x6 x7 x8 = Pattern (x0, x1, x2, x3,
                                                     x4, x5, x6, x7, x8)
    {-# COMPLETE T9 :: Acc #-}
    {-# COMPLETE T9 :: Exp #-}
    pattern T10 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) (con x0,
                                                                      con x1, con x2, con x3,
                                                                      con x4, con x5, con x6,
                                                                      con x7, con x8, con x9) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9 -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
    pattern T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 = Pattern (x0, x1, x2,
                                                         x3, x4, x5, x6, x7, x8, x9)
    {-# COMPLETE T10 :: Acc #-}
    {-# COMPLETE T10 :: Exp #-}
    pattern T11 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9,
                             x10) (con x0, con x1, con x2, con x3, con x4, con x5, con x6,
                                   con x7, con x8, con x9, con x10) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
    pattern T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 = Pattern (x0, x1,
                                                             x2, x3, x4, x5, x6, x7, x8, x9, x10)
    {-# COMPLETE T11 :: Acc #-}
    {-# COMPLETE T11 :: Exp #-}
    pattern T12 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,
                             x11) (con x0, con x1, con x2, con x3, con x4, con x5, con x6,
                                   con x7, con x8, con x9, con x10, con x11) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con x11
                                               -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,
                                                       x11)
    pattern T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 = Pattern (x0,
                                                                 x1, x2, x3, x4, x5, x6, x7, x8, x9,
                                                                 x10, x11)
    {-# COMPLETE T12 :: Acc #-}
    {-# COMPLETE T12 :: Exp #-}
    pattern T13 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12) (con x0, con x1, con x2, con x3, con x4, con x5, con x6,
                                   con x7, con x8, con x9, con x10, con x11, con x12) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con x11
                                               -> con x12
                                                  -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9,
                                                          x10, x11, x12)
    pattern T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 = Pattern (x0,
                                                                     x1, x2, x3, x4, x5, x6, x7, x8,
                                                                     x9, x10, x11, x12)
    {-# COMPLETE T13 :: Acc #-}
    {-# COMPLETE T13 :: Exp #-}
    pattern T14 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12, x13) (con x0, con x1, con x2, con x3, con x4, con x5, con x6,
                                        con x7, con x8, con x9, con x10, con x11, con x12,
                                        con x13) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con x11
                                               -> con x12
                                                  -> con x13
                                                     -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9,
                                                             x10, x11, x12, x13)
    pattern T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 = Pattern (x0,
                                                                         x1, x2, x3, x4, x5, x6, x7,
                                                                         x8, x9, x10, x11, x12, x13)
    {-# COMPLETE T14 :: Acc #-}
    {-# COMPLETE T14 :: Exp #-}
    pattern T15 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12, x13, x14) (con x0, con x1, con x2, con x3, con x4, con x5,
                                             con x6, con x7, con x8, con x9, con x10, con x11,
                                             con x12, con x13, con x14) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con x11
                                               -> con x12
                                                  -> con x13
                                                     -> con x14
                                                        -> con (x0, x1, x2, x3, x4, x5, x6, x7, x8,
                                                                x9, x10, x11, x12, x13, x14)
    pattern T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 = Pattern (x0,
                                                                             x1, x2, x3, x4, x5, x6,
                                                                             x7, x8, x9, x10, x11,
                                                                             x12, x13, x14)
    {-# COMPLETE T15 :: Acc #-}
    {-# COMPLETE T15 :: Exp #-}
    pattern T16 ::
              IsPattern con (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12, x13, x14, x15) (con x0, con x1, con x2, con x3, con x4,
                                                  con x5, con x6, con x7, con x8, con x9, con x10,
                                                  con x11, con x12, con x13, con x14, con x15) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con x11
                                               -> con x12
                                                  -> con x13
                                                     -> con x14
                                                        -> con x15
                                                           -> con (x0, x1, x2, x3, x4, x5, x6, x7,
                                                                   x8, x9, x10, x11, x12, x13, x14,
                                                                   x15)
    pattern T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 = Pattern (x0,
                                                                                 x1, x2, x3, x4, x5,
                                                                                 x6, x7, x8, x9,
                                                                                 x10, x11, x12, x13,
                                                                                 x14, x15)
    {-# COMPLETE T16 :: Acc #-}
    {-# COMPLETE T16 :: Exp #-}
    pattern I0 :: () => Exp Z
    pattern I0 = Z_
    {-# COMPLETE I0 #-}
    pattern I1 :: Elt x0 => Exp x0 -> Exp ((:.) Z x0)
    pattern I1 x0 = (Z_ `Ix` x0)
    {-# COMPLETE I1 #-}
    pattern I2 ::
              (Elt x0, Elt x1) => Exp x0 -> Exp x1 -> Exp ((:.) ((:.) Z x0) x1)
    pattern I2 x0 x1 = ((Z_ `Ix` x0) `Ix` x1)
    {-# COMPLETE I2 #-}
    pattern I3 ::
              (Elt x0, Elt x1, Elt x2) =>
              Exp x0 -> Exp x1 -> Exp x2 -> Exp ((:.) ((:.) ((:.) Z x0) x1) x2)
    pattern I3 x0 x1 x2 = (((Z_ `Ix` x0) `Ix` x1) `Ix` x2)
    {-# COMPLETE I3 #-}
    pattern I4 ::
              (Elt x0, Elt x1, Elt x2, Elt x3) =>
              Exp x0
              -> Exp x1
                 -> Exp x2
                    -> Exp x3 -> Exp ((:.) ((:.) ((:.) ((:.) Z x0) x1) x2) x3)
    pattern I4 x0 x1 x2 x3 = ((((Z_ `Ix` x0) `Ix` x1) `Ix` x2) `Ix` x3)
    {-# COMPLETE I4 #-}
    pattern I5 ::
              (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4) =>
              Exp x0
              -> Exp x1
                 -> Exp x2
                    -> Exp x3
                       -> Exp x4
                          -> Exp ((:.) ((:.) ((:.) ((:.) ((:.) Z x0) x1) x2) x3) x4)
    pattern I5 x0 x1 x2 x3 x4 = (((((Z_ `Ix` x0) `Ix` x1) `Ix` x2) `Ix` x3) `Ix` x4)
    {-# COMPLETE I5 #-}
    pattern I6 ::
              (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5) =>
              Exp x0
              -> Exp x1
                 -> Exp x2
                    -> Exp x3
                       -> Exp x4
                          -> Exp x5
                             -> Exp ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) Z x0) x1) x2) x3) x4) x5)
    pattern I6 x0 x1 x2 x3 x4 x5 = ((((((Z_ `Ix` x0) `Ix` x1) `Ix` x2) `Ix` x3) `Ix` x4) `Ix` x5)
    {-# COMPLETE I6 #-}
    pattern I7 ::
              (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6) =>
              Exp x0
              -> Exp x1
                 -> Exp x2
                    -> Exp x3
                       -> Exp x4
                          -> Exp x5
                             -> Exp x6
                                -> Exp ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) Z x0) x1) x2) x3) x4) x5) x6)
    pattern I7 x0 x1 x2 x3 x4 x5 x6 = (((((((Z_ `Ix` x0) `Ix` x1) `Ix` x2) `Ix` x3) `Ix` x4) `Ix` x5) `Ix` x6)
    {-# COMPLETE I7 #-}
    pattern I8 ::
              (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7) =>
              Exp x0
              -> Exp x1
                 -> Exp x2
                    -> Exp x3
                       -> Exp x4
                          -> Exp x5
                             -> Exp x6
                                -> Exp x7
                                   -> Exp ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) Z x0) x1) x2) x3) x4) x5) x6) x7)
    pattern I8 x0 x1 x2 x3 x4 x5 x6 x7 = ((((((((Z_ `Ix` x0) `Ix` x1) `Ix` x2) `Ix` x3) `Ix` x4) `Ix` x5) `Ix` x6) `Ix` x7)
    {-# COMPLETE I8 #-}
    pattern I9 ::
              (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6, Elt x7,
               Elt x8) =>
              Exp x0
              -> Exp x1
                 -> Exp x2
                    -> Exp x3
                       -> Exp x4
                          -> Exp x5
                             -> Exp x6
                                -> Exp x7
                                   -> Exp x8
                                      -> Exp ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) ((:.) Z x0) x1) x2) x3) x4) x5) x6) x7) x8)
    pattern I9 x0 x1 x2 x3 x4 x5 x6 x7 x8 = (((((((((Z_ `Ix` x0) `Ix` x1) `Ix` x2) `Ix` x3) `Ix` x4) `Ix` x5) `Ix` x6) `Ix` x7) `Ix` x8)
    {-# COMPLETE I9 #-}
    pattern V2 ::
              IsVector con vec (con x0, con x1) => con x0 -> con x1 -> con vec
    pattern V2 x0 x1 = Vector (x0, x1)
    {-# COMPLETE V2 :: Exp #-}
    pattern V3 ::
              IsVector con vec (con x0, con x1, con x2) =>
              con x0 -> con x1 -> con x2 -> con vec
    pattern V3 x0 x1 x2 = Vector (x0, x1, x2)
    {-# COMPLETE V3 :: Exp #-}
    pattern V4 ::
              IsVector con vec (con x0, con x1, con x2, con x3) =>
              con x0 -> con x1 -> con x2 -> con x3 -> con vec
    pattern V4 x0 x1 x2 x3 = Vector (x0, x1, x2, x3)
    {-# COMPLETE V4 :: Exp #-}
    pattern V8 ::
              IsVector con vec (con x0, con x1, con x2, con x3, con x4, con x5,
                                con x6, con x7) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3 -> con x4 -> con x5 -> con x6 -> con x7 -> con vec
    pattern V8 x0 x1 x2 x3 x4 x5 x6 x7 = Vector (x0, x1, x2, x3, x4,
                                                 x5, x6, x7)
    {-# COMPLETE V8 :: Exp #-}
    pattern V16 ::
              IsVector con vec (con x0, con x1, con x2, con x3, con x4, con x5,
                                con x6, con x7, con x8, con x9, con x10, con x11, con x12, con x13,
                                con x14, con x15) =>
              con x0
              -> con x1
                 -> con x2
                    -> con x3
                       -> con x4
                          -> con x5
                             -> con x6
                                -> con x7
                                   -> con x8
                                      -> con x9
                                         -> con x10
                                            -> con x11
                                               -> con x12
                                                  -> con x13 -> con x14 -> con x15 -> con vec
    pattern V16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 = Vector (x0,
                                                                                x1, x2, x3, x4, x5,
                                                                                x6, x7, x8, x9, x10,
                                                                                x11, x12, x13, x14,
                                                                                x15)
    {-# COMPLETE V16 :: Exp #-}
[ 62 of 150] Compiling Data.Array.Accelerate.Pattern.TH
[ 63 of 150] Compiling Data.Array.Accelerate.Pattern.Ordering
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pattern/Ordering.hs:25:1-20: Splicing declarations
    mkPattern ''Ordering
  ======>
    {-# COMPLETE LT_, EQ_, GT_ #-}
    pattern LT_ ::
              GHC.Stack.Types.HasCallStack =>
              Data.Array.Accelerate.Smart.Exp Ordering
    pattern LT_ <- (_matchLT_a6aO6 -> Just ()) where
                  LT_ = _buildLT_a6aO5
    _buildLT_a6aO5 :: Data.Array.Accelerate.Smart.Exp Ordering
    _buildLT_a6aO5
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           0)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       Data.Array.Accelerate.Smart.Nil)))
    _matchLT_a6aO6 ::
      GHC.Stack.Types.HasCallStack =>
      Data.Array.Accelerate.Smart.Exp Ordering -> Maybe ()
    _matchLT_a6aO6 (Data.Array.Accelerate.Smart.Exp _e_a6aO7)
      = case _e_a6aO7 of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 0
                                                                                                                                    Data.Array.Accelerate.Representation.Tag.TagRunit)
                                                                                  _x_a6aO8)
            -> Just ()
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   LT_ -> ...
>   _   -> ...
"
    pattern EQ_ ::
              GHC.Stack.Types.HasCallStack =>
              Data.Array.Accelerate.Smart.Exp Ordering
    pattern EQ_ <- (_matchEQ_a6aOa -> Just ()) where
                  EQ_ = _buildEQ_a6aO9
    _buildEQ_a6aO9 :: Data.Array.Accelerate.Smart.Exp Ordering
    _buildEQ_a6aO9
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           1)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       Data.Array.Accelerate.Smart.Nil)))
    _matchEQ_a6aOa ::
      GHC.Stack.Types.HasCallStack =>
      Data.Array.Accelerate.Smart.Exp Ordering -> Maybe ()
    _matchEQ_a6aOa (Data.Array.Accelerate.Smart.Exp _e_a6aOb)
      = case _e_a6aOb of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 1
                                                                                                                                    Data.Array.Accelerate.Representation.Tag.TagRunit)
                                                                                  _x_a6aOc)
            -> Just ()
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   EQ_ -> ...
>   _   -> ...
"
    pattern GT_ ::
              GHC.Stack.Types.HasCallStack =>
              Data.Array.Accelerate.Smart.Exp Ordering
    pattern GT_ <- (_matchGT_a6aOe -> Just ()) where
                  GT_ = _buildGT_a6aOd
    _buildGT_a6aOd :: Data.Array.Accelerate.Smart.Exp Ordering
    _buildGT_a6aOd
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           3)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       Data.Array.Accelerate.Smart.Nil)))
    _matchGT_a6aOe ::
      GHC.Stack.Types.HasCallStack =>
      Data.Array.Accelerate.Smart.Exp Ordering -> Maybe ()
    _matchGT_a6aOe (Data.Array.Accelerate.Smart.Exp _e_a6aOf)
      = case _e_a6aOf of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 3
                                                                                                                                    Data.Array.Accelerate.Representation.Tag.TagRunit)
                                                                                  _x_a6aOg)
            -> Just ()
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   GT_ -> ...
>   _   -> ...
"
[ 64 of 150] Compiling Data.Array.Accelerate.Pattern.Maybe
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pattern/Maybe.hs:25:1-17: Splicing declarations
    mkPattern ''Maybe
  ======>
    {-# COMPLETE Nothing_, Just_ #-}
    pattern Nothing_ ::
              forall a_11.
              (GHC.Stack.Types.HasCallStack,
               Data.Array.Accelerate.Sugar.Elt.Elt a_11) =>
              Data.Array.Accelerate.Smart.Exp (Maybe a_11)
    pattern Nothing_ <- (_matchNothing_a6bqR -> Just ()) where
                       Nothing_ = _buildNothing_a6bqQ
    _buildNothing_a6bqQ ::
      forall a_11.
      Data.Array.Accelerate.Sugar.Elt.Elt a_11 =>
      Data.Array.Accelerate.Smart.Exp (Maybe a_11)
    _buildNothing_a6bqQ
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           0)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       (Data.Array.Accelerate.Smart.SmartExp
                          Data.Array.Accelerate.Smart.Nil
                          `Data.Array.Accelerate.Smart.Pair`
                            Data.Array.Accelerate.Smart.unExp
                              (Data.Array.Accelerate.Smart.undef @a_11)))))
    _matchNothing_a6bqR ::
      forall a_11.
      (GHC.Stack.Types.HasCallStack,
       Data.Array.Accelerate.Sugar.Elt.Elt a_11) =>
      Data.Array.Accelerate.Smart.Exp (Maybe a_11) -> Maybe ()
    _matchNothing_a6bqR (Data.Array.Accelerate.Smart.Exp _e_a6bqS)
      = case _e_a6bqS of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 0
                                                                                                                                    (Data.Array.Accelerate.Representation.Tag.TagRpair Data.Array.Accelerate.Representation.Tag.TagRunit
                                                                                                                                                                                       _))
                                                                                  _x_a6bqT)
            -> Just ()
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   Nothing_ -> ...
>   _        -> ...
"
    pattern Just_ ::
              forall a_11.
              (GHC.Stack.Types.HasCallStack,
               Data.Array.Accelerate.Sugar.Elt.Elt a_11) =>
              Data.Array.Accelerate.Smart.Exp a_11
              -> Data.Array.Accelerate.Smart.Exp (Maybe a_11)
    pattern Just_ _x_a6br1 <- (_matchJust_a6bqX -> Just _x_a6br1) where
                             Just_ = _buildJust_a6bqV
    _buildJust_a6bqV ::
      forall a_11.
      Data.Array.Accelerate.Sugar.Elt.Elt a_11 =>
      Data.Array.Accelerate.Smart.Exp a_11
      -> Data.Array.Accelerate.Smart.Exp (Maybe a_11)
    _buildJust_a6bqV (Data.Array.Accelerate.Smart.Exp _x_a6bqW)
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           1)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       (Data.Array.Accelerate.Smart.SmartExp
                          Data.Array.Accelerate.Smart.Nil
                          `Data.Array.Accelerate.Smart.Pair` _x_a6bqW))))
    _matchJust_a6bqX ::
      forall a_11.
      (GHC.Stack.Types.HasCallStack,
       Data.Array.Accelerate.Sugar.Elt.Elt a_11) =>
      Data.Array.Accelerate.Smart.Exp (Maybe a_11)
      -> Maybe (Data.Array.Accelerate.Smart.Exp a_11)
    _matchJust_a6bqX (Data.Array.Accelerate.Smart.Exp _e_a6bqY)
      = case _e_a6bqY of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 1
                                                                                                                                    (Data.Array.Accelerate.Representation.Tag.TagRpair Data.Array.Accelerate.Representation.Tag.TagRunit
                                                                                                                                                                                       _u_a6br0))
                                                                                  _x_a6bqZ)
            -> Just
                 (Data.Array.Accelerate.Smart.Exp
                    (Data.Array.Accelerate.Smart.SmartExp
                       ((Data.Array.Accelerate.Smart.Match _u_a6br0)
                          (Data.Array.Accelerate.Smart.SmartExp
                             ((Data.Array.Accelerate.Smart.Prj
                                 Data.Array.Accelerate.AST.Idx.PairIdxRight)
                                (Data.Array.Accelerate.Smart.SmartExp
                                   ((Data.Array.Accelerate.Smart.Prj
                                       Data.Array.Accelerate.AST.Idx.PairIdxRight)
                                      _x_a6bqZ)))))))
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   Just_ a -> ...
>   _       -> ...
"
[ 65 of 150] Compiling Data.Array.Accelerate.Pattern.Either
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pattern/Either.hs:25:1-18: Splicing declarations
    mkPattern ''Either
  ======>
    {-# COMPLETE Left_, Right_ #-}
    pattern Left_ ::
              forall a_a8Lm b_a8Ln.
              (GHC.Stack.Types.HasCallStack,
               Data.Array.Accelerate.Sugar.Elt.Elt a_a8Lm,
               Data.Array.Accelerate.Sugar.Elt.Elt b_a8Ln) =>
              Data.Array.Accelerate.Smart.Exp a_a8Lm
              -> Data.Array.Accelerate.Smart.Exp (Either a_a8Lm b_a8Ln)
    pattern Left_ _x_a6bZL <- (_matchLeft_a6bZG -> Just _x_a6bZL) where
                             Left_ = _buildLeft_a6bZE
    _buildLeft_a6bZE ::
      forall a_a8Lm b_a8Ln.
      (Data.Array.Accelerate.Sugar.Elt.Elt a_a8Lm,
       Data.Array.Accelerate.Sugar.Elt.Elt b_a8Ln) =>
      Data.Array.Accelerate.Smart.Exp a_a8Lm
      -> Data.Array.Accelerate.Smart.Exp (Either a_a8Lm b_a8Ln)
    _buildLeft_a6bZE (Data.Array.Accelerate.Smart.Exp _x_a6bZF)
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           0)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       (Data.Array.Accelerate.Smart.SmartExp
                          (Data.Array.Accelerate.Smart.SmartExp
                             Data.Array.Accelerate.Smart.Nil
                             `Data.Array.Accelerate.Smart.Pair` _x_a6bZF)
                          `Data.Array.Accelerate.Smart.Pair`
                            Data.Array.Accelerate.Smart.unExp
                              (Data.Array.Accelerate.Smart.undef @b_a8Ln)))))
    _matchLeft_a6bZG ::
      forall a_a8Lm b_a8Ln.
      (GHC.Stack.Types.HasCallStack,
       Data.Array.Accelerate.Sugar.Elt.Elt a_a8Lm,
       Data.Array.Accelerate.Sugar.Elt.Elt b_a8Ln) =>
      Data.Array.Accelerate.Smart.Exp (Either a_a8Lm b_a8Ln)
      -> Maybe (Data.Array.Accelerate.Smart.Exp a_a8Lm)
    _matchLeft_a6bZG (Data.Array.Accelerate.Smart.Exp _e_a6bZH)
      = case _e_a6bZH of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 0
                                                                                                                                    (Data.Array.Accelerate.Representation.Tag.TagRpair (Data.Array.Accelerate.Representation.Tag.TagRpair Data.Array.Accelerate.Representation.Tag.TagRunit
                                                                                                                                                                                                                                          _u_a6bZK)
                                                                                                                                                                                       _))
                                                                                  _x_a6bZI)
            -> Just
                 (Data.Array.Accelerate.Smart.Exp
                    (Data.Array.Accelerate.Smart.SmartExp
                       ((Data.Array.Accelerate.Smart.Match _u_a6bZK)
                          (Data.Array.Accelerate.Smart.SmartExp
                             ((Data.Array.Accelerate.Smart.Prj
                                 Data.Array.Accelerate.AST.Idx.PairIdxRight)
                                (Data.Array.Accelerate.Smart.SmartExp
                                   ((Data.Array.Accelerate.Smart.Prj
                                       Data.Array.Accelerate.AST.Idx.PairIdxLeft)
                                      (Data.Array.Accelerate.Smart.SmartExp
                                         ((Data.Array.Accelerate.Smart.Prj
                                             Data.Array.Accelerate.AST.Idx.PairIdxRight)
                                            _x_a6bZI)))))))))
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   Left_ a -> ...
>   _       -> ...
"
    pattern Right_ ::
              forall a_a8Lm b_a8Ln.
              (GHC.Stack.Types.HasCallStack,
               Data.Array.Accelerate.Sugar.Elt.Elt a_a8Lm,
               Data.Array.Accelerate.Sugar.Elt.Elt b_a8Ln) =>
              Data.Array.Accelerate.Smart.Exp b_a8Ln
              -> Data.Array.Accelerate.Smart.Exp (Either a_a8Lm b_a8Ln)
    pattern Right_ _x_a6bZT <- (_matchRight_a6bZO -> Just _x_a6bZT) where
                              Right_ = _buildRight_a6bZM
    _buildRight_a6bZM ::
      forall a_a8Lm b_a8Ln.
      (Data.Array.Accelerate.Sugar.Elt.Elt a_a8Lm,
       Data.Array.Accelerate.Sugar.Elt.Elt b_a8Ln) =>
      Data.Array.Accelerate.Smart.Exp b_a8Ln
      -> Data.Array.Accelerate.Smart.Exp (Either a_a8Lm b_a8Ln)
    _buildRight_a6bZM (Data.Array.Accelerate.Smart.Exp _x_a6bZN)
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           1)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       (Data.Array.Accelerate.Smart.SmartExp
                          (Data.Array.Accelerate.Smart.SmartExp
                             Data.Array.Accelerate.Smart.Nil
                             `Data.Array.Accelerate.Smart.Pair`
                               Data.Array.Accelerate.Smart.unExp
                                 (Data.Array.Accelerate.Smart.undef @a_a8Lm))
                          `Data.Array.Accelerate.Smart.Pair` _x_a6bZN))))
    _matchRight_a6bZO ::
      forall a_a8Lm b_a8Ln.
      (GHC.Stack.Types.HasCallStack,
       Data.Array.Accelerate.Sugar.Elt.Elt a_a8Lm,
       Data.Array.Accelerate.Sugar.Elt.Elt b_a8Ln) =>
      Data.Array.Accelerate.Smart.Exp (Either a_a8Lm b_a8Ln)
      -> Maybe (Data.Array.Accelerate.Smart.Exp b_a8Ln)
    _matchRight_a6bZO (Data.Array.Accelerate.Smart.Exp _e_a6bZP)
      = case _e_a6bZP of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 1
                                                                                                                                    (Data.Array.Accelerate.Representation.Tag.TagRpair (Data.Array.Accelerate.Representation.Tag.TagRpair Data.Array.Accelerate.Representation.Tag.TagRunit
                                                                                                                                                                                                                                          _)
                                                                                                                                                                                       _u_a6bZR))
                                                                                  _x_a6bZQ)
            -> Just
                 (Data.Array.Accelerate.Smart.Exp
                    (Data.Array.Accelerate.Smart.SmartExp
                       ((Data.Array.Accelerate.Smart.Match _u_a6bZR)
                          (Data.Array.Accelerate.Smart.SmartExp
                             ((Data.Array.Accelerate.Smart.Prj
                                 Data.Array.Accelerate.AST.Idx.PairIdxRight)
                                (Data.Array.Accelerate.Smart.SmartExp
                                   ((Data.Array.Accelerate.Smart.Prj
                                       Data.Array.Accelerate.AST.Idx.PairIdxRight)
                                      _x_a6bZQ)))))))
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   Right_ a -> ...
>   _        -> ...
"
[ 66 of 150] Compiling Data.Array.Accelerate.Pattern.Bool
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pattern/Bool.hs:25:1-16: Splicing declarations
    mkPattern ''Bool
  ======>
    {-# COMPLETE False_, True_ #-}
    pattern False_ ::
              GHC.Stack.Types.HasCallStack =>
              Data.Array.Accelerate.Smart.Exp Bool
    pattern False_ <- (_matchFalse_a6cEz -> Just ()) where
                     False_ = _buildFalse_a6cEy
    _buildFalse_a6cEy :: Data.Array.Accelerate.Smart.Exp Bool
    _buildFalse_a6cEy
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           0)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       Data.Array.Accelerate.Smart.Nil)))
    _matchFalse_a6cEz ::
      GHC.Stack.Types.HasCallStack =>
      Data.Array.Accelerate.Smart.Exp Bool -> Maybe ()
    _matchFalse_a6cEz (Data.Array.Accelerate.Smart.Exp _e_a6cEA)
      = case _e_a6cEA of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 0
                                                                                                                                    Data.Array.Accelerate.Representation.Tag.TagRunit)
                                                                                  _x_a6cEB)
            -> Just ()
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   False_ -> ...
>   _      -> ...
"
    pattern True_ ::
              GHC.Stack.Types.HasCallStack =>
              Data.Array.Accelerate.Smart.Exp Bool
    pattern True_ <- (_matchTrue_a6cED -> Just ()) where
                    True_ = _buildTrue_a6cEC
    _buildTrue_a6cEC :: Data.Array.Accelerate.Smart.Exp Bool
    _buildTrue_a6cEC
      = (Data.Array.Accelerate.Smart.Exp
           $ (Data.Array.Accelerate.Smart.SmartExp
                $ (Data.Array.Accelerate.Smart.Pair
                     (Data.Array.Accelerate.Smart.SmartExp
                        ((Data.Array.Accelerate.Smart.Const
                            (Data.Array.Accelerate.Type.SingleScalarType
                               (Data.Array.Accelerate.Type.NumSingleType
                                  (Data.Array.Accelerate.Type.IntegralNumType
                                     Data.Array.Accelerate.Type.TypeWord8))))
                           1)))
                    (Data.Array.Accelerate.Smart.SmartExp
                       Data.Array.Accelerate.Smart.Nil)))
    _matchTrue_a6cED ::
      GHC.Stack.Types.HasCallStack =>
      Data.Array.Accelerate.Smart.Exp Bool -> Maybe ()
    _matchTrue_a6cED (Data.Array.Accelerate.Smart.Exp _e_a6cEE)
      = case _e_a6cEE of
          Data.Array.Accelerate.Smart.SmartExp (Data.Array.Accelerate.Smart.Match (Data.Array.Accelerate.Representation.Tag.TagRtag 1
                                                                                                                                    Data.Array.Accelerate.Representation.Tag.TagRunit)
                                                                                  _x_a6cEF)
            -> Just ()
          Data.Array.Accelerate.Smart.SmartExp Data.Array.Accelerate.Smart.Match {}
            -> Nothing
          _ -> error
                 "Embedded pattern synonym used outside 'match' context.

To use case statements in the embedded language the case statement must
be applied as an n-ary function to the 'match' operator. For single
argument case statements this can be done inline using LambdaCase, for
example:

> x & match \case
>   True_ -> ...
>   _     -> ...
"
[ 67 of 150] Compiling Data.Array.Accelerate.Lift
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Lift.hs:(321,1)-(357,30): Splicing declarations
    runQ
      $ do let mkInstances_a6dyK ::
                 Name -> TypeQ -> ExpQ -> ExpQ -> ExpQ -> ExpQ -> Int -> Q [Dec]
               mkInstances_a6dyK
                 con_a6dyN
                 cst_a6dyO
                 smart_a6dyP
                 prj_a6dyQ
                 nil_a6dyR
                 pair_a6dyS
                 n_a6dyT
                 = do let xs_a6dyU
                            = [mkName ('x' : show i_a6dz3) | i_a6dz3 <- [0 .. n_a6dyT - 1]]
                          ts_a6dyV = map varT xs_a6dyU
                          res1_a6dyW = tupT ts_a6dyV
                          res2_a6dyX = tupT (map (conT con_a6dyN `appT`) ts_a6dyV)
                          plain_a6dyY
                            = tupT
                                (map
                                   (\ t_a6dz4
                                      -> [t| Plain $t_a6dz4 |]
                                         pending(rn) [<splice_a6dz5, t_a6dz4>])
                                   ts_a6dyV)
                          ctx1_a6dyZ
                            = tupT
                                (map
                                   (\ t_a6dz6
                                      -> [t| Lift $(conT con_a6dyN) $t_a6dz6 |]
                                         pending(rn) [<splice_a6dz8, t_a6dz6>,
                                                      <splice_a6dz7, conT con_a6dyN>])
                                   ts_a6dyV)
                          ctx2_a6dz0
                            = tupT
                                (map
                                   (\ t_a6dz9
                                      -> [t| $cst_a6dyO (Plain $t_a6dz9) |]
                                         pending(rn) [<splice_a6dzb, t_a6dz9>,
                                                      <splice_a6dza, cst_a6dyO>])
                                   ts_a6dyV)
                          ctx3_a6dz1 = tupT (map (appT cst_a6dyO) ts_a6dyV)
                          get_a6dz2 x_a6dzc 0
                            = [| $(conE con_a6dyN)
                                   ($smart_a6dyP ($prj_a6dyQ PairIdxRight $x_a6dzc)) |]
                              pending(rn) [<splice_a6dzg, x_a6dzc>, <splice_a6dzf, prj_a6dyQ>,
                                           <splice_a6dze, smart_a6dyP>,
                                           <splice_a6dzd, conE con_a6dyN>]
                          get_a6dz2 x_a6dzh i_a6dzi
                            = get_a6dz2
                                [| $smart_a6dyP ($prj_a6dyQ PairIdxLeft $x_a6dzh) |]
                                pending(rn) [<splice_a6dzl, x_a6dzh>, <splice_a6dzk, prj_a6dyQ>,
                                             <splice_a6dzj, smart_a6dyP>]
                                (i_a6dzi - 1)
                      _x_a6dzm <- newName "_x"
                      [d| instance $ctx3_a6dz1 =>
                                   Unlift $(conT con_a6dyN) $res2_a6dyX where
                            unlift $(conP con_a6dyN [varP _x_a6dzm])
                              = $(tupE
                                    (map
                                       (get_a6dz2 (varE _x_a6dzm))
                                       [(n_a6dyT - 1), (n_a6dyT - 2) .. 0]))
                          instance ($ctx1_a6dyZ, $ctx2_a6dz0) =>
                                   Lift $(conT con_a6dyN) $res1_a6dyW where
                            type Plain $res1_a6dyW = $plain_a6dyY
                            lift $(tupP (map varP xs_a6dyU))
                              = $(conE con_a6dyN)
                                  $(foldl
                                      (\ vs_a6dzz v_a6dzA
                                         -> do _v_a6dzB <- newName "_v"
                                               [| let
                                                    $(conP con_a6dyN [varP _v_a6dzB])
                                                      = lift $(varE v_a6dzA)
                                                  in
                                                    $smart_a6dyP
                                                      ($pair_a6dyS $vs_a6dzz $(varE _v_a6dzB)) |]
                                               pending(rn) [<splice_a6dzH, varE _v_a6dzB>,
                                                            <splice_a6dzG, vs_a6dzz>,
                                                            <splice_a6dzF, pair_a6dyS>,
                                                            <splice_a6dzE, smart_a6dyP>,
                                                            <splice_a6dzD, varE v_a6dzA>,
                                                            <splice_a6dzC, conP
                                                                             con_a6dyN
                                                                             [varP _v_a6dzB]>])
                                      [| $smart_a6dyP $nil_a6dyR |]
                                      pending(rn) [<splice_a6dzJ, nil_a6dyR>,
                                                   <splice_a6dzI, smart_a6dyP>]
                                      xs_a6dyU) |]
                      pending(rn) [<splice_a6dzL, plain_a6dyY>,
                                   <splice_a6dzK, res1_a6dyW>,
                                   <splice_a6dzy, foldl
                                                    (\ vs_a6dzz v_a6dzA
                                                       -> do _v_a6dzB <- newName "_v"
                                                             [| let
                                                                  $(conP con_a6dyN [varP _v_a6dzB])
                                                                    = lift $(varE v_a6dzA)
                                                                in
                                                                  $smart_a6dyP
                                                                    ($pair_a6dyS
                                                                       $vs_a6dzz
                                                                       $(varE _v_a6dzB)) |]
                                                             pending(rn) [<splice_a6dzH, varE
                                                                                           _v_a6dzB>,
                                                                          <splice_a6dzG, vs_a6dzz>,
                                                                          <splice_a6dzF, pair_a6dyS>,
                                                                          <splice_a6dzE, smart_a6dyP>,
                                                                          <splice_a6dzD, varE
                                                                                           v_a6dzA>,
                                                                          <splice_a6dzC, conP
                                                                                           con_a6dyN
                                                                                           [varP
                                                                                              _v_a6dzB]>])
                                                    [| $smart_a6dyP $nil_a6dyR |]
                                                    pending(rn) [<splice_a6dzJ, nil_a6dyR>,
                                                                 <splice_a6dzI, smart_a6dyP>]
                                                    xs_a6dyU>,
                                   <splice_a6dzx, conE con_a6dyN>,
                                   <splice_a6dzw, tupP (map varP xs_a6dyU)>,
                                   <splice_a6dzv, res1_a6dyW>, <splice_a6dzu, conT con_a6dyN>,
                                   <splice_a6dzt, ctx2_a6dz0>, <splice_a6dzs, ctx1_a6dyZ>,
                                   <splice_a6dzr, tupE
                                                    (map
                                                       (get_a6dz2 (varE _x_a6dzm))
                                                       [(n_a6dyT - 1), (n_a6dyT - 2) .. 0])>,
                                   <splice_a6dzq, conP con_a6dyN [varP _x_a6dzm]>,
                                   <splice_a6dzp, res2_a6dyX>, <splice_a6dzo, conT con_a6dyN>,
                                   <splice_a6dzn, ctx3_a6dz1>]
               mkAccInstances_a6dyL
                 = mkInstances_a6dyK
                     (mkName "Acc") [t| Arrays |] [| SmartAcc |] [| Aprj |] [| Anil |]
                     [| Apair |]
               mkExpInstances_a6dyM
                 = mkInstances_a6dyK
                     (mkName "Exp") [t| Elt |] [| SmartExp |] [| Prj |] [| Nil |]
                     [| Pair |]
           as_a6dzM <- mapM mkAccInstances_a6dyL [2 .. 16]
           es_a6dzN <- mapM mkExpInstances_a6dyM [2 .. 16]
           return $ concat (as_a6dzM ++ es_a6dzN)
  ======>
    instance ((Lift Acc x0, Lift Acc x1),
              (Arrays (Plain x0), Arrays (Plain x1))) =>
             Lift Acc (x0, x1) where
      type Plain (x0, x1) = (Plain x0, Plain x1)
      lift (x0, x1)
        = Acc
            (let Acc _v_a6dJJ = lift x1
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dJK = lift x0
                      in SmartAcc ((Apair (SmartAcc Anil)) _v_a6dJK)))
                    _v_a6dJJ))
    instance (Arrays x0, Arrays x1) =>
             Unlift Acc (Acc x0, Acc x1) where
      unlift (Acc _x_a6dJI)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJI)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dJI)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2))) =>
             Lift Acc (x0, x1, x2) where
      type Plain (x0, x1, x2) = (Plain x0, Plain x1, Plain x2)
      lift (x0, x1, x2)
        = Acc
            (let Acc _v_a6dJM = lift x2
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dJN = lift x1
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dJO = lift x0
                               in SmartAcc ((Apair (SmartAcc Anil)) _v_a6dJO)))
                             _v_a6dJN)))
                    _v_a6dJM))
    instance (Arrays x0, Arrays x1, Arrays x2) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2) where
      unlift (Acc _x_a6dJL)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJL)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJL)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dJL)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3))) =>
             Lift Acc (x0, x1, x2, x3) where
      type Plain (x0, x1, x2, x3) = (Plain x0, Plain x1, Plain x2,
                                     Plain x3)
      lift (x0, x1, x2, x3)
        = Acc
            (let Acc _v_a6dJQ = lift x3
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dJR = lift x2
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dJS = lift x1
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dJT = lift x0
                                        in SmartAcc ((Apair (SmartAcc Anil)) _v_a6dJT)))
                                      _v_a6dJS)))
                             _v_a6dJR)))
                    _v_a6dJQ))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3) where
      unlift (Acc _x_a6dJP)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dJP)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJP)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJP)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dJP)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4))) =>
             Lift Acc (x0, x1, x2, x3, x4) where
      type Plain (x0, x1, x2, x3, x4) = (Plain x0, Plain x1, Plain x2,
                                         Plain x3, Plain x4)
      lift (x0, x1, x2, x3, x4)
        = Acc
            (let Acc _v_a6dJV = lift x4
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dJW = lift x3
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dJX = lift x2
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dJY = lift x1
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dJZ = lift x0
                                                 in SmartAcc ((Apair (SmartAcc Anil)) _v_a6dJZ)))
                                               _v_a6dJY)))
                                      _v_a6dJX)))
                             _v_a6dJW)))
                    _v_a6dJV))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4) where
      unlift (Acc _x_a6dJU)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dJU)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dJU)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJU)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dJU)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dJU)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5) where
      type Plain (x0, x1, x2, x3, x4, x5) = (Plain x0, Plain x1,
                                             Plain x2, Plain x3, Plain x4, Plain x5)
      lift (x0, x1, x2, x3, x4, x5)
        = Acc
            (let Acc _v_a6dK1 = lift x5
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dK2 = lift x4
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dK3 = lift x3
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dK4 = lift x2
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dK5 = lift x1
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dK6 = lift x0
                                                          in
                                                            SmartAcc
                                                              ((Apair (SmartAcc Anil)) _v_a6dK6)))
                                                        _v_a6dK5)))
                                               _v_a6dK4)))
                                      _v_a6dK3)))
                             _v_a6dK2)))
                    _v_a6dK1))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5) where
      unlift (Acc _x_a6dK0)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dK0)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dK0)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dK0)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dK0)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dK0)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dK0)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6) where
      type Plain (x0, x1, x2, x3, x4, x5, x6) = (Plain x0, Plain x1,
                                                 Plain x2, Plain x3, Plain x4, Plain x5, Plain x6)
      lift (x0, x1, x2, x3, x4, x5, x6)
        = Acc
            (let Acc _v_a6dK8 = lift x6
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dK9 = lift x5
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dKa = lift x4
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dKb = lift x3
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dKc = lift x2
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dKd = lift x1
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dKe = lift x0
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair (SmartAcc Anil))
                                                                          _v_a6dKe)))
                                                                 _v_a6dKd)))
                                                        _v_a6dKc)))
                                               _v_a6dKb)))
                                      _v_a6dKa)))
                             _v_a6dK9)))
                    _v_a6dK8))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5,
                         Acc x6) where
      unlift (Acc _x_a6dK7)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dK7)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dK7)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dK7)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dK7)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dK7)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dK7)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dK7)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7) = (Plain x0, Plain x1,
                                                     Plain x2, Plain x3, Plain x4, Plain x5,
                                                     Plain x6, Plain x7)
      lift (x0, x1, x2, x3, x4, x5, x6, x7)
        = Acc
            (let Acc _v_a6dKg = lift x7
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dKh = lift x6
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dKi = lift x5
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dKj = lift x4
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dKk = lift x3
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dKl = lift x2
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dKm = lift x1
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dKn = lift x0
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (SmartAcc Anil))
                                                                                   _v_a6dKn)))
                                                                          _v_a6dKm)))
                                                                 _v_a6dKl)))
                                                        _v_a6dKk)))
                                               _v_a6dKj)))
                                      _v_a6dKi)))
                             _v_a6dKh)))
                    _v_a6dKg))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7) where
      unlift (Acc _x_a6dKf)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dKf)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dKf)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dKf)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dKf)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dKf)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKf)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKf)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dKf)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8) = (Plain x0,
                                                         Plain x1, Plain x2, Plain x3, Plain x4,
                                                         Plain x5, Plain x6, Plain x7, Plain x8)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8)
        = Acc
            (let Acc _v_a6dKp = lift x8
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dKq = lift x7
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dKr = lift x6
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dKs = lift x5
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dKt = lift x4
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dKu = lift x3
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dKv = lift x2
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dKw = lift x1
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dKx
                                                                                         = lift x0
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (SmartAcc
                                                                                                Anil))
                                                                                            _v_a6dKx)))
                                                                                   _v_a6dKw)))
                                                                          _v_a6dKv)))
                                                                 _v_a6dKu)))
                                                        _v_a6dKt)))
                                               _v_a6dKs)))
                                      _v_a6dKr)))
                             _v_a6dKq)))
                    _v_a6dKp))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8) where
      unlift (Acc _x_a6dKo)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dKo)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dKo)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dKo)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dKo)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dKo)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dKo)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKo)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKo)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dKo)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) = (Plain x0,
                                                             Plain x1, Plain x2, Plain x3, Plain x4,
                                                             Plain x5, Plain x6, Plain x7, Plain x8,
                                                             Plain x9)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
        = Acc
            (let Acc _v_a6dKz = lift x9
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dKA = lift x8
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dKB = lift x7
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dKC = lift x6
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dKD = lift x5
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dKE = lift x4
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dKF = lift x3
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dKG = lift x2
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dKH
                                                                                         = lift x1
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dKI
                                                                                                  = lift
                                                                                                      x0
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (SmartAcc
                                                                                                         Anil))
                                                                                                     _v_a6dKI)))
                                                                                            _v_a6dKH)))
                                                                                   _v_a6dKG)))
                                                                          _v_a6dKF)))
                                                                 _v_a6dKE)))
                                                        _v_a6dKD)))
                                               _v_a6dKC)))
                                      _v_a6dKB)))
                             _v_a6dKA)))
                    _v_a6dKz))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9) where
      unlift (Acc _x_a6dKy)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dKy)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dKy)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dKy)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dKy)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dKy)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dKy)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dKy)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKy)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKy)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dKy)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9, Lift Acc x10),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9), Arrays (Plain x10))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9,
                  x10) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
        = Acc
            (let Acc _v_a6dKK = lift x10
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dKL = lift x9
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dKM = lift x8
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dKN = lift x7
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dKO = lift x6
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dKP = lift x5
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dKQ = lift x4
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dKR = lift x3
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dKS
                                                                                         = lift x2
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dKT
                                                                                                  = lift
                                                                                                      x1
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (let
                                                                                                         Acc _v_a6dKU
                                                                                                           = lift
                                                                                                               x0
                                                                                                       in
                                                                                                         SmartAcc
                                                                                                           ((Apair
                                                                                                               (SmartAcc
                                                                                                                  Anil))
                                                                                                              _v_a6dKU)))
                                                                                                     _v_a6dKT)))
                                                                                            _v_a6dKS)))
                                                                                   _v_a6dKR)))
                                                                          _v_a6dKQ)))
                                                                 _v_a6dKP)))
                                                        _v_a6dKO)))
                                               _v_a6dKN)))
                                      _v_a6dKM)))
                             _v_a6dKL)))
                    _v_a6dKK))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9,
              Arrays x10) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9, Acc x10) where
      unlift (Acc _x_a6dKJ)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a6dKJ)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dKJ)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dKJ)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dKJ)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dKJ)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dKJ)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dKJ)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dKJ)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKJ)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKJ)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dKJ)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9, Lift Acc x10, Lift Acc x11),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9), Arrays (Plain x10), Arrays (Plain x11))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,
                  x11) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10, Plain x11)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
        = Acc
            (let Acc _v_a6dKW = lift x11
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dKX = lift x10
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dKY = lift x9
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dKZ = lift x8
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dL0 = lift x7
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dL1 = lift x6
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dL2 = lift x5
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dL3 = lift x4
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dL4
                                                                                         = lift x3
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dL5
                                                                                                  = lift
                                                                                                      x2
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (let
                                                                                                         Acc _v_a6dL6
                                                                                                           = lift
                                                                                                               x1
                                                                                                       in
                                                                                                         SmartAcc
                                                                                                           ((Apair
                                                                                                               (let
                                                                                                                  Acc _v_a6dL7
                                                                                                                    = lift
                                                                                                                        x0
                                                                                                                in
                                                                                                                  SmartAcc
                                                                                                                    ((Apair
                                                                                                                        (SmartAcc
                                                                                                                           Anil))
                                                                                                                       _v_a6dL7)))
                                                                                                              _v_a6dL6)))
                                                                                                     _v_a6dL5)))
                                                                                            _v_a6dL4)))
                                                                                   _v_a6dL3)))
                                                                          _v_a6dL2)))
                                                                 _v_a6dL1)))
                                                        _v_a6dL0)))
                                               _v_a6dKZ)))
                                      _v_a6dKY)))
                             _v_a6dKX)))
                    _v_a6dKW))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10,
              Arrays x11) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9, Acc x10, Acc x11) where
      unlift (Acc _x_a6dKV)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a6dKV)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a6dKV)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dKV)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dKV)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dKV)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dKV)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dKV)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dKV)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dKV)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKV)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dKV)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dKV)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9, Lift Acc x10, Lift Acc x11, Lift Acc x12),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9), Arrays (Plain x10), Arrays (Plain x11),
               Arrays (Plain x12))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                       x12) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                  x12) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10, Plain x11,
                          Plain x12)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
        = Acc
            (let Acc _v_a6dL9 = lift x12
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dLa = lift x11
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dLb = lift x10
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dLc = lift x9
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dLd = lift x8
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dLe = lift x7
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dLf = lift x6
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dLg = lift x5
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dLh
                                                                                         = lift x4
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dLi
                                                                                                  = lift
                                                                                                      x3
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (let
                                                                                                         Acc _v_a6dLj
                                                                                                           = lift
                                                                                                               x2
                                                                                                       in
                                                                                                         SmartAcc
                                                                                                           ((Apair
                                                                                                               (let
                                                                                                                  Acc _v_a6dLk
                                                                                                                    = lift
                                                                                                                        x1
                                                                                                                in
                                                                                                                  SmartAcc
                                                                                                                    ((Apair
                                                                                                                        (let
                                                                                                                           Acc _v_a6dLl
                                                                                                                             = lift
                                                                                                                                 x0
                                                                                                                         in
                                                                                                                           SmartAcc
                                                                                                                             ((Apair
                                                                                                                                 (SmartAcc
                                                                                                                                    Anil))
                                                                                                                                _v_a6dLl)))
                                                                                                                       _v_a6dLk)))
                                                                                                              _v_a6dLj)))
                                                                                                     _v_a6dLi)))
                                                                                            _v_a6dLh)))
                                                                                   _v_a6dLg)))
                                                                          _v_a6dLf)))
                                                                 _v_a6dLe)))
                                                        _v_a6dLd)))
                                               _v_a6dLc)))
                                      _v_a6dLb)))
                             _v_a6dLa)))
                    _v_a6dL9))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10,
              Arrays x11, Arrays x12) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9, Acc x10, Acc x11, Acc x12) where
      unlift (Acc _x_a6dL8)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dL8)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a6dL8)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a6dL8)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dL8)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dL8)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dL8)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dL8)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dL8)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dL8)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dL8)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dL8)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dL8)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dL8)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9, Lift Acc x10, Lift Acc x11, Lift Acc x12,
               Lift Acc x13),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9), Arrays (Plain x10), Arrays (Plain x11),
               Arrays (Plain x12), Arrays (Plain x13))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                       x13) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10, Plain x11,
                          Plain x12, Plain x13)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)
        = Acc
            (let Acc _v_a6dLn = lift x13
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dLo = lift x12
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dLp = lift x11
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dLq = lift x10
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dLr = lift x9
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dLs = lift x8
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dLt = lift x7
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dLu = lift x6
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dLv
                                                                                         = lift x5
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dLw
                                                                                                  = lift
                                                                                                      x4
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (let
                                                                                                         Acc _v_a6dLx
                                                                                                           = lift
                                                                                                               x3
                                                                                                       in
                                                                                                         SmartAcc
                                                                                                           ((Apair
                                                                                                               (let
                                                                                                                  Acc _v_a6dLy
                                                                                                                    = lift
                                                                                                                        x2
                                                                                                                in
                                                                                                                  SmartAcc
                                                                                                                    ((Apair
                                                                                                                        (let
                                                                                                                           Acc _v_a6dLz
                                                                                                                             = lift
                                                                                                                                 x1
                                                                                                                         in
                                                                                                                           SmartAcc
                                                                                                                             ((Apair
                                                                                                                                 (let
                                                                                                                                    Acc _v_a6dLA
                                                                                                                                      = lift
                                                                                                                                          x0
                                                                                                                                  in
                                                                                                                                    SmartAcc
                                                                                                                                      ((Apair
                                                                                                                                          (SmartAcc
                                                                                                                                             Anil))
                                                                                                                                         _v_a6dLA)))
                                                                                                                                _v_a6dLz)))
                                                                                                                       _v_a6dLy)))
                                                                                                              _v_a6dLx)))
                                                                                                     _v_a6dLw)))
                                                                                            _v_a6dLv)))
                                                                                   _v_a6dLu)))
                                                                          _v_a6dLt)))
                                                                 _v_a6dLs)))
                                                        _v_a6dLr)))
                                               _v_a6dLq)))
                                      _v_a6dLp)))
                             _v_a6dLo)))
                    _v_a6dLn))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10,
              Arrays x11, Arrays x12, Arrays x13) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9, Acc x10, Acc x11, Acc x12, Acc x13) where
      unlift (Acc _x_a6dLm)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a6dLm)))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dLm)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a6dLm)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a6dLm)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dLm)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dLm)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dLm)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dLm)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dLm)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dLm)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dLm)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dLm)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dLm)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dLm)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9, Lift Acc x10, Lift Acc x11, Lift Acc x12,
               Lift Acc x13, Lift Acc x14),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9), Arrays (Plain x10), Arrays (Plain x11),
               Arrays (Plain x12), Arrays (Plain x13), Arrays (Plain x14))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                       x13, x14) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13, x14) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4,
                               Plain x5, Plain x6, Plain x7, Plain x8, Plain x9, Plain x10,
                               Plain x11, Plain x12, Plain x13, Plain x14)
      lift
        (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14)
        = Acc
            (let Acc _v_a6dLC = lift x14
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dLD = lift x13
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dLE = lift x12
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dLF = lift x11
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dLG = lift x10
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dLH = lift x9
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dLI = lift x8
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dLJ = lift x7
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dLK
                                                                                         = lift x6
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dLL
                                                                                                  = lift
                                                                                                      x5
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (let
                                                                                                         Acc _v_a6dLM
                                                                                                           = lift
                                                                                                               x4
                                                                                                       in
                                                                                                         SmartAcc
                                                                                                           ((Apair
                                                                                                               (let
                                                                                                                  Acc _v_a6dLN
                                                                                                                    = lift
                                                                                                                        x3
                                                                                                                in
                                                                                                                  SmartAcc
                                                                                                                    ((Apair
                                                                                                                        (let
                                                                                                                           Acc _v_a6dLO
                                                                                                                             = lift
                                                                                                                                 x2
                                                                                                                         in
                                                                                                                           SmartAcc
                                                                                                                             ((Apair
                                                                                                                                 (let
                                                                                                                                    Acc _v_a6dLP
                                                                                                                                      = lift
                                                                                                                                          x1
                                                                                                                                  in
                                                                                                                                    SmartAcc
                                                                                                                                      ((Apair
                                                                                                                                          (let
                                                                                                                                             Acc _v_a6dLQ
                                                                                                                                               = lift
                                                                                                                                                   x0
                                                                                                                                           in
                                                                                                                                             SmartAcc
                                                                                                                                               ((Apair
                                                                                                                                                   (SmartAcc
                                                                                                                                                      Anil))
                                                                                                                                                  _v_a6dLQ)))
                                                                                                                                         _v_a6dLP)))
                                                                                                                                _v_a6dLO)))
                                                                                                                       _v_a6dLN)))
                                                                                                              _v_a6dLM)))
                                                                                                     _v_a6dLL)))
                                                                                            _v_a6dLK)))
                                                                                   _v_a6dLJ)))
                                                                          _v_a6dLI)))
                                                                 _v_a6dLH)))
                                                        _v_a6dLG)))
                                               _v_a6dLF)))
                                      _v_a6dLE)))
                             _v_a6dLD)))
                    _v_a6dLC))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10,
              Arrays x11, Arrays x12, Arrays x13, Arrays x14) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9, Acc x10, Acc x11, Acc x12, Acc x13,
                         Acc x14) where
      unlift (Acc _x_a6dLB)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartAcc
                                                                                                    ((Aprj
                                                                                                        PairIdxLeft)
                                                                                                       _x_a6dLB)))))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a6dLB)))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dLB)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a6dLB)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a6dLB)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dLB)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dLB)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dLB)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dLB)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dLB)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dLB)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dLB)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dLB)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dLB)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dLB)))
    instance ((Lift Acc x0, Lift Acc x1, Lift Acc x2, Lift Acc x3,
               Lift Acc x4, Lift Acc x5, Lift Acc x6, Lift Acc x7, Lift Acc x8,
               Lift Acc x9, Lift Acc x10, Lift Acc x11, Lift Acc x12,
               Lift Acc x13, Lift Acc x14, Lift Acc x15),
              (Arrays (Plain x0), Arrays (Plain x1), Arrays (Plain x2),
               Arrays (Plain x3), Arrays (Plain x4), Arrays (Plain x5),
               Arrays (Plain x6), Arrays (Plain x7), Arrays (Plain x8),
               Arrays (Plain x9), Arrays (Plain x10), Arrays (Plain x11),
               Arrays (Plain x12), Arrays (Plain x13), Arrays (Plain x14),
               Arrays (Plain x15))) =>
             Lift Acc (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                       x13, x14, x15) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13, x14, x15) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4,
                                    Plain x5, Plain x6, Plain x7, Plain x8, Plain x9, Plain x10,
                                    Plain x11, Plain x12, Plain x13, Plain x14, Plain x15)
      lift
        (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14,
         x15)
        = Acc
            (let Acc _v_a6dLS = lift x15
             in
               SmartAcc
                 ((Apair
                     (let Acc _v_a6dLT = lift x14
                      in
                        SmartAcc
                          ((Apair
                              (let Acc _v_a6dLU = lift x13
                               in
                                 SmartAcc
                                   ((Apair
                                       (let Acc _v_a6dLV = lift x12
                                        in
                                          SmartAcc
                                            ((Apair
                                                (let Acc _v_a6dLW = lift x11
                                                 in
                                                   SmartAcc
                                                     ((Apair
                                                         (let Acc _v_a6dLX = lift x10
                                                          in
                                                            SmartAcc
                                                              ((Apair
                                                                  (let Acc _v_a6dLY = lift x9
                                                                   in
                                                                     SmartAcc
                                                                       ((Apair
                                                                           (let
                                                                              Acc _v_a6dLZ = lift x8
                                                                            in
                                                                              SmartAcc
                                                                                ((Apair
                                                                                    (let
                                                                                       Acc _v_a6dM0
                                                                                         = lift x7
                                                                                     in
                                                                                       SmartAcc
                                                                                         ((Apair
                                                                                             (let
                                                                                                Acc _v_a6dM1
                                                                                                  = lift
                                                                                                      x6
                                                                                              in
                                                                                                SmartAcc
                                                                                                  ((Apair
                                                                                                      (let
                                                                                                         Acc _v_a6dM2
                                                                                                           = lift
                                                                                                               x5
                                                                                                       in
                                                                                                         SmartAcc
                                                                                                           ((Apair
                                                                                                               (let
                                                                                                                  Acc _v_a6dM3
                                                                                                                    = lift
                                                                                                                        x4
                                                                                                                in
                                                                                                                  SmartAcc
                                                                                                                    ((Apair
                                                                                                                        (let
                                                                                                                           Acc _v_a6dM4
                                                                                                                             = lift
                                                                                                                                 x3
                                                                                                                         in
                                                                                                                           SmartAcc
                                                                                                                             ((Apair
                                                                                                                                 (let
                                                                                                                                    Acc _v_a6dM5
                                                                                                                                      = lift
                                                                                                                                          x2
                                                                                                                                  in
                                                                                                                                    SmartAcc
                                                                                                                                      ((Apair
                                                                                                                                          (let
                                                                                                                                             Acc _v_a6dM6
                                                                                                                                               = lift
                                                                                                                                                   x1
                                                                                                                                           in
                                                                                                                                             SmartAcc
                                                                                                                                               ((Apair
                                                                                                                                                   (let
                                                                                                                                                      Acc _v_a6dM7
                                                                                                                                                        = lift
                                                                                                                                                            x0
                                                                                                                                                    in
                                                                                                                                                      SmartAcc
                                                                                                                                                        ((Apair
                                                                                                                                                            (SmartAcc
                                                                                                                                                               Anil))
                                                                                                                                                           _v_a6dM7)))
                                                                                                                                                  _v_a6dM6)))
                                                                                                                                         _v_a6dM5)))
                                                                                                                                _v_a6dM4)))
                                                                                                                       _v_a6dM3)))
                                                                                                              _v_a6dM2)))
                                                                                                     _v_a6dM1)))
                                                                                            _v_a6dM0)))
                                                                                   _v_a6dLZ)))
                                                                          _v_a6dLY)))
                                                                 _v_a6dLX)))
                                                        _v_a6dLW)))
                                               _v_a6dLV)))
                                      _v_a6dLU)))
                             _v_a6dLT)))
                    _v_a6dLS))
    instance (Arrays x0, Arrays x1, Arrays x2, Arrays x3, Arrays x4,
              Arrays x5, Arrays x6, Arrays x7, Arrays x8, Arrays x9, Arrays x10,
              Arrays x11, Arrays x12, Arrays x13, Arrays x14, Arrays x15) =>
             Unlift Acc (Acc x0, Acc x1, Acc x2, Acc x3, Acc x4, Acc x5, Acc x6,
                         Acc x7, Acc x8, Acc x9, Acc x10, Acc x11, Acc x12, Acc x13,
                         Acc x14, Acc x15) where
      unlift (Acc _x_a6dLR)
        = (Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartAcc
                                                                                                    ((Aprj
                                                                                                        PairIdxLeft)
                                                                                                       (SmartAcc
                                                                                                          ((Aprj
                                                                                                              PairIdxLeft)
                                                                                                             _x_a6dLR)))))))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartAcc
                                                                                                    ((Aprj
                                                                                                        PairIdxLeft)
                                                                                                       _x_a6dLR)))))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           (SmartAcc
                                                                                              ((Aprj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a6dLR)))))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     (SmartAcc
                                                                                        ((Aprj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dLR)))))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               (SmartAcc
                                                                                  ((Aprj
                                                                                      PairIdxLeft)
                                                                                     _x_a6dLR)))))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         (SmartAcc
                                                                            ((Aprj PairIdxLeft)
                                                                               _x_a6dLR)))))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   (SmartAcc
                                                                      ((Aprj PairIdxLeft)
                                                                         _x_a6dLR)))))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             (SmartAcc
                                                                ((Aprj PairIdxLeft)
                                                                   _x_a6dLR)))))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft)
                                                       (SmartAcc
                                                          ((Aprj PairIdxLeft)
                                                             _x_a6dLR)))))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc
                                              ((Aprj PairIdxLeft)
                                                 (SmartAcc
                                                    ((Aprj PairIdxLeft) _x_a6dLR)))))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc
                                        ((Aprj PairIdxLeft)
                                           (SmartAcc ((Aprj PairIdxLeft) _x_a6dLR)))))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc
                                  ((Aprj PairIdxLeft)
                                     (SmartAcc ((Aprj PairIdxLeft) _x_a6dLR)))))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft)
                         (SmartAcc
                            ((Aprj PairIdxLeft)
                               (SmartAcc ((Aprj PairIdxLeft) _x_a6dLR)))))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight)
                   (SmartAcc
                      ((Aprj PairIdxLeft) (SmartAcc ((Aprj PairIdxLeft) _x_a6dLR)))))), 
           Acc
             (SmartAcc
                ((Aprj PairIdxRight) (SmartAcc ((Aprj PairIdxLeft) _x_a6dLR)))), 
           Acc (SmartAcc ((Aprj PairIdxRight) _x_a6dLR)))
    instance ((Lift Exp x0, Lift Exp x1),
              (Elt (Plain x0), Elt (Plain x1))) =>
             Lift Exp (x0, x1) where
      type Plain (x0, x1) = (Plain x0, Plain x1)
      lift (x0, x1)
        = Exp
            (let Exp _v_a6dM9 = lift x1
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMa = lift x0
                      in SmartExp ((Pair (SmartExp Nil)) _v_a6dMa)))
                    _v_a6dM9))
    instance (Elt x0, Elt x1) => Unlift Exp (Exp x0, Exp x1) where
      unlift (Exp _x_a6dM8)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dM8)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dM8)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2))) =>
             Lift Exp (x0, x1, x2) where
      type Plain (x0, x1, x2) = (Plain x0, Plain x1, Plain x2)
      lift (x0, x1, x2)
        = Exp
            (let Exp _v_a6dMc = lift x2
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMd = lift x1
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMe = lift x0
                               in SmartExp ((Pair (SmartExp Nil)) _v_a6dMe)))
                             _v_a6dMd)))
                    _v_a6dMc))
    instance (Elt x0, Elt x1, Elt x2) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2) where
      unlift (Exp _x_a6dMb)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMb)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMb)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMb)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2),
               Elt (Plain x3))) =>
             Lift Exp (x0, x1, x2, x3) where
      type Plain (x0, x1, x2, x3) = (Plain x0, Plain x1, Plain x2,
                                     Plain x3)
      lift (x0, x1, x2, x3)
        = Exp
            (let Exp _v_a6dMg = lift x3
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMh = lift x2
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMi = lift x1
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dMj = lift x0
                                        in SmartExp ((Pair (SmartExp Nil)) _v_a6dMj)))
                                      _v_a6dMi)))
                             _v_a6dMh)))
                    _v_a6dMg))
    instance (Elt x0, Elt x1, Elt x2, Elt x3) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3) where
      unlift (Exp _x_a6dMf)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMf)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMf)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMf)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMf)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4))) =>
             Lift Exp (x0, x1, x2, x3, x4) where
      type Plain (x0, x1, x2, x3, x4) = (Plain x0, Plain x1, Plain x2,
                                         Plain x3, Plain x4)
      lift (x0, x1, x2, x3, x4)
        = Exp
            (let Exp _v_a6dMl = lift x4
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMm = lift x3
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMn = lift x2
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dMo = lift x1
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dMp = lift x0
                                                 in SmartExp ((Pair (SmartExp Nil)) _v_a6dMp)))
                                               _v_a6dMo)))
                                      _v_a6dMn)))
                             _v_a6dMm)))
                    _v_a6dMl))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4) where
      unlift (Exp _x_a6dMk)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dMk)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMk)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMk)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMk)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMk)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5) where
      type Plain (x0, x1, x2, x3, x4, x5) = (Plain x0, Plain x1,
                                             Plain x2, Plain x3, Plain x4, Plain x5)
      lift (x0, x1, x2, x3, x4, x5)
        = Exp
            (let Exp _v_a6dMr = lift x5
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMs = lift x4
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMt = lift x3
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dMu = lift x2
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dMv = lift x1
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dMw = lift x0
                                                          in
                                                            SmartExp
                                                              ((Pair (SmartExp Nil)) _v_a6dMw)))
                                                        _v_a6dMv)))
                                               _v_a6dMu)))
                                      _v_a6dMt)))
                             _v_a6dMs)))
                    _v_a6dMr))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5) where
      unlift (Exp _x_a6dMq)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dMq)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dMq)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMq)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMq)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMq)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMq)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6) where
      type Plain (x0, x1, x2, x3, x4, x5, x6) = (Plain x0, Plain x1,
                                                 Plain x2, Plain x3, Plain x4, Plain x5, Plain x6)
      lift (x0, x1, x2, x3, x4, x5, x6)
        = Exp
            (let Exp _v_a6dMy = lift x6
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMz = lift x5
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMA = lift x4
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dMB = lift x3
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dMC = lift x2
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dMD = lift x1
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dME = lift x0
                                                                   in
                                                                     SmartExp
                                                                       ((Pair (SmartExp Nil))
                                                                          _v_a6dME)))
                                                                 _v_a6dMD)))
                                                        _v_a6dMC)))
                                               _v_a6dMB)))
                                      _v_a6dMA)))
                             _v_a6dMz)))
                    _v_a6dMy))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5,
              Elt x6) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5,
                         Exp x6) where
      unlift (Exp _x_a6dMx)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dMx)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dMx)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dMx)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMx)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMx)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMx)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMx)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7) = (Plain x0, Plain x1,
                                                     Plain x2, Plain x3, Plain x4, Plain x5,
                                                     Plain x6, Plain x7)
      lift (x0, x1, x2, x3, x4, x5, x6, x7)
        = Exp
            (let Exp _v_a6dMG = lift x7
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMH = lift x6
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMI = lift x5
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dMJ = lift x4
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dMK = lift x3
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dML = lift x2
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dMM = lift x1
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dMN = lift x0
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (SmartExp Nil))
                                                                                   _v_a6dMN)))
                                                                          _v_a6dMM)))
                                                                 _v_a6dML)))
                                                        _v_a6dMK)))
                                               _v_a6dMJ)))
                                      _v_a6dMI)))
                             _v_a6dMH)))
                    _v_a6dMG))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7) where
      unlift (Exp _x_a6dMF)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dMF)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dMF)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dMF)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dMF)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMF)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMF)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMF)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMF)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8) = (Plain x0,
                                                         Plain x1, Plain x2, Plain x3, Plain x4,
                                                         Plain x5, Plain x6, Plain x7, Plain x8)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8)
        = Exp
            (let Exp _v_a6dMP = lift x8
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dMQ = lift x7
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dMR = lift x6
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dMS = lift x5
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dMT = lift x4
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dMU = lift x3
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dMV = lift x2
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dMW = lift x1
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dMX
                                                                                         = lift x0
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (SmartExp
                                                                                                Nil))
                                                                                            _v_a6dMX)))
                                                                                   _v_a6dMW)))
                                                                          _v_a6dMV)))
                                                                 _v_a6dMU)))
                                                        _v_a6dMT)))
                                               _v_a6dMS)))
                                      _v_a6dMR)))
                             _v_a6dMQ)))
                    _v_a6dMP))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8) where
      unlift (Exp _x_a6dMO)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dMO)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dMO)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dMO)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dMO)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dMO)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMO)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMO)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMO)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMO)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) = (Plain x0,
                                                             Plain x1, Plain x2, Plain x3, Plain x4,
                                                             Plain x5, Plain x6, Plain x7, Plain x8,
                                                             Plain x9)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
        = Exp
            (let Exp _v_a6dMZ = lift x9
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dN0 = lift x8
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dN1 = lift x7
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dN2 = lift x6
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dN3 = lift x5
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dN4 = lift x4
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dN5 = lift x3
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dN6 = lift x2
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dN7
                                                                                         = lift x1
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dN8
                                                                                                  = lift
                                                                                                      x0
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (SmartExp
                                                                                                         Nil))
                                                                                                     _v_a6dN8)))
                                                                                            _v_a6dN7)))
                                                                                   _v_a6dN6)))
                                                                          _v_a6dN5)))
                                                                 _v_a6dN4)))
                                                        _v_a6dN3)))
                                               _v_a6dN2)))
                                      _v_a6dN1)))
                             _v_a6dN0)))
                    _v_a6dMZ))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9) where
      unlift (Exp _x_a6dMY)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dMY)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dMY)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dMY)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dMY)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dMY)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dMY)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMY)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dMY)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dMY)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dMY)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9, Lift Exp x10),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9), Elt (Plain x10))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9,
                  x10) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
        = Exp
            (let Exp _v_a6dNa = lift x10
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dNb = lift x9
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dNc = lift x8
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dNd = lift x7
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dNe = lift x6
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dNf = lift x5
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dNg = lift x4
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dNh = lift x3
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dNi
                                                                                         = lift x2
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dNj
                                                                                                  = lift
                                                                                                      x1
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (let
                                                                                                         Exp _v_a6dNk
                                                                                                           = lift
                                                                                                               x0
                                                                                                       in
                                                                                                         SmartExp
                                                                                                           ((Pair
                                                                                                               (SmartExp
                                                                                                                  Nil))
                                                                                                              _v_a6dNk)))
                                                                                                     _v_a6dNj)))
                                                                                            _v_a6dNi)))
                                                                                   _v_a6dNh)))
                                                                          _v_a6dNg)))
                                                                 _v_a6dNf)))
                                                        _v_a6dNe)))
                                               _v_a6dNd)))
                                      _v_a6dNc)))
                             _v_a6dNb)))
                    _v_a6dNa))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9, Elt x10) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9, Exp x10) where
      unlift (Exp _x_a6dN9)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               _x_a6dN9)))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dN9)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dN9)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dN9)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dN9)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dN9)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dN9)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dN9)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dN9)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dN9)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dN9)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9, Lift Exp x10, Lift Exp x11),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9), Elt (Plain x10),
               Elt (Plain x11))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,
                  x11) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10, Plain x11)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
        = Exp
            (let Exp _v_a6dNm = lift x11
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dNn = lift x10
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dNo = lift x9
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dNp = lift x8
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dNq = lift x7
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dNr = lift x6
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dNs = lift x5
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dNt = lift x4
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dNu
                                                                                         = lift x3
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dNv
                                                                                                  = lift
                                                                                                      x2
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (let
                                                                                                         Exp _v_a6dNw
                                                                                                           = lift
                                                                                                               x1
                                                                                                       in
                                                                                                         SmartExp
                                                                                                           ((Pair
                                                                                                               (let
                                                                                                                  Exp _v_a6dNx
                                                                                                                    = lift
                                                                                                                        x0
                                                                                                                in
                                                                                                                  SmartExp
                                                                                                                    ((Pair
                                                                                                                        (SmartExp
                                                                                                                           Nil))
                                                                                                                       _v_a6dNx)))
                                                                                                              _v_a6dNw)))
                                                                                                     _v_a6dNv)))
                                                                                            _v_a6dNu)))
                                                                                   _v_a6dNt)))
                                                                          _v_a6dNs)))
                                                                 _v_a6dNr)))
                                                        _v_a6dNq)))
                                               _v_a6dNp)))
                                      _v_a6dNo)))
                             _v_a6dNn)))
                    _v_a6dNm))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9, Elt x10, Elt x11) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9, Exp x10, Exp x11) where
      unlift (Exp _x_a6dNl)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     _x_a6dNl)))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               _x_a6dNl)))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dNl)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dNl)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dNl)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dNl)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dNl)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dNl)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dNl)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dNl)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dNl)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dNl)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9, Lift Exp x10, Lift Exp x11, Lift Exp x12),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9), Elt (Plain x10), Elt (Plain x11),
               Elt (Plain x12))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                       x12) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                  x12) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10, Plain x11,
                          Plain x12)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
        = Exp
            (let Exp _v_a6dNz = lift x12
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dNA = lift x11
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dNB = lift x10
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dNC = lift x9
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dND = lift x8
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dNE = lift x7
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dNF = lift x6
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dNG = lift x5
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dNH
                                                                                         = lift x4
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dNI
                                                                                                  = lift
                                                                                                      x3
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (let
                                                                                                         Exp _v_a6dNJ
                                                                                                           = lift
                                                                                                               x2
                                                                                                       in
                                                                                                         SmartExp
                                                                                                           ((Pair
                                                                                                               (let
                                                                                                                  Exp _v_a6dNK
                                                                                                                    = lift
                                                                                                                        x1
                                                                                                                in
                                                                                                                  SmartExp
                                                                                                                    ((Pair
                                                                                                                        (let
                                                                                                                           Exp _v_a6dNL
                                                                                                                             = lift
                                                                                                                                 x0
                                                                                                                         in
                                                                                                                           SmartExp
                                                                                                                             ((Pair
                                                                                                                                 (SmartExp
                                                                                                                                    Nil))
                                                                                                                                _v_a6dNL)))
                                                                                                                       _v_a6dNK)))
                                                                                                              _v_a6dNJ)))
                                                                                                     _v_a6dNI)))
                                                                                            _v_a6dNH)))
                                                                                   _v_a6dNG)))
                                                                          _v_a6dNF)))
                                                                 _v_a6dNE)))
                                                        _v_a6dND)))
                                               _v_a6dNC)))
                                      _v_a6dNB)))
                             _v_a6dNA)))
                    _v_a6dNz))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9, Elt x10, Elt x11, Elt x12) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9, Exp x10, Exp x11, Exp x12) where
      unlift (Exp _x_a6dNy)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dNy)))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     _x_a6dNy)))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               _x_a6dNy)))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dNy)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dNy)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dNy)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dNy)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dNy)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dNy)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dNy)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dNy)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dNy)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dNy)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9, Lift Exp x10, Lift Exp x11, Lift Exp x12,
               Lift Exp x13),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9), Elt (Plain x10), Elt (Plain x11),
               Elt (Plain x12), Elt (Plain x13))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                       x13) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4, Plain x5,
                          Plain x6, Plain x7, Plain x8, Plain x9, Plain x10, Plain x11,
                          Plain x12, Plain x13)
      lift (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)
        = Exp
            (let Exp _v_a6dNN = lift x13
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dNO = lift x12
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dNP = lift x11
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dNQ = lift x10
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dNR = lift x9
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dNS = lift x8
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dNT = lift x7
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dNU = lift x6
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dNV
                                                                                         = lift x5
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dNW
                                                                                                  = lift
                                                                                                      x4
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (let
                                                                                                         Exp _v_a6dNX
                                                                                                           = lift
                                                                                                               x3
                                                                                                       in
                                                                                                         SmartExp
                                                                                                           ((Pair
                                                                                                               (let
                                                                                                                  Exp _v_a6dNY
                                                                                                                    = lift
                                                                                                                        x2
                                                                                                                in
                                                                                                                  SmartExp
                                                                                                                    ((Pair
                                                                                                                        (let
                                                                                                                           Exp _v_a6dNZ
                                                                                                                             = lift
                                                                                                                                 x1
                                                                                                                         in
                                                                                                                           SmartExp
                                                                                                                             ((Pair
                                                                                                                                 (let
                                                                                                                                    Exp _v_a6dO0
                                                                                                                                      = lift
                                                                                                                                          x0
                                                                                                                                  in
                                                                                                                                    SmartExp
                                                                                                                                      ((Pair
                                                                                                                                          (SmartExp
                                                                                                                                             Nil))
                                                                                                                                         _v_a6dO0)))
                                                                                                                                _v_a6dNZ)))
                                                                                                                       _v_a6dNY)))
                                                                                                              _v_a6dNX)))
                                                                                                     _v_a6dNW)))
                                                                                            _v_a6dNV)))
                                                                                   _v_a6dNU)))
                                                                          _v_a6dNT)))
                                                                 _v_a6dNS)))
                                                        _v_a6dNR)))
                                               _v_a6dNQ)))
                                      _v_a6dNP)))
                             _v_a6dNO)))
                    _v_a6dNN))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9, Elt x10, Elt x11, Elt x12, Elt x13) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9, Exp x10, Exp x11, Exp x12, Exp x13) where
      unlift (Exp _x_a6dNM)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           (SmartExp
                                                                                              ((Prj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a6dNM)))))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dNM)))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     _x_a6dNM)))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               _x_a6dNM)))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dNM)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dNM)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dNM)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dNM)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dNM)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dNM)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dNM)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dNM)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dNM)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dNM)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9, Lift Exp x10, Lift Exp x11, Lift Exp x12,
               Lift Exp x13, Lift Exp x14),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9), Elt (Plain x10), Elt (Plain x11),
               Elt (Plain x12), Elt (Plain x13), Elt (Plain x14))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                       x13, x14) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13, x14) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4,
                               Plain x5, Plain x6, Plain x7, Plain x8, Plain x9, Plain x10,
                               Plain x11, Plain x12, Plain x13, Plain x14)
      lift
        (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14)
        = Exp
            (let Exp _v_a6dO2 = lift x14
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dO3 = lift x13
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dO4 = lift x12
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dO5 = lift x11
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dO6 = lift x10
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dO7 = lift x9
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dO8 = lift x8
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dO9 = lift x7
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dOa
                                                                                         = lift x6
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dOb
                                                                                                  = lift
                                                                                                      x5
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (let
                                                                                                         Exp _v_a6dOc
                                                                                                           = lift
                                                                                                               x4
                                                                                                       in
                                                                                                         SmartExp
                                                                                                           ((Pair
                                                                                                               (let
                                                                                                                  Exp _v_a6dOd
                                                                                                                    = lift
                                                                                                                        x3
                                                                                                                in
                                                                                                                  SmartExp
                                                                                                                    ((Pair
                                                                                                                        (let
                                                                                                                           Exp _v_a6dOe
                                                                                                                             = lift
                                                                                                                                 x2
                                                                                                                         in
                                                                                                                           SmartExp
                                                                                                                             ((Pair
                                                                                                                                 (let
                                                                                                                                    Exp _v_a6dOf
                                                                                                                                      = lift
                                                                                                                                          x1
                                                                                                                                  in
                                                                                                                                    SmartExp
                                                                                                                                      ((Pair
                                                                                                                                          (let
                                                                                                                                             Exp _v_a6dOg
                                                                                                                                               = lift
                                                                                                                                                   x0
                                                                                                                                           in
                                                                                                                                             SmartExp
                                                                                                                                               ((Pair
                                                                                                                                                   (SmartExp
                                                                                                                                                      Nil))
                                                                                                                                                  _v_a6dOg)))
                                                                                                                                         _v_a6dOf)))
                                                                                                                                _v_a6dOe)))
                                                                                                                       _v_a6dOd)))
                                                                                                              _v_a6dOc)))
                                                                                                     _v_a6dOb)))
                                                                                            _v_a6dOa)))
                                                                                   _v_a6dO9)))
                                                                          _v_a6dO8)))
                                                                 _v_a6dO7)))
                                                        _v_a6dO6)))
                                               _v_a6dO5)))
                                      _v_a6dO4)))
                             _v_a6dO3)))
                    _v_a6dO2))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9, Elt x10, Elt x11, Elt x12, Elt x13,
              Elt x14) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9, Exp x10, Exp x11, Exp x12, Exp x13,
                         Exp x14) where
      unlift (Exp _x_a6dO1)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           (SmartExp
                                                                                              ((Prj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartExp
                                                                                                    ((Prj
                                                                                                        PairIdxLeft)
                                                                                                       _x_a6dO1)))))))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           (SmartExp
                                                                                              ((Prj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a6dO1)))))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dO1)))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     _x_a6dO1)))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               _x_a6dO1)))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dO1)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dO1)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dO1)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dO1)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dO1)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dO1)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dO1)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dO1)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dO1)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dO1)))
    instance ((Lift Exp x0, Lift Exp x1, Lift Exp x2, Lift Exp x3,
               Lift Exp x4, Lift Exp x5, Lift Exp x6, Lift Exp x7, Lift Exp x8,
               Lift Exp x9, Lift Exp x10, Lift Exp x11, Lift Exp x12,
               Lift Exp x13, Lift Exp x14, Lift Exp x15),
              (Elt (Plain x0), Elt (Plain x1), Elt (Plain x2), Elt (Plain x3),
               Elt (Plain x4), Elt (Plain x5), Elt (Plain x6), Elt (Plain x7),
               Elt (Plain x8), Elt (Plain x9), Elt (Plain x10), Elt (Plain x11),
               Elt (Plain x12), Elt (Plain x13), Elt (Plain x14),
               Elt (Plain x15))) =>
             Lift Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                       x13, x14, x15) where
      type Plain (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13, x14, x15) = (Plain x0, Plain x1, Plain x2, Plain x3, Plain x4,
                                    Plain x5, Plain x6, Plain x7, Plain x8, Plain x9, Plain x10,
                                    Plain x11, Plain x12, Plain x13, Plain x14, Plain x15)
      lift
        (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14,
         x15)
        = Exp
            (let Exp _v_a6dOi = lift x15
             in
               SmartExp
                 ((Pair
                     (let Exp _v_a6dOj = lift x14
                      in
                        SmartExp
                          ((Pair
                              (let Exp _v_a6dOk = lift x13
                               in
                                 SmartExp
                                   ((Pair
                                       (let Exp _v_a6dOl = lift x12
                                        in
                                          SmartExp
                                            ((Pair
                                                (let Exp _v_a6dOm = lift x11
                                                 in
                                                   SmartExp
                                                     ((Pair
                                                         (let Exp _v_a6dOn = lift x10
                                                          in
                                                            SmartExp
                                                              ((Pair
                                                                  (let Exp _v_a6dOo = lift x9
                                                                   in
                                                                     SmartExp
                                                                       ((Pair
                                                                           (let
                                                                              Exp _v_a6dOp = lift x8
                                                                            in
                                                                              SmartExp
                                                                                ((Pair
                                                                                    (let
                                                                                       Exp _v_a6dOq
                                                                                         = lift x7
                                                                                     in
                                                                                       SmartExp
                                                                                         ((Pair
                                                                                             (let
                                                                                                Exp _v_a6dOr
                                                                                                  = lift
                                                                                                      x6
                                                                                              in
                                                                                                SmartExp
                                                                                                  ((Pair
                                                                                                      (let
                                                                                                         Exp _v_a6dOs
                                                                                                           = lift
                                                                                                               x5
                                                                                                       in
                                                                                                         SmartExp
                                                                                                           ((Pair
                                                                                                               (let
                                                                                                                  Exp _v_a6dOt
                                                                                                                    = lift
                                                                                                                        x4
                                                                                                                in
                                                                                                                  SmartExp
                                                                                                                    ((Pair
                                                                                                                        (let
                                                                                                                           Exp _v_a6dOu
                                                                                                                             = lift
                                                                                                                                 x3
                                                                                                                         in
                                                                                                                           SmartExp
                                                                                                                             ((Pair
                                                                                                                                 (let
                                                                                                                                    Exp _v_a6dOv
                                                                                                                                      = lift
                                                                                                                                          x2
                                                                                                                                  in
                                                                                                                                    SmartExp
                                                                                                                                      ((Pair
                                                                                                                                          (let
                                                                                                                                             Exp _v_a6dOw
                                                                                                                                               = lift
                                                                                                                                                   x1
                                                                                                                                           in
                                                                                                                                             SmartExp
                                                                                                                                               ((Pair
                                                                                                                                                   (let
                                                                                                                                                      Exp _v_a6dOx
                                                                                                                                                        = lift
                                                                                                                                                            x0
                                                                                                                                                    in
                                                                                                                                                      SmartExp
                                                                                                                                                        ((Pair
                                                                                                                                                            (SmartExp
                                                                                                                                                               Nil))
                                                                                                                                                           _v_a6dOx)))
                                                                                                                                                  _v_a6dOw)))
                                                                                                                                         _v_a6dOv)))
                                                                                                                                _v_a6dOu)))
                                                                                                                       _v_a6dOt)))
                                                                                                              _v_a6dOs)))
                                                                                                     _v_a6dOr)))
                                                                                            _v_a6dOq)))
                                                                                   _v_a6dOp)))
                                                                          _v_a6dOo)))
                                                                 _v_a6dOn)))
                                                        _v_a6dOm)))
                                               _v_a6dOl)))
                                      _v_a6dOk)))
                             _v_a6dOj)))
                    _v_a6dOi))
    instance (Elt x0, Elt x1, Elt x2, Elt x3, Elt x4, Elt x5, Elt x6,
              Elt x7, Elt x8, Elt x9, Elt x10, Elt x11, Elt x12, Elt x13,
              Elt x14, Elt x15) =>
             Unlift Exp (Exp x0, Exp x1, Exp x2, Exp x3, Exp x4, Exp x5, Exp x6,
                         Exp x7, Exp x8, Exp x9, Exp x10, Exp x11, Exp x12, Exp x13,
                         Exp x14, Exp x15) where
      unlift (Exp _x_a6dOh)
        = (Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           (SmartExp
                                                                                              ((Prj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartExp
                                                                                                    ((Prj
                                                                                                        PairIdxLeft)
                                                                                                       (SmartExp
                                                                                                          ((Prj
                                                                                                              PairIdxLeft)
                                                                                                             _x_a6dOh)))))))))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           (SmartExp
                                                                                              ((Prj
                                                                                                  PairIdxLeft)
                                                                                                 (SmartExp
                                                                                                    ((Prj
                                                                                                        PairIdxLeft)
                                                                                                       _x_a6dOh)))))))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           (SmartExp
                                                                                              ((Prj
                                                                                                  PairIdxLeft)
                                                                                                 _x_a6dOh)))))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     (SmartExp
                                                                                        ((Prj
                                                                                            PairIdxLeft)
                                                                                           _x_a6dOh)))))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               (SmartExp
                                                                                  ((Prj PairIdxLeft)
                                                                                     _x_a6dOh)))))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         (SmartExp
                                                                            ((Prj PairIdxLeft)
                                                                               _x_a6dOh)))))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   (SmartExp
                                                                      ((Prj PairIdxLeft)
                                                                         _x_a6dOh)))))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             (SmartExp
                                                                ((Prj PairIdxLeft)
                                                                   _x_a6dOh)))))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft)
                                                       (SmartExp
                                                          ((Prj PairIdxLeft)
                                                             _x_a6dOh)))))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp
                                              ((Prj PairIdxLeft)
                                                 (SmartExp
                                                    ((Prj PairIdxLeft) _x_a6dOh)))))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp
                                        ((Prj PairIdxLeft)
                                           (SmartExp ((Prj PairIdxLeft) _x_a6dOh)))))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft)
                               (SmartExp
                                  ((Prj PairIdxLeft)
                                     (SmartExp ((Prj PairIdxLeft) _x_a6dOh)))))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft)
                         (SmartExp
                            ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dOh)))))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight)
                   (SmartExp
                      ((Prj PairIdxLeft) (SmartExp ((Prj PairIdxLeft) _x_a6dOh)))))), 
           Exp
             (SmartExp
                ((Prj PairIdxRight) (SmartExp ((Prj PairIdxLeft) _x_a6dOh)))), 
           Exp (SmartExp ((Prj PairIdxRight) _x_a6dOh)))
[ 68 of 150] Compiling Data.Array.Accelerate.Data.Functor
[ 69 of 150] Compiling Data.Array.Accelerate.Classes.Num
[ 70 of 150] Compiling Data.Array.Accelerate.Classes.Fractional
[ 71 of 150] Compiling Data.Array.Accelerate.Classes.Floating
[ 72 of 150] Compiling Data.Array.Accelerate.Classes.ToFloating
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Classes/ToFloating.hs:(47,2)-(79,2): Splicing declarations
    runQ
      $ do let digItOut_a6Dk8 :: Name -> Q [Name]
               digItOut_a6Dk8 name_a6Dka
                 = do TyConI (DataD _ _ _ _ cons_a6Dkb _) <- reify name_a6Dka
                      let dig_a6Dkc (NormalC _ [(_, AppT (ConT n_a6Dkd) (VarT _))])
                            = digItOut_a6Dk8 n_a6Dkd
                          dig_a6Dkc
                            (ForallC _ _ (GadtC _ [(_, AppT (ConT n_a6Dke) (VarT _))] _))
                            = digItOut_a6Dk8 n_a6Dke
                          dig_a6Dkc (GadtC _ _ (AppT (ConT _) (ConT n_a6Dkf)))
                            = return [n_a6Dkf]
                          dig_a6Dkc _
                            = error "Unexpected case generating ToFloating instances"
                      concat `fmap` mapM dig_a6Dkc cons_a6Dkb
               thToFloating_a6Dk9 :: Name -> Name -> Q Dec
               thToFloating_a6Dk9 a_a6Dkg b_a6Dkh
                 = let
                     ty_a6Dki
                       = AppT
                           (AppT (ConT (mkName "ToFloating")) (ConT a_a6Dkg)) (ConT b_a6Dkh)
                     dec_a6Dkj
                       = ValD
                           (VarP (mkName "toFloating")) (NormalB (VarE (mkName f_a6Dkk))) []
                     f_a6Dkk
                       | a_a6Dkg == b_a6Dkh = "id"
                       | otherwise = "mkToFloating"
                   in instanceD (return []) (return ty_a6Dki) [return dec_a6Dkj]
           as_a6Dkl <- digItOut_a6Dk8 ''NumType
           bs_a6Dkm <- digItOut_a6Dk8 ''FloatingType
           sequence
             [thToFloating_a6Dk9 a_a6Dkn b_a6Dko |
                a_a6Dkn <- as_a6Dkl, b_a6Dko <- bs_a6Dkm]
  ======>
    instance ToFloating Int Half where
      toFloating = mkToFloating
    instance ToFloating Int Float where
      toFloating = mkToFloating
    instance ToFloating Int Double where
      toFloating = mkToFloating
    instance ToFloating Int8 Half where
      toFloating = mkToFloating
    instance ToFloating Int8 Float where
      toFloating = mkToFloating
    instance ToFloating Int8 Double where
      toFloating = mkToFloating
    instance ToFloating Int16 Half where
      toFloating = mkToFloating
    instance ToFloating Int16 Float where
      toFloating = mkToFloating
    instance ToFloating Int16 Double where
      toFloating = mkToFloating
    instance ToFloating Int32 Half where
      toFloating = mkToFloating
    instance ToFloating Int32 Float where
      toFloating = mkToFloating
    instance ToFloating Int32 Double where
      toFloating = mkToFloating
    instance ToFloating Int64 Half where
      toFloating = mkToFloating
    instance ToFloating Int64 Float where
      toFloating = mkToFloating
    instance ToFloating Int64 Double where
      toFloating = mkToFloating
    instance ToFloating Word Half where
      toFloating = mkToFloating
    instance ToFloating Word Float where
      toFloating = mkToFloating
    instance ToFloating Word Double where
      toFloating = mkToFloating
    instance ToFloating Word8 Half where
      toFloating = mkToFloating
    instance ToFloating Word8 Float where
      toFloating = mkToFloating
    instance ToFloating Word8 Double where
      toFloating = mkToFloating
    instance ToFloating Word16 Half where
      toFloating = mkToFloating
    instance ToFloating Word16 Float where
      toFloating = mkToFloating
    instance ToFloating Word16 Double where
      toFloating = mkToFloating
    instance ToFloating Word32 Half where
      toFloating = mkToFloating
    instance ToFloating Word32 Float where
      toFloating = mkToFloating
    instance ToFloating Word32 Double where
      toFloating = mkToFloating
    instance ToFloating Word64 Half where
      toFloating = mkToFloating
    instance ToFloating Word64 Float where
      toFloating = mkToFloating
    instance ToFloating Word64 Double where
      toFloating = mkToFloating
    instance ToFloating Half Half where
      toFloating = id
    instance ToFloating Half Float where
      toFloating = mkToFloating
    instance ToFloating Half Double where
      toFloating = mkToFloating
    instance ToFloating Float Half where
      toFloating = mkToFloating
    instance ToFloating Float Float where
      toFloating = id
    instance ToFloating Float Double where
      toFloating = mkToFloating
    instance ToFloating Double Half where
      toFloating = mkToFloating
    instance ToFloating Double Float where
      toFloating = mkToFloating
    instance ToFloating Double Double where
      toFloating = id
[ 73 of 150] Compiling Data.Array.Accelerate.Classes.Eq
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Classes/Eq.hs:(133,1)-(204,43): Splicing declarations
    runQ
      $ do let integralTypes_a6Exa :: [Name]
               integralTypes_a6Exa
                 = [''Int, ''Int8, ''Int16, ''Int32, ''Int64, ''Word, ''Word8,
                    ''Word16, ''Word32, ''Word64]
               floatingTypes_a6Exb :: [Name]
               floatingTypes_a6Exb = [''Half, ''Float, ''Double]
               nonNumTypes_a6Exc :: [Name]
               nonNumTypes_a6Exc = [''Char]
               cTypes_a6Exd :: [Name]
               cTypes_a6Exd
                 = [''CInt, ''CUInt, ''CLong, ''CULong, ''CLLong, ''CULLong,
                    ''CShort, ''CUShort, ''CChar, ''CUChar, ''CSChar, ''CFloat,
                    ''CDouble]
               mkPrim_a6Exe :: Name -> Q [Dec]
               mkPrim_a6Exe t_a6Exg
                 = [d| instance Eq $(conT t_a6Exg) where
                         (==) = mkEq
                         (/=) = mkNEq |]
                   pending(rn) [<splice_a6Exh, conT t_a6Exg>]
               mkTup_a6Exf :: Int -> Q [Dec]
               mkTup_a6Exf n_a6Exi
                 = let
                     xs_a6Exj
                       = [mkName ('x' : show i_a6Exo) | i_a6Exo <- [0 .. n_a6Exi - 1]]
                     ys_a6Exk
                       = [mkName ('y' : show i_a6Exp) | i_a6Exp <- [0 .. n_a6Exi - 1]]
                     cst_a6Exl
                       = tupT
                           (map
                              (\ x_a6Exq
                                 -> [t| Eq $(varT x_a6Exq) |]
                                    pending(rn) [<splice_a6Exr, varT x_a6Exq>])
                              xs_a6Exj)
                     res_a6Exm = tupT (map varT xs_a6Exj)
                     pat_a6Exn vs_a6Exs
                       = conP (mkName ('T' : show n_a6Exi)) (map varP vs_a6Exs)
                   in
                     [d| instance ($cst_a6Exl) => Eq $res_a6Exm where
                           $(pat_a6Exn xs_a6Exj) == $(pat_a6Exn ys_a6Exk)
                             = $(foldr1
                                   (\ vs_a6Exy v_a6Exz
                                      -> [| $vs_a6Exy && $v_a6Exz |]
                                         pending(rn) [<splice_a6ExB, v_a6Exz>,
                                                      <splice_a6ExA, vs_a6Exy>])
                                   (zipWith
                                      (\ x_a6ExC y_a6ExD
                                         -> [| $x_a6ExC == $y_a6ExD |]
                                            pending(rn) [<splice_a6ExF, y_a6ExD>,
                                                         <splice_a6ExE, x_a6ExC>])
                                      (map varE xs_a6Exj) (map varE ys_a6Exk)))
                           $(pat_a6Exn xs_a6Exj) /= $(pat_a6Exn ys_a6Exk)
                             = $(foldr1
                                   (\ vs_a6ExJ v_a6ExK
                                      -> [| $vs_a6ExJ || $v_a6ExK |]
                                         pending(rn) [<splice_a6ExM, v_a6ExK>,
                                                      <splice_a6ExL, vs_a6ExJ>])
                                   (zipWith
                                      (\ x_a6ExN y_a6ExO
                                         -> [| $x_a6ExN /= $y_a6ExO |]
                                            pending(rn) [<splice_a6ExQ, y_a6ExO>,
                                                         <splice_a6ExP, x_a6ExN>])
                                      (map varE xs_a6Exj) (map varE ys_a6Exk))) |]
                     pending(rn) [<splice_a6ExI, foldr1
                                                   (\ vs_a6ExJ v_a6ExK
                                                      -> [| $vs_a6ExJ || $v_a6ExK |]
                                                         pending(rn) [<splice_a6ExM, v_a6ExK>,
                                                                      <splice_a6ExL, vs_a6ExJ>])
                                                   (zipWith
                                                      (\ x_a6ExN y_a6ExO
                                                         -> [| $x_a6ExN /= $y_a6ExO |]
                                                            pending(rn) [<splice_a6ExQ, y_a6ExO>,
                                                                         <splice_a6ExP, x_a6ExN>])
                                                      (map varE xs_a6Exj) (map varE ys_a6Exk))>,
                                  <splice_a6ExH, pat_a6Exn ys_a6Exk>,
                                  <splice_a6ExG, pat_a6Exn xs_a6Exj>,
                                  <splice_a6Exx, foldr1
                                                   (\ vs_a6Exy v_a6Exz
                                                      -> [| $vs_a6Exy && $v_a6Exz |]
                                                         pending(rn) [<splice_a6ExB, v_a6Exz>,
                                                                      <splice_a6ExA, vs_a6Exy>])
                                                   (zipWith
                                                      (\ x_a6ExC y_a6ExD
                                                         -> [| $x_a6ExC == $y_a6ExD |]
                                                            pending(rn) [<splice_a6ExF, y_a6ExD>,
                                                                         <splice_a6ExE, x_a6ExC>])
                                                      (map varE xs_a6Exj) (map varE ys_a6Exk))>,
                                  <splice_a6Exw, pat_a6Exn ys_a6Exk>,
                                  <splice_a6Exv, pat_a6Exn xs_a6Exj>, <splice_a6Exu, res_a6Exm>,
                                  <splice_a6Ext, cst_a6Exl>]
           is_a6ExR <- mapM mkPrim_a6Exe integralTypes_a6Exa
           fs_a6ExS <- mapM mkPrim_a6Exe floatingTypes_a6Exb
           ns_a6ExT <- mapM mkPrim_a6Exe nonNumTypes_a6Exc
           cs_a6ExU <- mapM mkPrim_a6Exe cTypes_a6Exd
           ts_a6ExV <- mapM mkTup_a6Exf [2 .. 16]
           return
             $ concat
                 (concat [is_a6ExR, fs_a6ExS, ns_a6ExT, cs_a6ExU, ts_a6ExV])
  ======>
    instance Eq Int where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Int8 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Int16 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Int32 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Int64 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Word where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Word8 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Word16 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Word32 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Word64 where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Half where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Float where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Double where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq Char where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CInt where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CUInt where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CLong where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CULong where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CLLong where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CULLong where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CShort where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CUShort where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CChar where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CUChar where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CSChar where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CFloat where
      (==) = mkEq
      (/=) = mkNEq
    instance Eq CDouble where
      (==) = mkEq
      (/=) = mkNEq
    instance (Eq x0, Eq x1) => Eq (x0, x1) where
      (==) (T2 x0 x1) (T2 y0 y1) = ((x0 == y0) && (x1 == y1))
      (/=) (T2 x0 x1) (T2 y0 y1) = ((x0 /= y0) || (x1 /= y1))
    instance (Eq x0, Eq x1, Eq x2) => Eq (x0, x1, x2) where
      (==) (T3 x0 x1 x2) (T3 y0 y1 y2)
        = ((x0 == y0) && ((x1 == y1) && (x2 == y2)))
      (/=) (T3 x0 x1 x2) (T3 y0 y1 y2)
        = ((x0 /= y0) || ((x1 /= y1) || (x2 /= y2)))
    instance (Eq x0, Eq x1, Eq x2, Eq x3) => Eq (x0, x1, x2, x3) where
      (==) (T4 x0 x1 x2 x3) (T4 y0 y1 y2 y3)
        = ((x0 == y0) && ((x1 == y1) && ((x2 == y2) && (x3 == y3))))
      (/=) (T4 x0 x1 x2 x3) (T4 y0 y1 y2 y3)
        = ((x0 /= y0) || ((x1 /= y1) || ((x2 /= y2) || (x3 /= y3))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4) =>
             Eq (x0, x1, x2, x3, x4) where
      (==) (T5 x0 x1 x2 x3 x4) (T5 y0 y1 y2 y3 y4)
        = ((x0 == y0)
             && ((x1 == y1) && ((x2 == y2) && ((x3 == y3) && (x4 == y4)))))
      (/=) (T5 x0 x1 x2 x3 x4) (T5 y0 y1 y2 y3 y4)
        = ((x0 /= y0)
             || ((x1 /= y1) || ((x2 /= y2) || ((x3 /= y3) || (x4 /= y4)))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5) =>
             Eq (x0, x1, x2, x3, x4, x5) where
      (==) (T6 x0 x1 x2 x3 x4 x5) (T6 y0 y1 y2 y3 y4 y5)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  && ((x2 == y2) && ((x3 == y3) && ((x4 == y4) && (x5 == y5))))))
      (/=) (T6 x0 x1 x2 x3 x4 x5) (T6 y0 y1 y2 y3 y4 y5)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  || ((x2 /= y2) || ((x3 /= y3) || ((x4 /= y4) || (x5 /= y5))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6) =>
             Eq (x0, x1, x2, x3, x4, x5, x6) where
      (==) (T7 x0 x1 x2 x3 x4 x5 x6) (T7 y0 y1 y2 y3 y4 y5 y6)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       && ((x3 == y3) && ((x4 == y4) && ((x5 == y5) && (x6 == y6)))))))
      (/=) (T7 x0 x1 x2 x3 x4 x5 x6) (T7 y0 y1 y2 y3 y4 y5 y6)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       || ((x3 /= y3) || ((x4 /= y4) || ((x5 /= y5) || (x6 /= y6)))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6,
              Eq x7) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7) where
      (==) (T8 x0 x1 x2 x3 x4 x5 x6 x7) (T8 y0 y1 y2 y3 y4 y5 y6 y7)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            && ((x4 == y4) && ((x5 == y5) && ((x6 == y6) && (x7 == y7))))))))
      (/=) (T8 x0 x1 x2 x3 x4 x5 x6 x7) (T8 y0 y1 y2 y3 y4 y5 y6 y7)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            || ((x4 /= y4) || ((x5 /= y5) || ((x6 /= y6) || (x7 /= y7))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8) where
      (==)
        (T9 x0 x1 x2 x3 x4 x5 x6 x7 x8)
        (T9 y0 y1 y2 y3 y4 y5 y6 y7 y8)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 && ((x5 == y5) && ((x6 == y6) && ((x7 == y7) && (x8 == y8)))))))))
      (/=)
        (T9 x0 x1 x2 x3 x4 x5 x6 x7 x8)
        (T9 y0 y1 y2 y3 y4 y5 y6 y7 y8)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 || ((x5 /= y5) || ((x6 /= y6) || ((x7 /= y7) || (x8 /= y8)))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) where
      (==)
        (T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9)
        (T10 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           && ((x7 == y7) && ((x8 == y8) && (x9 == y9))))))))))
      (/=)
        (T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9)
        (T10 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           || ((x7 /= y7) || ((x8 /= y8) || (x9 /= y9))))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9, Eq x10) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) where
      (==)
        (T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)
        (T11 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           &&
                                             ((x7 == y7)
                                                &&
                                                  ((x8 == y8)
                                                     && ((x9 == y9) && (x10 == y10)))))))))))
      (/=)
        (T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)
        (T11 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           ||
                                             ((x7 /= y7)
                                                ||
                                                  ((x8 /= y8)
                                                     || ((x9 /= y9) || (x10 /= y10)))))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9, Eq x10, Eq x11) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) where
      (==)
        (T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)
        (T12 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           &&
                                             ((x7 == y7)
                                                &&
                                                  ((x8 == y8)
                                                     &&
                                                       ((x9 == y9)
                                                          &&
                                                            ((x10 == y10) && (x11 == y11))))))))))))
      (/=)
        (T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)
        (T12 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           ||
                                             ((x7 /= y7)
                                                ||
                                                  ((x8 /= y8)
                                                     ||
                                                       ((x9 /= y9)
                                                          ||
                                                            ((x10 /= y10) || (x11 /= y11))))))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9, Eq x10, Eq x11, Eq x12) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) where
      (==)
        (T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)
        (T13 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           &&
                                             ((x7 == y7)
                                                &&
                                                  ((x8 == y8)
                                                     &&
                                                       ((x9 == y9)
                                                          &&
                                                            ((x10 == y10)
                                                               &&
                                                                 ((x11 == y11)
                                                                    && (x12 == y12)))))))))))))
      (/=)
        (T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)
        (T13 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           ||
                                             ((x7 /= y7)
                                                ||
                                                  ((x8 /= y8)
                                                     ||
                                                       ((x9 /= y9)
                                                          ||
                                                            ((x10 /= y10)
                                                               ||
                                                                 ((x11 /= y11)
                                                                    || (x12 /= y12)))))))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9, Eq x10, Eq x11, Eq x12, Eq x13) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                 x13) where
      (==)
        (T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)
        (T14 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           &&
                                             ((x7 == y7)
                                                &&
                                                  ((x8 == y8)
                                                     &&
                                                       ((x9 == y9)
                                                          &&
                                                            ((x10 == y10)
                                                               &&
                                                                 ((x11 == y11)
                                                                    &&
                                                                      ((x12 == y12)
                                                                         &&
                                                                           (x13 == y13))))))))))))))
      (/=)
        (T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)
        (T14 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           ||
                                             ((x7 /= y7)
                                                ||
                                                  ((x8 /= y8)
                                                     ||
                                                       ((x9 /= y9)
                                                          ||
                                                            ((x10 /= y10)
                                                               ||
                                                                 ((x11 /= y11)
                                                                    ||
                                                                      ((x12 /= y12)
                                                                         ||
                                                                           (x13 /= y13))))))))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9, Eq x10, Eq x11, Eq x12, Eq x13, Eq x14) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                 x14) where
      (==)
        (T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)
        (T15 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           &&
                                             ((x7 == y7)
                                                &&
                                                  ((x8 == y8)
                                                     &&
                                                       ((x9 == y9)
                                                          &&
                                                            ((x10 == y10)
                                                               &&
                                                                 ((x11 == y11)
                                                                    &&
                                                                      ((x12 == y12)
                                                                         &&
                                                                           ((x13 == y13)
                                                                              &&
                                                                                (x14
                                                                                   ==
                                                                                     y14)))))))))))))))
      (/=)
        (T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)
        (T15 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           ||
                                             ((x7 /= y7)
                                                ||
                                                  ((x8 /= y8)
                                                     ||
                                                       ((x9 /= y9)
                                                          ||
                                                            ((x10 /= y10)
                                                               ||
                                                                 ((x11 /= y11)
                                                                    ||
                                                                      ((x12 /= y12)
                                                                         ||
                                                                           ((x13 /= y13)
                                                                              ||
                                                                                (x14
                                                                                   /=
                                                                                     y14)))))))))))))))
    instance (Eq x0, Eq x1, Eq x2, Eq x3, Eq x4, Eq x5, Eq x6, Eq x7,
              Eq x8, Eq x9, Eq x10, Eq x11, Eq x12, Eq x13, Eq x14, Eq x15) =>
             Eq (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                 x14, x15) where
      (==)
        (T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)
        (T16 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15)
        = ((x0 == y0)
             &&
               ((x1 == y1)
                  &&
                    ((x2 == y2)
                       &&
                         ((x3 == y3)
                            &&
                              ((x4 == y4)
                                 &&
                                   ((x5 == y5)
                                      &&
                                        ((x6 == y6)
                                           &&
                                             ((x7 == y7)
                                                &&
                                                  ((x8 == y8)
                                                     &&
                                                       ((x9 == y9)
                                                          &&
                                                            ((x10 == y10)
                                                               &&
                                                                 ((x11 == y11)
                                                                    &&
                                                                      ((x12 == y12)
                                                                         &&
                                                                           ((x13 == y13)
                                                                              &&
                                                                                ((x14 == y14)
                                                                                   &&
                                                                                     (x15
                                                                                        ==
                                                                                          y15))))))))))))))))
      (/=)
        (T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)
        (T16 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15)
        = ((x0 /= y0)
             ||
               ((x1 /= y1)
                  ||
                    ((x2 /= y2)
                       ||
                         ((x3 /= y3)
                            ||
                              ((x4 /= y4)
                                 ||
                                   ((x5 /= y5)
                                      ||
                                        ((x6 /= y6)
                                           ||
                                             ((x7 /= y7)
                                                ||
                                                  ((x8 /= y8)
                                                     ||
                                                       ((x9 /= y9)
                                                          ||
                                                            ((x10 /= y10)
                                                               ||
                                                                 ((x11 /= y11)
                                                                    ||
                                                                      ((x12 /= y12)
                                                                         ||
                                                                           ((x13 /= y13)
                                                                              ||
                                                                                ((x14 /= y14)
                                                                                   ||
                                                                                     (x15
                                                                                        /=
                                                                                          y15))))))))))))))))
[ 74 of 150] Compiling Data.Array.Accelerate.Classes.Enum
[ 75 of 150] Compiling Data.Array.Accelerate.Classes.Bounded
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Classes/Bounded.hs:(137,2)-(153,2): Splicing declarations
    runQ
      $ do let mkInstance_a6TmM :: Int -> Q [Dec]
               mkInstance_a6TmM n_a6TmN
                 = let
                     xs_a6TmO
                       = [mkName ('x' : show i_a6TmS) | i_a6TmS <- [0 .. n_a6TmN - 1]]
                     cst_a6TmP
                       = tupT
                           (map
                              (\ x_a6TmT
                                 -> [t| Bounded $(varT x_a6TmT) |]
                                    pending(rn) [<splice_a6TmU, varT x_a6TmT>])
                              xs_a6TmO)
                     res_a6TmQ = tupT (map varT xs_a6TmO)
                     app_a6TmR x_a6TmV
                       = appsE
                           (conE (mkName ('T' : show n_a6TmN)) : P.replicate n_a6TmN x_a6TmV)
                   in
                     [d| instance $cst_a6TmP => P.Bounded (Exp $res_a6TmQ) where
                           P.minBound = $(app_a6TmR [| P.minBound |])
                           P.maxBound = $(app_a6TmR [| P.maxBound |]) |]
                     pending(rn) [<splice_a6TmZ, app_a6TmR [| P.maxBound |]>,
                                  <splice_a6TmY, app_a6TmR [| P.minBound |]>,
                                  <splice_a6TmX, res_a6TmQ>, <splice_a6TmW, cst_a6TmP>]
           concat <$> mapM mkInstance_a6TmM [2 .. 16]
  ======>
    instance (Bounded x0, Bounded x1) => P.Bounded (Exp (x0, x1)) where
      P.minBound = (T2 P.minBound) P.minBound
      P.maxBound = (T2 P.maxBound) P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2) =>
             P.Bounded (Exp (x0, x1, x2)) where
      P.minBound = ((T3 P.minBound) P.minBound) P.minBound
      P.maxBound = ((T3 P.maxBound) P.maxBound) P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3) =>
             P.Bounded (Exp (x0, x1, x2, x3)) where
      P.minBound = (((T4 P.minBound) P.minBound) P.minBound) P.minBound
      P.maxBound = (((T4 P.maxBound) P.maxBound) P.maxBound) P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4)) where
      P.minBound
        = ((((T5 P.minBound) P.minBound) P.minBound) P.minBound) P.minBound
      P.maxBound
        = ((((T5 P.maxBound) P.maxBound) P.maxBound) P.maxBound) P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5)) where
      P.minBound
        = (((((T6 P.minBound) P.minBound) P.minBound) P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = (((((T6 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6)) where
      P.minBound
        = ((((((T7 P.minBound) P.minBound) P.minBound) P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = ((((((T7 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7)) where
      P.minBound
        = (((((((T8 P.minBound) P.minBound) P.minBound) P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = (((((((T8 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8)) where
      P.minBound
        = ((((((((T9 P.minBound) P.minBound) P.minBound) P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = ((((((((T9 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)) where
      P.minBound
        = (((((((((T10 P.minBound) P.minBound) P.minBound) P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = (((((((((T10 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9, Bounded x10) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)) where
      P.minBound
        = ((((((((((T11 P.minBound) P.minBound) P.minBound) P.minBound)
                  P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = ((((((((((T11 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                  P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9, Bounded x10, Bounded x11) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,
                             x11)) where
      P.minBound
        = (((((((((((T12 P.minBound) P.minBound) P.minBound) P.minBound)
                   P.minBound)
                  P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = (((((((((((T12 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                   P.maxBound)
                  P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9, Bounded x10, Bounded x11, Bounded x12) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12)) where
      P.minBound
        = ((((((((((((T13 P.minBound) P.minBound) P.minBound) P.minBound)
                    P.minBound)
                   P.minBound)
                  P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = ((((((((((((T13 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                    P.maxBound)
                   P.maxBound)
                  P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9, Bounded x10, Bounded x11, Bounded x12, Bounded x13) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12, x13)) where
      P.minBound
        = (((((((((((((T14 P.minBound) P.minBound) P.minBound) P.minBound)
                     P.minBound)
                    P.minBound)
                   P.minBound)
                  P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = (((((((((((((T14 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                     P.maxBound)
                    P.maxBound)
                   P.maxBound)
                  P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9, Bounded x10, Bounded x11, Bounded x12, Bounded x13,
              Bounded x14) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12, x13, x14)) where
      P.minBound
        = ((((((((((((((T15 P.minBound) P.minBound) P.minBound) P.minBound)
                      P.minBound)
                     P.minBound)
                    P.minBound)
                   P.minBound)
                  P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = ((((((((((((((T15 P.maxBound) P.maxBound) P.maxBound) P.maxBound)
                      P.maxBound)
                     P.maxBound)
                    P.maxBound)
                   P.maxBound)
                  P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
    instance (Bounded x0, Bounded x1, Bounded x2, Bounded x3,
              Bounded x4, Bounded x5, Bounded x6, Bounded x7, Bounded x8,
              Bounded x9, Bounded x10, Bounded x11, Bounded x12, Bounded x13,
              Bounded x14, Bounded x15) =>
             P.Bounded (Exp (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11,
                             x12, x13, x14, x15)) where
      P.minBound
        = (((((((((((((((T16 P.minBound) P.minBound) P.minBound)
                        P.minBound)
                       P.minBound)
                      P.minBound)
                     P.minBound)
                    P.minBound)
                   P.minBound)
                  P.minBound)
                 P.minBound)
                P.minBound)
               P.minBound)
              P.minBound)
             P.minBound)
            P.minBound
      P.maxBound
        = (((((((((((((((T16 P.maxBound) P.maxBound) P.maxBound)
                        P.maxBound)
                       P.maxBound)
                      P.maxBound)
                     P.maxBound)
                    P.maxBound)
                   P.maxBound)
                  P.maxBound)
                 P.maxBound)
                P.maxBound)
               P.maxBound)
              P.maxBound)
             P.maxBound)
            P.maxBound
[ 76 of 150] Compiling Data.Array.Accelerate.Pretty.Print
[ 77 of 150] Compiling Data.Array.Accelerate.Pretty.Graphviz.Type
[ 78 of 150] Compiling Data.Array.Accelerate.Pretty.Graphviz.Monad
[ 79 of 150] Compiling Data.Array.Accelerate.Analysis.Hash
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:93:36-46: Splicing expression
    hashQ "L" ======> 590600504936689352
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:94:36-46: Splicing expression
    hashQ "R" ======> 590593907866920086
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:106:49-62: Splicing expression
    hashQ "Alet" ======> (-2113032953668812953)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:107:49-62: Splicing expression
    hashQ "Avar" ======> (-8358544873283613421)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:108:49-63: Splicing expression
    hashQ "Apair" ======> 7727053847274493855
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:109:49-62: Splicing expression
    hashQ "Anil" ======> (-3372728032615838499)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:110:49-64: Splicing expression
    hashQ "Atrace" ======> (-357815563645318399)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:111:49-63: Splicing expression
    hashQ "Apply" ======> (-2940221049842030252)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:112:49-66: Splicing expression
    hashQ "Aforeign" ======> (-1443635106826757678)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:113:49-61: Splicing expression
    hashQ "Use" ======> 7737171506773416629
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:114:49-64: Splicing expression
    hashQ "Awhile" ======> (-6207651948804821799)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:115:49-62: Splicing expression
    hashQ "Unit" ======> 1025062675037250361
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:116:49-66: Splicing expression
    hashQ "Generate" ======> (-1173248957499336480)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:119:49-63: Splicing expression
    hashQ "Acond" ======> (-8941401155912724045)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:120:49-65: Splicing expression
    hashQ "Reshape" ======> 9013205076381034516
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:121:49-69: Splicing expression
    hashQ "Backpermute" ======> (-1109419244014562643)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:122:49-67: Splicing expression
    hashQ "Transform" ======> (-8597754088970550104)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:123:49-67: Splicing expression
    hashQ "Replicate" ======> (-6635892573012058733)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:124:49-63: Splicing expression
    hashQ "Slice" ======> 4702735709868555578
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:125:49-61: Splicing expression
    hashQ "Map" ======> (-5515452148833408964)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:126:49-65: Splicing expression
    hashQ "ZipWith" ======> (-5316862424811042379)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:127:49-62: Splicing expression
    hashQ "Fold" ======> (-6300003098334377288)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:128:49-65: Splicing expression
    hashQ "FoldSeg" ======> (-3159093571924830214)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:129:49-62: Splicing expression
    hashQ "Scan" ======> (-2334260834670221246)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:130:49-63: Splicing expression
    hashQ "Scan'" ======> 6078341253307030742
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:131:49-65: Splicing expression
    hashQ "Permute" ======> 684500220183790248
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:132:49-65: Splicing expression
    hashQ "Stencil" ======> 6867096848076056722
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:133:49-66: Splicing expression
    hashQ "Stencil2" ======> (-5281251270514306099)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:196:28-42: Splicing expression
    hashQ "Abody" ======> 4842662619553860763
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:197:28-41: Splicing expression
    hashQ "Alam" ======> (-2116666839599293416)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:204:44-57: Splicing expression
    hashQ "Wrap" ======> 5629170803528457763
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:205:44-58: Splicing expression
    hashQ "Clamp" ======> (-3699521159510854781)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:206:44-59: Splicing expression
    hashQ "Mirror" ======> 7870969152725598170
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:207:44-61: Splicing expression
    hashQ "Constant" ======> 4908983361209657923
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:208:44-61: Splicing expression
    hashQ "Function" ======> (-2768987535510942985)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:211:47-59: Splicing expression
    hashQ "nil" ======> (-4729841192654219403)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash.hs:213:47-60: Splicing expression
    hashQ "pair" ======> (-4126573480953681781)
[ 80 of 150] Compiling Data.Array.Accelerate.Analysis.Match
[ 81 of 150] Compiling Data.Array.Accelerate.Trafo.Exp.Substitution
[ 82 of 150] Compiling Data.Array.Accelerate.Trafo.Substitution
[ 83 of 150] Compiling Data.Array.Accelerate.Trafo.WeakenedEnvironment
[ 84 of 150] Compiling Data.Array.Accelerate.Trafo.Var
[ 85 of 150] Compiling Data.Array.Accelerate.Trafo.Sharing
[ 86 of 150] Compiling Data.Array.Accelerate.Test.NoFib.Base
[ 87 of 150] Compiling Data.Array.Accelerate.Test.NoFib
[ 88 of 150] Compiling Data.Array.Accelerate.Trafo.LetSplit
[ 89 of 150] Compiling Data.Array.Accelerate.Trafo.Environment
[ 90 of 150] Compiling Data.Array.Accelerate.Trafo.LiveVars
[ 91 of 150] Compiling Data.Array.Accelerate.Trafo.Exp.Shrink
[ 92 of 150] Compiling Data.Array.Accelerate.Trafo.Shrink
[ 93 of 150] Compiling Data.Array.Accelerate.AST.Operation
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Operation.hs:368:45-71: Splicing expression
    hashQ ("Index" :: String) ======> 1942147710713815296
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Operation.hs:369:45-75: Splicing expression
    hashQ ("Parameter" :: String) ======> (-264053468274802217)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Operation.hs:372:45-72: Splicing expression
    hashQ ("Scalar" :: String) ======> 4242663495788401525
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Operation.hs:373:45-72: Splicing expression
    hashQ ("Buffer" :: String) ======> 1887651619099667283
[ 94 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.Labels
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Partitioning/ILP/Labels.hs:64:1-18: Splicing declarations
    makeLenses ''Label
  ======>
    labelId :: Lens.Micro.Type.Lens' Label Int
    labelId f_abdhO (Label x1_abdhP x2_abdhQ)
      = (fmap (\ y1_abdhR -> (Label y1_abdhR) x2_abdhQ))
          (f_abdhO x1_abdhP)
    {-# INLINE labelId #-}
    parent :: Lens.Micro.Type.Lens' Label (Maybe Label)
    parent f_abdhS (Label x1_abdhT x2_abdhU)
      = (fmap (\ y1_abdhV -> (Label x1_abdhT) y1_abdhV))
          (f_abdhS x2_abdhU)
    {-# INLINE parent #-}
[ 95 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.Graph
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Partitioning/ILP/Graph.hs:300:1-27: Splicing declarations
    makeLenses ''FullGraphState
  ======>
    currE :: forall env_abnCW. Lens' (FullGraphState env_abnCW) ELabel
    currE f_abozr (FGState x1_abozs x2_abozt x3_abozu)
      = (fmap (\ y1_abozv -> ((FGState x1_abozs) x2_abozt) y1_abozv))
          (f_abozr x3_abozu)
    {-# INLINE currE #-}
    currL :: forall env_abnCW. Lens' (FullGraphState env_abnCW) Label
    currL f_abozw (FGState x1_abozx x2_abozy x3_abozz)
      = (fmap (\ y1_abozA -> ((FGState x1_abozx) y1_abozA) x3_abozz))
          (f_abozw x2_abozy)
    {-# INLINE currL #-}
    lenv ::
      forall env_abnCW env_abozq.
      Lens (FullGraphState env_abnCW) (FullGraphState env_abozq) (LabelEnv env_abnCW) (LabelEnv env_abozq)
    lenv f_abozB (FGState x1_abozC x2_abozD x3_abozE)
      = (fmap (\ y1_abozF -> ((FGState y1_abozF) x2_abozD) x3_abozE))
          (f_abozB x1_abozC)
    {-# INLINE lenv #-}
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Partitioning/ILP/Graph.hs:301:1-28: Splicing declarations
    makeLenses ''FullGraphResult
  ======>
    construc ::
      forall op_abnCV.
      Lens' (FullGraphResult op_abnCV) (Map Label (Construction op_abnCV))
    construc f_aboBj (FGRes x1_aboBk x2_aboBl x3_aboBm)
      = (fmap (\ y1_aboBn -> ((FGRes x1_aboBk) x2_aboBl) y1_aboBn))
          (f_aboBj x3_aboBm)
    {-# INLINE construc #-}
    info ::
      forall op_abnCV.
      Lens' (FullGraphResult op_abnCV) (Information op_abnCV)
    info f_aboBo (FGRes x1_aboBp x2_aboBq x3_aboBr)
      = (fmap (\ y1_aboBs -> ((FGRes y1_aboBs) x2_aboBq) x3_aboBr))
          (f_aboBo x1_aboBp)
    {-# INLINE info #-}
    l_res ::
      forall op_abnCV. Lens' (FullGraphResult op_abnCV) (Maybe Label)
    l_res f_aboBt (FGRes x1_aboBu x2_aboBv x3_aboBw)
      = (fmap (\ y1_aboBx -> ((FGRes x1_aboBu) y1_aboBx) x3_aboBw))
          (f_aboBt x2_aboBv)
    {-# INLINE l_res #-}
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Partitioning/ILP/Graph.hs:302:1-18: Splicing declarations
    makeLenses ''Graph
  ======>
    fusibleEdges :: Lens' Graph (Set Edge)
    fusibleEdges f_aboD6 (Graph x1_aboD7 x2_aboD8 x3_aboD9)
      = (fmap (\ y1_aboDa -> ((Graph x1_aboD7) y1_aboDa) x3_aboD9))
          (f_aboD6 x2_aboD8)
    {-# INLINE fusibleEdges #-}
    graphNodes :: Lens' Graph (Set Label)
    graphNodes f_aboDb (Graph x1_aboDc x2_aboDd x3_aboDe)
      = (fmap (\ y1_aboDf -> ((Graph y1_aboDf) x2_aboDd) x3_aboDe))
          (f_aboDb x1_aboDc)
    {-# INLINE graphNodes #-}
    infusibleEdges :: Lens' Graph (Set Edge)
    infusibleEdges f_aboDg (Graph x1_aboDh x2_aboDi x3_aboDj)
      = (fmap (\ y1_aboDk -> ((Graph x1_aboDh) x2_aboDi) y1_aboDk))
          (f_aboDg x3_aboDj)
    {-# INLINE infusibleEdges #-}
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Partitioning/ILP/Graph.hs:303:1-24: Splicing declarations
    makeLenses ''Information
  ======>
    bounds ::
      forall op_abnDd. Lens' (Information op_abnDd) (Bounds op_abnDd)
    bounds f_aboEw (Info x1_aboEx x2_aboEy x3_aboEz)
      = (fmap (\ y1_aboEA -> ((Info x1_aboEx) x2_aboEy) y1_aboEA))
          (f_aboEw x3_aboEz)
    {-# INLINE bounds #-}
    constr ::
      forall op_abnDd. Lens' (Information op_abnDd) (Constraint op_abnDd)
    constr f_aboEB (Info x1_aboEC x2_aboED x3_aboEE)
      = (fmap (\ y1_aboEF -> ((Info x1_aboEC) y1_aboEF) x3_aboEE))
          (f_aboEB x2_aboED)
    {-# INLINE constr #-}
    graphI :: forall op_abnDd. Lens' (Information op_abnDd) Graph
    graphI f_aboEG (Info x1_aboEH x2_aboEI x3_aboEJ)
      = (fmap (\ y1_aboEK -> ((Info y1_aboEK) x2_aboEI) x3_aboEJ))
          (f_aboEG x1_aboEH)
    {-# INLINE graphI #-}
[ 96 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.Solve
[ 97 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.MIP
[ 98 of 150] Compiling Data.Array.Accelerate.Trafo.Operation.Substitution
[ 99 of 150] Compiling Data.Array.Accelerate.Trafo.Operation.LiveVars
[100 of 150] Compiling Data.Array.Accelerate.Pretty.Operation

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Operation.hs:40:1: warning: [-Wdeprecations]
    Module ‘Data.Text.Prettyprint.Doc’ is deprecated:
      Use "Prettyprinter" instead.
   |
40 | import Data.Text.Prettyprint.Doc
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[101 of 150] Compiling Data.Array.Accelerate.Pretty

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:34:3: warning: [-Wdodgy-exports]
    The export item ‘PrettyGraph(..)’ suggests that
    ‘PrettyGraph’ has (in-scope) constructors or class methods,
    but it has none
   |
34 |   PrettyGraph(..), Detail(..),
   |   ^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:34:20: warning: [-Wdodgy-exports]
    The export item ‘Detail(..)’ suggests that
    ‘Detail’ has (in-scope) constructors or class methods,
    but it has none
   |
34 |   PrettyGraph(..), Detail(..),
   |                    ^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:41:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Error’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Error’
    To import instances alone, use: import Data.Array.Accelerate.Error()
   |
41 | import Data.Array.Accelerate.Error
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:44:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Pretty.Exp’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Pretty.Exp’
    To import instances alone, use: import Data.Array.Accelerate.Pretty.Exp()
   |
44 | import Data.Array.Accelerate.Pretty.Exp                             hiding ( Keyword(..) )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:45:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Smart’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Smart’
    To import instances alone, use: import Data.Array.Accelerate.Smart()
   |
45 | import Data.Array.Accelerate.Smart                                  ( Acc, Exp )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:46:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Sugar.Array’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Sugar.Array’
    To import instances alone, use: import Data.Array.Accelerate.Sugar.Array()
   |
46 | import Data.Array.Accelerate.Sugar.Array
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:47:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Sugar.Elt’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Sugar.Elt’
    To import instances alone, use: import Data.Array.Accelerate.Sugar.Elt()
   |
47 | import Data.Array.Accelerate.Sugar.Elt
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:89:10: warning: [-Wmissing-methods]
    • No explicit implementation for
        either ‘showsPrec’ or ‘show’
    • In the instance declaration for ‘Show (OperationAcc op aenv a)’
   |
89 | instance PrettyEnv aenv => Show (OperationAcc op aenv a) where
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:93:10: warning: [-Wmissing-methods]
    • No explicit implementation for
        either ‘showsPrec’ or ‘show’
    • In the instance declaration for ‘Show (OperationAfun op aenv f)’
   |
93 | instance PrettyEnv aenv => Show (OperationAfun op aenv f) where
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:173:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘shouldPrintHash’
    |
173 | shouldPrintHash = unsafePerformIO $ getFlag verbose
    | ^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty.hs:193:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘withSimplStats’
    |
193 | withSimplStats x = x
    | ^^^^^^^^^^^^^^
[102 of 150] Compiling Data.Array.Accelerate.Trafo.Exp.Algebra
[103 of 150] Compiling Data.Array.Accelerate.Trafo.Exp.Simplify
[104 of 150] Compiling Data.Array.Accelerate.Trafo.Operation.Simplify

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Operation/Simplify.hs:108:57: warning: [-Wname-shadowing]
    This binding for ‘t’ shadows the existing binding
      bound at src/Data/Array/Accelerate/Trafo/Operation/Simplify.hs:108:46
    |
108 | detectBackpermuteCopies :: forall env sh sh' t. (forall t t'. GroundVars env t -> GroundVars env t' -> Maybe (t :~: t')) -> Args env (Fun' (sh' -> sh) -> In sh t -> Out sh' t -> ()) -> [CopyOperation env]
    |                                                         ^
[105 of 150] Compiling Data.Array.Accelerate.Trafo.Desugar

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1177:30: warning: [-Wname-shadowing]
    This binding for ‘shr’ shadows the existing binding
      bound at src/Data/Array/Accelerate/Trafo/Desugar.hs:1171:13
     |
1177 |     mkIntersect' (ShapeRsnoc shr) (TupRpair s1 x1) (TupRpair s2 x2) = mkIntersect' shr s1 s2 `Pair` mkBinary (PrimMin singleType) (paramsIn' x1) (paramsIn' x2)
     |                              ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1184:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘mkDefaultFoldStep1’:
        Patterns not matched:
            (ArgFun (Body _)) Nothing
            (ArgArray In (ArrayR (ShapeRsnoc _) TupRunit) (TupRsingle _)
             TupRunit)
            (ArgArray _ _ _ _)
            (ArgFun (Body _)) Nothing
            (ArgArray In (ArrayR (ShapeRsnoc _) TupRunit) (TupRsingle _)
             (TupRsingle _))
            (ArgArray _ _ _ _)
            (ArgFun (Body _)) Nothing
            (ArgArray In (ArrayR (ShapeRsnoc _) (TupRsingle _)) (TupRsingle _)
             TupRunit)
            (ArgArray _ _ _ _)
            (ArgFun (Body _)) Nothing
            (ArgArray In (ArrayR (ShapeRsnoc _) (TupRsingle _)) (TupRsingle _)
             (TupRsingle _))
            (ArgArray _ _ _ _)
            ...
     |
1184 | mkDefaultFoldStep1 (ArgFun f) def argIn@(ArgArray _ (ArrayR shr tp) (sh `TupRpair` n) _) argOut
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1215:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘mkDefaultFoldStep1Function’:
        Patterns not matched:
            (Body _) Nothing (Var _ _)
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) TupRunit) (TupRsingle _)
             TupRunit)
            (Body _) Nothing (Var _ _)
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) TupRunit) (TupRsingle _)
             (TupRsingle _))
            (Body _) Nothing (Var _ _)
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) (TupRsingle _))
             (TupRsingle _) TupRunit)
            (Body _) Nothing (Var _ _)
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) (TupRsingle _))
             (TupRsingle _) (TupRsingle _))
            ...
     |
1215 | mkDefaultFoldStep1Function f def n1' argIn@(ArgArray _ (ArrayR (ShapeRsnoc shr) tp) (sh' `TupRpair` n') buffers)
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1215:38: warning: [-Wunused-matches]
    Defined but not used: ‘argIn’
     |
1215 | mkDefaultFoldStep1Function f def n1' argIn@(ArgArray _ (ArrayR (ShapeRsnoc shr) tp) (sh' `TupRpair` n') buffers)
     |                                      ^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1216:22: warning: [-Wunused-matches]
    Defined but not used: ‘kX’
     |
1216 |   | DeclareVars lhsX kX valueX <- declareVars $ shapeType shr
     |                      ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1250:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘mkDefaultFoldStep2’:
        Patterns not matched:
            (ArgFun (Body _))
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) TupRunit) (TupRsingle _)
             TupRunit)
            (ArgArray _ _ _ _)
            (ArgFun (Body _))
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) TupRunit) (TupRsingle _)
             (TupRsingle _))
            (ArgArray _ _ _ _)
            (ArgFun (Body _))
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) (TupRsingle _))
             (TupRsingle _) TupRunit)
            (ArgArray _ _ _ _)
            (ArgFun (Body _))
            (ArgArray In (ArrayR (ShapeRsnoc ShapeRz) (TupRsingle _))
             (TupRsingle _) (TupRsingle _))
            (ArgArray _ _ _ _)
            ...
     |
1250 | mkDefaultFoldStep2 (ArgFun f) argIn@(ArgArray _ (ArrayR shr@(ShapeRsnoc shr') tp) (TupRpair sh n) input) argOut
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1250:73: warning: [-Wunused-matches]
    Defined but not used: ‘shr'’
     |
1250 | mkDefaultFoldStep2 (ArgFun f) argIn@(ArgArray _ (ArrayR shr@(ShapeRsnoc shr') tp) (TupRpair sh n) input) argOut
     |                                                                         ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1250:99: warning: [-Wunused-matches]
    Defined but not used: ‘input’
     |
1250 | mkDefaultFoldStep2 (ArgFun f) argIn@(ArgArray _ (ArrayR shr@(ShapeRsnoc shr') tp) (TupRpair sh n) input) argOut
     |                                                                                                   ^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1258:7: warning: [-Wunused-local-binds]
    Defined but not used: ‘shIn’
     |
1258 |       shIn    = shBase `TupRpair` weakenVars (kTmp .> kSh) n
     |       ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1275:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘mkDefaultFoldAllocOrOutput’:
        Patterns not matched:
            (ArgArray Out (ArrayR ShapeRz TupRunit) TupRunit TupRunit)
            (TupRsingle _)
            (ArgArray Out (ArrayR ShapeRz TupRunit) TupRunit (TupRsingle _))
            (TupRsingle _)
            (ArgArray Out (ArrayR ShapeRz TupRunit) (TupRsingle _) TupRunit)
            (TupRsingle _)
            (ArgArray Out (ArrayR ShapeRz TupRunit) (TupRsingle _)
             (TupRsingle _))
            (TupRsingle _)
            ...
     |
1275 | mkDefaultFoldAllocOrOutput (ArgArray _ (ArrayR shr e) _ output) sh@(TupRpair _ y)
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1285:22: warning: [-Wunused-matches]
    Defined but not used: ‘kX’
     |
1285 |   | DeclareVars lhsX kX valueX <- declareVars $ shapeType shr
     |                      ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1304:81: warning: [-Wunused-matches]
    Defined but not used: ‘tp’
     |
1304 | mkDefaultScanPrepend dir (ArgExp def) (ArgArray _ repr@(ArrayR (ShapeRsnoc shr) tp) sh input)
     |                                                                                 ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Desugar.hs:1325:21: warning: [-Wunused-matches]
    Defined but not used: ‘k’
     |
1325 |   | DeclareVars lhs k value <- declareVars $ shapeType shr
     |                     ^
[106 of 150] Compiling Data.Array.Accelerate.AST.Partitioned

/home/david/Documents/accelerate/accelerate/Data.Array.Accelerate.AST.Partitioned:1:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘$bSuccIdxF’:
        Patterns not matched:
            IdxF (Data.Array.Accelerate.AST.Idx.UnsafeIdxConstructor _)

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Partitioned.hs:48:60: warning: [-Wunused-imports]
    The import of ‘shapeType’
    from module ‘Data.Array.Accelerate.Representation.Shape’ is redundant
   |
48 | import Data.Array.Accelerate.Representation.Shape (ShapeR, shapeType)
   |                                                            ^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Partitioned.hs:60:1: warning: [-Wunused-imports]
    The import of ‘Data.Functor.Identity’ is redundant
      except perhaps to import instances from ‘Data.Functor.Identity’
    To import instances alone, use: import Data.Functor.Identity()
   |
60 | import Data.Functor.Identity
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Partitioned.hs:310:9: warning: [-Wunused-matches]
    Defined but not used: ‘op’
    |
310 | unfused op b args = undefined -- iolhs args $ \io lhs -> Cluster b $ Cluster' io (Bind lhs op None)
    |         ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Partitioned.hs:310:12: warning: [-Wunused-matches]
    Defined but not used: ‘b’
    |
310 | unfused op b args = undefined -- iolhs args $ \io lhs -> Cluster b $ Cluster' io (Bind lhs op None)
    |            ^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Partitioned.hs:310:14: warning: [-Wunused-matches]
    Defined but not used: ‘args’
    |
310 | unfused op b args = undefined -- iolhs args $ \io lhs -> Cluster b $ Cluster' io (Bind lhs op None)
    |              ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/AST/Partitioned.hs:516:7: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘slvIO’:
        Patterns not matched:
            (SubArgsDead SubArgsNil) (ArgVar TupRunit :>: ArgsNil)
            (ArgArray Out
             (ArrayR Data.Array.Accelerate.Representation.Shape.ShapeRz
              TupRunit)
             TupRunit TupRunit :>: ArgsNil)
            (Trivial _)
            (SubArgsDead SubArgsNil) (ArgVar TupRunit :>: ArgsNil)
            (ArgArray Out
             (ArrayR Data.Array.Accelerate.Representation.Shape.ShapeRz
              TupRunit)
             TupRunit (TupRsingle _) :>: ArgsNil)
            (Trivial _)
            (SubArgsDead SubArgsNil) (ArgVar TupRunit :>: ArgsNil)
            (ArgArray Out
             (ArrayR Data.Array.Accelerate.Representation.Shape.ShapeRz
              TupRunit)
             (TupRsingle _) TupRunit :>: ArgsNil)
            (Trivial _)
            (SubArgsDead SubArgsNil) (ArgVar TupRunit :>: ArgsNil)
            (ArgArray Out
             (ArrayR Data.Array.Accelerate.Representation.Shape.ShapeRz
              TupRunit)
             (TupRsingle _) (TupRsingle _) :>: ArgsNil)
            (Trivial _)
            ...
    |
516 |       slvIO SubArgsNil ArgsNil ArgsNil Empty = Empty
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[107 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.Stream
[108 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP.Clustering
[109 of 150] Compiling Data.Array.Accelerate.Trafo.Partitioning.ILP
[110 of 150] Compiling Data.Array.Accelerate.Trafo.NewNewFusion
[111 of 150] Compiling Data.Array.Accelerate.Pretty.Partitioned

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:33:1: warning: [-Wdeprecations]
    Module ‘Data.Text.Prettyprint.Doc’ is deprecated:
      Use "Prettyprinter" instead.
   |
33 | import Data.Text.Prettyprint.Doc
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:62:5: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘input’:
        Patterns not matched: (Trivial _) (_ :>: _)
   |
62 |     input Empty ArgsNil
   |     ^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:76:5: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘output’:
        Patterns not matched: (Trivial _) (_ :>: _)
   |
76 |     output Empty ArgsNil
   |     ^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:163:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘insertAt’
    |
163 | insertAt Here      a env                 = Pretty.Push env a
    | ^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:167:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘removeAt’
    |
167 | removeAt Here (Pretty.Push env _) = env
    | ^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:178:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘pRemoveAt’
    |
178 | pRemoveAt Here      = pEnvTail
    | ^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:185:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘pWriteAt’
    |
185 | pWriteAt t Nothing  = pSkipAt t
    | ^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:195:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘pTakeAt’
    |
195 | pTakeAt Here      (PPush _ a) = Just a
    | ^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Partitioned.hs:206:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘pEnvTail’
    |
206 | pEnvTail PEnd          = PEnd
    | ^^^^^^^^
[112 of 150] Compiling Data.Array.Accelerate.Analysis.Hash.Operation
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:45:39-51: Splicing expression
    hashQ ":>:" ======> (-9140835548401502296)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:46:39-55: Splicing expression
    hashQ "ArgsNil" ======> (-5848569531867576866)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:50:14-28: Splicing expression
    hashQ "Array" ======> 2985788127461568601
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:51:35-47: Splicing expression
    hashQ "Var" ======> 7189377221562132807
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:52:35-47: Splicing expression
    hashQ "Exp" ======> (-576619639053074475)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:53:35-47: Splicing expression
    hashQ "Fun" ======> (-1343409152769951697)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:62:45-60: Splicing expression
    hashQ "Scalar" ======> 4242663495788401525
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:63:45-60: Splicing expression
    hashQ "Buffer" ======> 1887651619099667283
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:66:31-42: Splicing expression
    hashQ "In" ======> (-2858477239664912666)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:67:31-43: Splicing expression
    hashQ "Out" ======> (-6836486782482959374)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:68:31-43: Splicing expression
    hashQ "Mut" ======> (-5534579253113983020)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:74:50-64: Splicing expression
    hashQ "Empty" ======> (-1352436459894470279)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:75:50-67: Splicing expression
    hashQ "Vertical" ======> 5271284436882507785
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:76:50-64: Splicing expression
    hashQ "Input" ======> (-4228003679503971064)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:77:50-65: Splicing expression
    hashQ "Output" ======> 2690117080940448180
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:78:50-65: Splicing expression
    hashQ "MutPut" ======> (-5159012804829665654)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:79:50-65: Splicing expression
    hashQ "ExpPut" ======> 5235138303372971941
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:80:50-65: Splicing expression
    hashQ "VarPut" ======> (-2722812054241580917)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:81:50-65: Splicing expression
    hashQ "FunPut" ======> (-5340807547722574749)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:87:44-57: Splicing expression
    hashQ "skip" ======> 5717721252986667328
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:88:44-57: Splicing expression
    hashQ "keep" ======> (-3021111117371318694)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:89:44-57: Splicing expression
    hashQ "pair" ======> (-4126573480953681781)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:92:34-47: Splicing expression
    hashQ "None" ======> 3715708618204537957
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:93:47-60: Splicing expression
    hashQ "Bind" ======> (-3609728892938150980)

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:46:15: warning: [-Wunused-matches]
    Defined but not used: ‘f’
   |
46 | encodePreArgs f ArgsNil    = intHost $(hashQ "ArgsNil")
   |               ^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:52:19: warning: [-Wname-shadowing]
    This binding for ‘exp’ shadows the existing binding
      imported from ‘Prelude’ at src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:20:8-52
      (and originally defined in ‘GHC.Float’)
   |
52 | encodeArg (ArgExp exp) = intHost $(hashQ "Exp") <> encodeOpenExp exp
   |                   ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Analysis/Hash/Operation.hs:74:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘encodeClusterIO’:
        Patterns not matched: Trivial _
   |
74 | encodeClusterIO Empty                 = intHost $(hashQ "Empty")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[113 of 150] Compiling Data.Array.Accelerate.AST.Kernel
[114 of 150] Compiling Data.Array.Accelerate.Pretty.Schedule
[115 of 150] Compiling Data.Array.Accelerate.AST.Schedule.Uniform
[116 of 150] Compiling Data.Array.Accelerate.Trafo.Schedule.Uniform.Substitution
[117 of 150] Compiling Data.Array.Accelerate.Trafo.Schedule.Uniform.Simplify

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform/Simplify.hs:287:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘resolve'’
    |
287 | resolve' env@(InfoEnv env' awaitedSignals) resolver
    | ^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform/Simplify.hs:528:13: warning: [-Woverlapping-patterns]
    Pattern match is redundant
    In an equation for ‘branches''’:
        branches'' | False,
                     commonCount >= 2,
                     Just (Exists signal) <- commonSignal,
                     False,
                     (common, uncommon) <- partition
                                             (\ (s, _) -> signal `IdxSet.member` s) branches',
                     common' <- map (first (IdxSet.remove signal)) common = ...
    |
528 |           | False -- @IVO???
    |             ^^^^^
[118 of 150] Compiling Data.Array.Accelerate.Trafo.Schedule.Uniform.LiveVars
[119 of 150] Compiling Data.Array.Accelerate.Pretty.Schedule.Uniform

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Pretty/Schedule/Uniform.hs:38:1: warning: [-Wdeprecations]
    Module ‘Data.Text.Prettyprint.Doc’ is deprecated:
      Use "Prettyprinter" instead.
   |
38 | import Data.Text.Prettyprint.Doc
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[120 of 150] Compiling Data.Array.Accelerate.AST.Schedule
[121 of 150] Compiling Data.Array.Accelerate.Trafo.Schedule.Uniform

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:127:11: warning: [-Wunused-do-bind]
    A do-notation statement discarded a result of type ‘ThreadId’
    Suppress this warning by saying
      ‘_ <- forkIO
              $ do value `seq` return ()
                   writeIORef ref value
                   putMVar mvar ()’
    |
127 |           forkIO $ do
    |           ^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:827:13: warning: [-Woverlapping-patterns]
    Pattern match is redundant
    In an equation for ‘combineMod'’:
        combineMod' (Exists (Var (AccessGroundRbuffer m1 tp) ix))
                    var@(Exists (Var (AccessGroundRbuffer m2 _) _)) | otherwise = ...
    |
827 |           | otherwise = var
    |             ^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:1973:5: warning: [-Wname-shadowing]
    This binding for ‘left’ shadows the existing binding
      imported from ‘Formatting’ at src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:61:1-17
      (and originally defined in ‘Formatting.Formatters’)
     |
1973 |     left = isJust mleft
     |     ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:1974:5: warning: [-Wname-shadowing]
    This binding for ‘right’ shadows the existing binding
      imported from ‘Formatting’ at src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:61:1-17
      (and originally defined in ‘Formatting.Formatters’)
     |
1974 |     right = isJust mright
     |     ^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:1975:25: warning: [-Wname-shadowing]
    This binding for ‘left’ shadows the existing binding
      imported from ‘Formatting’ at src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:61:1-17
      (and originally defined in ‘Formatting.Formatters’)
     |
1975 | loopFuture _ k01 future left right
     |                         ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:1975:30: warning: [-Wname-shadowing]
    This binding for ‘right’ shadows the existing binding
      imported from ‘Formatting’ at src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:61:1-17
      (and originally defined in ‘Formatting.Formatters’)
     |
1975 | loopFuture _ k01 future left right
     |                              ^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Trafo/Schedule/Uniform.hs:2181:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘debugFutureEnv’
     |
2181 | debugFutureEnv (PPush env e) = debugFutureEnv env ++ " " ++ e'
     | ^^^^^^^^^^^^^^
[122 of 150] Compiling Data.Array.Accelerate.Eval

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:109:25: warning: [-Wunused-matches]
    Defined but not used: ‘t2’
    |
109 |     lhsEnvArgs (Make t1 t2 lhs) env = case first getCompose $ takeBuffers t1 $ justEnv env of
    |                         ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:118:22: warning: [-Wunused-matches]
    Defined but not used: ‘t1’
    |
118 |     lhsArgsEnv (Reqr t1 t2 lhs)       env              (f :>: args) = case getCompose $ tupRindex (justEnv env) t2 of
    |                      ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:118:57: warning: [-Wunused-matches]
    Defined but not used: ‘f’
    |
118 |     lhsArgsEnv (Reqr t1 t2 lhs)       env              (f :>: args) = case getCompose $ tupRindex (justEnv env) t2 of
    |                                                         ^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:119:17: warning: [-Wunused-matches]
    Defined but not used: ‘arg’
    |
119 |       Just (BEE arg _) ->
    |                 ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:136:35: warning: [-Wunused-matches]
    Defined but not used: ‘arg’
    |
136 |     getOutputEnv (Trivial    io) (arg :>: args) (info :>: infos) = getOutputEnv io args infos
    |                                   ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:136:50: warning: [-Wunused-matches]
    Defined but not used: ‘info’
    |
136 |     getOutputEnv (Trivial    io) (arg :>: args) (info :>: infos) = getOutputEnv io args infos
    |                                                  ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:182:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘evalIO1’:
        Patterns not matched:
            _ (Trivial P.Empty)
            (ArgArray In (ArrayR _ _) TupRunit (TupRsingle _) :>: ArgsNil)
            (_ :>: _) Empty
            _ (Trivial P.Empty)
            (ArgArray In (ArrayR _ _) TupRunit (TupRsingle _) :>: ArgsNil)
            (_ :>: _) (Push _ _)
            _ (Trivial P.Empty)
            (ArgArray In (ArrayR _ _) (TupRsingle _)
             (TupRsingle _) :>: ArgsNil)
            (_ :>: _) Empty
            _ (Trivial P.Empty)
            (ArgArray In (ArrayR _ _) (TupRsingle _)
             (TupRsingle _) :>: ArgsNil)
            (_ :>: _) (Push _ _)
            ...
    |
182 | evalIO1 _ P.Empty                                     ArgsNil    ArgsNil    _ = pure Empty
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:193:41: warning: [-Wunused-matches]
    Defined but not used: ‘sh’
    |
193 | evalIO1 n (Trivial    io) (ArgArray _ _ sh TupRunit :>: args)(info :>: infos) env = evalIO1 n io args infos env
    |                                         ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:193:63: warning: [-Wunused-matches]
    Defined but not used: ‘info’
    |
193 | evalIO1 n (Trivial    io) (ArgArray _ _ sh TupRunit :>: args)(info :>: infos) env = evalIO1 n io args infos env
    |                                                               ^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:225:16: warning: [-Wunused-matches]
    Defined but not used: ‘t1’
    |
225 | evalLHS2 (Reqr t1 t2 lhs) i env o = evalLHS2 lhs i env o -- TODO ignoring here?
    |                ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:225:19: warning: [-Wunused-matches]
    Defined but not used: ‘t2’
    |
225 | evalLHS2 (Reqr t1 t2 lhs) i env o = evalLHS2 lhs i env o -- TODO ignoring here?
    |                   ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:249:10: warning: [-Wunused-matches]
    Defined but not used: ‘xy’
    |
249 |   unpair xy = undefined
    |          ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:251:10: warning: [-Wmissing-methods]
    • No explicit implementation for
        ‘unit’, ‘pair’, and ‘unpair’
    • In the instance declaration for
        ‘TupRmonoid (BackendEnvElem op env) (Sh sh)’
    |
251 | instance TupRmonoid (BackendEnvElem op env) (Sh sh) where
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:253:10: warning: [-Wmissing-methods]
    • No explicit implementation for
        ‘unit’, ‘pair’, and ‘unpair’
    • In the instance declaration for
        ‘TupRmonoid (BackendArgEnvElem op env) (Value sh)’
    |
253 | instance TupRmonoid (BackendArgEnvElem op env) (Value sh) where
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:255:10: warning: [-Wmissing-methods]
    • No explicit implementation for
        ‘unit’, ‘pair’, and ‘unpair’
    • In the instance declaration for
        ‘TupRmonoid (BackendArgEnvElem op env) (Sh sh)’
    |
255 | instance TupRmonoid (BackendArgEnvElem op env) (Sh sh) where
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:296:5: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘bindIO’:
        Patterns not matched: (Trivial _) (_ :>: _)
    |
296 |     bindIO P.Empty ArgsNil = BoundIO TupRunit (LeftHandSideWildcard TupRunit) Empty Empty
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:381:21: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In a case alternative:
        Patterns not matched:
            Reqr _ _ _
            Make _ _ _
    |
381 |     prjArgs input = \case
    |                     ^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Eval.hs:421:36: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In a case alternative:
        Patterns not matched:
            Reqr _ _ _
            Make _ _ _
    |
421 | lhsArgsOutput make lhsArgs input = case lhsArgs of
    |                                    ^^^^^^^^^^^^^^^...
[123 of 150] Compiling Data.Array.Accelerate.Trafo
[124 of 150] Compiling Data.Array.Accelerate.AST.Execute
[125 of 150] Compiling Data.Array.Accelerate.Backend

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Backend.hs:80:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Eval’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Eval’
    To import instances alone, use: import Data.Array.Accelerate.Eval()
   |
80 | import Data.Array.Accelerate.Eval (EvalOp)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[126 of 150] Compiling Data.Array.Accelerate.Interpreter
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:400:56-86: Splicing expression
    hashQ ("ArrayInfo" :: String) ======> (-531530141254482999)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:401:56-85: Splicing expression
    hashQ ("NonArray" :: String) ======> (-9202555186622418449)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:242:51-75: Splicing expression
    hashQ ("Map" :: String) ======> (-5515452148833408964)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:243:51-83: Splicing expression
    hashQ ("Backpermute" :: String) ======> (-1109419244014562643)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:244:51-80: Splicing expression
    hashQ ("Generate" :: String) ======> (-1173248957499336480)
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:245:51-79: Splicing expression
    hashQ ("Permute" :: String) ======> 684500220183790248
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:246:51-77: Splicing expression
    hashQ ("Fold1" :: String) ======> 6571293911888670098
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:247:53-80: Splicing expression
    hashQ ("Scanl1" :: String) ======> 5555087853879134619
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:248:53-80: Splicing expression
    hashQ ("Scanr1" :: String) ======> 5564653605042678065
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:249:51-79: Splicing expression
    hashQ ("Appendl" :: String) ======> 3874021822923637446
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:250:51-79: Splicing expression
    hashQ ("Appendr" :: String) ======> 3873997633667816792

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:64:1: warning: [-Wdodgy-imports]
    Module
    ‘Data.Array.Accelerate.AST.Environment’
    does not export
    ‘Identity(..)’
   |
64 | import Data.Array.Accelerate.AST.Environment hiding (Identity(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:86:1: warning: [-Wunused-imports]
    The import of ‘Data.Array.Accelerate.Pretty.Schedule’ is redundant
      except perhaps to import instances from ‘Data.Array.Accelerate.Pretty.Schedule’
    To import instances alone, use: import Data.Array.Accelerate.Pretty.Schedule()
   |
86 | import Data.Array.Accelerate.Pretty.Schedule
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:124:10: warning: [-Wmissing-methods]
    • No explicit implementation for
        ‘addTup’
    • In the instance declaration for
        ‘StaticClusterAnalysis InterpretOp’
    |
124 | instance StaticClusterAnalysis InterpretOp where
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:598:29: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In a case alternative: Patterns not matched: Trivial _
    |
598 | iterationsize io args env = case io of
    |                             ^^^^^^^^^^...

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:600:18: warning: [-Wunused-matches]
    Defined but not used: ‘io'’
    |
600 |   P.Output _ _ _ io' -> case args of ArgArray Out (ArrayR shr _) sh _ :>: args' -> arrsize shr (varsGetVal sh env)
    |                  ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:600:75: warning: [-Wunused-matches]
    Defined but not used: ‘args'’
    |
600 |   P.Output _ _ _ io' -> case args of ArgArray Out (ArrayR shr _) sh _ :>: args' -> arrsize shr (varsGetVal sh env)
    |                                                                           ^^^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:603:59: warning: [-Wunused-matches]
    Defined but not used: ‘shr’
    |
603 |   P.Input  io'       -> case args of ArgArray In  (ArrayR shr _) sh _ :>: args' -> iterationsize io' args' env   -- -> arrsize shr (varsGetVal sh env)
    |                                                           ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:603:66: warning: [-Wunused-matches]
    Defined but not used: ‘sh’
    |
603 |   P.Input  io'       -> case args of ArgArray In  (ArrayR shr _) sh _ :>: args' -> iterationsize io' args' env   -- -> arrsize shr (varsGetVal sh env)
    |                                                                  ^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:604:59: warning: [-Wunused-matches]
    Defined but not used: ‘shr’
    |
604 |   P.MutPut io'       -> case args of ArgArray Mut (ArrayR shr _) sh _ :>: args' -> iterationsize io' args' env -- arrsize shr (varsGetVal sh env)
    |                                                           ^^^

/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Interpreter.hs:604:66: warning: [-Wunused-matches]
    Defined but not used: ‘sh’
    |
604 |   P.MutPut io'       -> case args of ArgArray Mut (ArrayR shr _) sh _ :>: args' -> iterationsize io' args' env -- arrsize shr (varsGetVal sh env)
    |                                                                  ^^
[127 of 150] Compiling Data.Array.Accelerate.Classes.Ord
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Classes/Ord.hs:(131,1)-(228,43): Splicing declarations
    runQ
      $ do let integralTypes_ahZHN :: [Name]
               integralTypes_ahZHN
                 = [''Int, ''Int8, ''Int16, ''Int32, ''Int64, ''Word, ''Word8,
                    ''Word16, ''Word32, ''Word64]
               floatingTypes_ahZHO :: [Name]
               floatingTypes_ahZHO = [''Half, ''Float, ''Double]
               nonNumTypes_ahZHP :: [Name]
               nonNumTypes_ahZHP = [''Char]
               cTypes_ahZHQ :: [Name]
               cTypes_ahZHQ
                 = [''CInt, ''CUInt, ''CLong, ''CULong, ''CLLong, ''CULLong,
                    ''CShort, ''CUShort, ''CChar, ''CUChar, ''CSChar, ''CFloat,
                    ''CDouble]
               mkPrim_ahZHR :: Name -> Q [Dec]
               mkPrim_ahZHR t_ahZHX
                 = [d| instance Ord $(conT t_ahZHX) where
                         (<) = mkLt
                         (>) = mkGt
                         (<=) = mkLtEq
                         (>=) = mkGtEq
                         min = mkMin
                         max = mkMax |]
                   pending(rn) [<splice_ahZHY, conT t_ahZHX>]
               mkLt'_ahZHS :: [ExpQ] -> [ExpQ] -> ExpQ
               mkLt'_ahZHS [x_ahZHZ] [y_ahZI0]
                 = [| $x_ahZHZ < $y_ahZI0 |]
                   pending(rn) [<splice_ahZI2, y_ahZI0>, <splice_ahZI1, x_ahZHZ>]
               mkLt'_ahZHS (x_ahZI3 : xs_ahZI4) (y_ahZI5 : ys_ahZI6)
                 = [| $x_ahZI3 < $y_ahZI5
                        || ($x_ahZI3 A.== $y_ahZI5 && $(mkLt'_ahZHS xs_ahZI4 ys_ahZI6)) |]
                   pending(rn) [<splice_ahZIb, mkLt'_ahZHS xs_ahZI4 ys_ahZI6>,
                                <splice_ahZIa, y_ahZI5>, <splice_ahZI9, x_ahZI3>,
                                <splice_ahZI8, y_ahZI5>, <splice_ahZI7, x_ahZI3>]
               mkLt'_ahZHS _ _ = error "mkLt'"
               mkGt'_ahZHT :: [ExpQ] -> [ExpQ] -> ExpQ
               mkGt'_ahZHT [x_ahZIc] [y_ahZId]
                 = [| $x_ahZIc > $y_ahZId |]
                   pending(rn) [<splice_ahZIf, y_ahZId>, <splice_ahZIe, x_ahZIc>]
               mkGt'_ahZHT (x_ahZIg : xs_ahZIh) (y_ahZIi : ys_ahZIj)
                 = [| $x_ahZIg > $y_ahZIi
                        || ($x_ahZIg A.== $y_ahZIi && $(mkGt'_ahZHT xs_ahZIh ys_ahZIj)) |]
                   pending(rn) [<splice_ahZIo, mkGt'_ahZHT xs_ahZIh ys_ahZIj>,
                                <splice_ahZIn, y_ahZIi>, <splice_ahZIm, x_ahZIg>,
                                <splice_ahZIl, y_ahZIi>, <splice_ahZIk, x_ahZIg>]
               mkGt'_ahZHT _ _ = error "mkGt'"
               mkLtEq'_ahZHU :: [ExpQ] -> [ExpQ] -> ExpQ
               mkLtEq'_ahZHU [x_ahZIp] [y_ahZIq]
                 = [| $x_ahZIp < $y_ahZIq |]
                   pending(rn) [<splice_ahZIs, y_ahZIq>, <splice_ahZIr, x_ahZIp>]
               mkLtEq'_ahZHU (x_ahZIt : xs_ahZIu) (y_ahZIv : ys_ahZIw)
                 = [| $x_ahZIt < $y_ahZIv
                        ||
                          ($x_ahZIt A.== $y_ahZIv && $(mkLtEq'_ahZHU xs_ahZIu ys_ahZIw)) |]
                   pending(rn) [<splice_ahZIB, mkLtEq'_ahZHU xs_ahZIu ys_ahZIw>,
                                <splice_ahZIA, y_ahZIv>, <splice_ahZIz, x_ahZIt>,
                                <splice_ahZIy, y_ahZIv>, <splice_ahZIx, x_ahZIt>]
               mkLtEq'_ahZHU _ _ = error "mkLtEq'"
               mkGtEq'_ahZHV :: [ExpQ] -> [ExpQ] -> ExpQ
               mkGtEq'_ahZHV [x_ahZIC] [y_ahZID]
                 = [| $x_ahZIC > $y_ahZID |]
                   pending(rn) [<splice_ahZIF, y_ahZID>, <splice_ahZIE, x_ahZIC>]
               mkGtEq'_ahZHV (x_ahZIG : xs_ahZIH) (y_ahZII : ys_ahZIJ)
                 = [| $x_ahZIG > $y_ahZII
                        ||
                          ($x_ahZIG A.== $y_ahZII && $(mkGtEq'_ahZHV xs_ahZIH ys_ahZIJ)) |]
                   pending(rn) [<splice_ahZIO, mkGtEq'_ahZHV xs_ahZIH ys_ahZIJ>,
                                <splice_ahZIN, y_ahZII>, <splice_ahZIM, x_ahZIG>,
                                <splice_ahZIL, y_ahZII>, <splice_ahZIK, x_ahZIG>]
               mkGtEq'_ahZHV _ _ = error "mkGtEq'"
               mkTup_ahZHW :: Int -> Q [Dec]
               mkTup_ahZHW n_ahZIP
                 = let
                     xs_ahZIQ
                       = [mkName ('x' : show i_ahZIV) | i_ahZIV <- [0 .. n_ahZIP - 1]]
                     ys_ahZIR
                       = [mkName ('y' : show i_ahZIW) | i_ahZIW <- [0 .. n_ahZIP - 1]]
                     cst_ahZIS
                       = tupT
                           (map
                              (\ x_ahZIX
                                 -> [t| Ord $(varT x_ahZIX) |]
                                    pending(rn) [<splice_ahZIY, varT x_ahZIX>])
                              xs_ahZIQ)
                     res_ahZIT = tupT (map varT xs_ahZIQ)
                     pat_ahZIU vs_ahZIZ
                       = conP (mkName ('T' : show n_ahZIP)) (map varP vs_ahZIZ)
                   in
                     [d| instance $cst_ahZIS => Ord $res_ahZIT where
                           $(pat_ahZIU xs_ahZIQ) < $(pat_ahZIU ys_ahZIR)
                             = $(mkLt'_ahZHS (map varE xs_ahZIQ) (map varE ys_ahZIR))
                           $(pat_ahZIU xs_ahZIQ) > $(pat_ahZIU ys_ahZIR)
                             = $(mkGt'_ahZHT (map varE xs_ahZIQ) (map varE ys_ahZIR))
                           $(pat_ahZIU xs_ahZIQ) >= $(pat_ahZIU ys_ahZIR)
                             = $(mkGtEq'_ahZHV (map varE xs_ahZIQ) (map varE ys_ahZIR))
                           $(pat_ahZIU xs_ahZIQ) <= $(pat_ahZIU ys_ahZIR)
                             = $(mkLtEq'_ahZHU (map varE xs_ahZIQ) (map varE ys_ahZIR)) |]
                     pending(rn) [<splice_ahZJd, mkLtEq'_ahZHU
                                                   (map varE xs_ahZIQ) (map varE ys_ahZIR)>,
                                  <splice_ahZJc, pat_ahZIU ys_ahZIR>,
                                  <splice_ahZJb, pat_ahZIU xs_ahZIQ>,
                                  <splice_ahZJa, mkGtEq'_ahZHV
                                                   (map varE xs_ahZIQ) (map varE ys_ahZIR)>,
                                  <splice_ahZJ9, pat_ahZIU ys_ahZIR>,
                                  <splice_ahZJ8, pat_ahZIU xs_ahZIQ>,
                                  <splice_ahZJ7, mkGt'_ahZHT
                                                   (map varE xs_ahZIQ) (map varE ys_ahZIR)>,
                                  <splice_ahZJ6, pat_ahZIU ys_ahZIR>,
                                  <splice_ahZJ5, pat_ahZIU xs_ahZIQ>,
                                  <splice_ahZJ4, mkLt'_ahZHS
                                                   (map varE xs_ahZIQ) (map varE ys_ahZIR)>,
                                  <splice_ahZJ3, pat_ahZIU ys_ahZIR>,
                                  <splice_ahZJ2, pat_ahZIU xs_ahZIQ>, <splice_ahZJ1, res_ahZIT>,
                                  <splice_ahZJ0, cst_ahZIS>]
           is_ahZJe <- mapM mkPrim_ahZHR integralTypes_ahZHN
           fs_ahZJf <- mapM mkPrim_ahZHR floatingTypes_ahZHO
           ns_ahZJg <- mapM mkPrim_ahZHR nonNumTypes_ahZHP
           cs_ahZJh <- mapM mkPrim_ahZHR cTypes_ahZHQ
           ts_ahZJi <- mapM mkTup_ahZHW [2 .. 16]
           return
             $ concat
                 (concat [is_ahZJe, fs_ahZJf, ns_ahZJg, cs_ahZJh, ts_ahZJi])
  ======>
    instance Ord Int where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Int8 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Int16 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Int32 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Int64 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Word where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Word8 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Word16 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Word32 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Word64 where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Half where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Float where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Double where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord Char where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CInt where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CUInt where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CLong where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CULong where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CLLong where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CULLong where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CShort where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CUShort where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CChar where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CUChar where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CSChar where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CFloat where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance Ord CDouble where
      (<) = mkLt
      (>) = mkGt
      (<=) = mkLtEq
      (>=) = mkGtEq
      min = mkMin
      max = mkMax
    instance (Ord x0, Ord x1) => Ord (x0, x1) where
      (<) (T2 x0 x1) (T2 y0 y1)
        = ((x0 < y0) || ((x0 A.== y0) && (x1 < y1)))
      (>) (T2 x0 x1) (T2 y0 y1)
        = ((x0 > y0) || ((x0 A.== y0) && (x1 > y1)))
      (>=) (T2 x0 x1) (T2 y0 y1)
        = ((x0 > y0) || ((x0 A.== y0) && (x1 > y1)))
      (<=) (T2 x0 x1) (T2 y0 y1)
        = ((x0 < y0) || ((x0 A.== y0) && (x1 < y1)))
    instance (Ord x0, Ord x1, Ord x2) => Ord (x0, x1, x2) where
      (<) (T3 x0 x1 x2) (T3 y0 y1 y2)
        = ((x0 < y0)
             || ((x0 A.== y0) && ((x1 < y1) || ((x1 A.== y1) && (x2 < y2)))))
      (>) (T3 x0 x1 x2) (T3 y0 y1 y2)
        = ((x0 > y0)
             || ((x0 A.== y0) && ((x1 > y1) || ((x1 A.== y1) && (x2 > y2)))))
      (>=) (T3 x0 x1 x2) (T3 y0 y1 y2)
        = ((x0 > y0)
             || ((x0 A.== y0) && ((x1 > y1) || ((x1 A.== y1) && (x2 > y2)))))
      (<=) (T3 x0 x1 x2) (T3 y0 y1 y2)
        = ((x0 < y0)
             || ((x0 A.== y0) && ((x1 < y1) || ((x1 A.== y1) && (x2 < y2)))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3) =>
             Ord (x0, x1, x2, x3) where
      (<) (T4 x0 x1 x2 x3) (T4 y0 y1 y2 y3)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       || ((x1 A.== y1) && ((x2 < y2) || ((x2 A.== y2) && (x3 < y3)))))))
      (>) (T4 x0 x1 x2 x3) (T4 y0 y1 y2 y3)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       || ((x1 A.== y1) && ((x2 > y2) || ((x2 A.== y2) && (x3 > y3)))))))
      (>=) (T4 x0 x1 x2 x3) (T4 y0 y1 y2 y3)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       || ((x1 A.== y1) && ((x2 > y2) || ((x2 A.== y2) && (x3 > y3)))))))
      (<=) (T4 x0 x1 x2 x3) (T4 y0 y1 y2 y3)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       || ((x1 A.== y1) && ((x2 < y2) || ((x2 A.== y2) && (x3 < y3)))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4) =>
             Ord (x0, x1, x2, x3, x4) where
      (<) (T5 x0 x1 x2 x3 x4) (T5 y0 y1 y2 y3 y4)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2) && ((x3 < y3) || ((x3 A.== y3) && (x4 < y4)))))))))
      (>) (T5 x0 x1 x2 x3 x4) (T5 y0 y1 y2 y3 y4)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2) && ((x3 > y3) || ((x3 A.== y3) && (x4 > y4)))))))))
      (>=) (T5 x0 x1 x2 x3 x4) (T5 y0 y1 y2 y3 y4)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2) && ((x3 > y3) || ((x3 A.== y3) && (x4 > y4)))))))))
      (<=) (T5 x0 x1 x2 x3 x4) (T5 y0 y1 y2 y3 y4)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2) && ((x3 < y3) || ((x3 A.== y3) && (x4 < y4)))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5) =>
             Ord (x0, x1, x2, x3, x4, x5) where
      (<) (T6 x0 x1 x2 x3 x4 x5) (T6 y0 y1 y2 y3 y4 y5)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4) || ((x4 A.== y4) && (x5 < y5)))))))))))
      (>) (T6 x0 x1 x2 x3 x4 x5) (T6 y0 y1 y2 y3 y4 y5)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4) || ((x4 A.== y4) && (x5 > y5)))))))))))
      (>=) (T6 x0 x1 x2 x3 x4 x5) (T6 y0 y1 y2 y3 y4 y5)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4) || ((x4 A.== y4) && (x5 > y5)))))))))))
      (<=) (T6 x0 x1 x2 x3 x4 x5) (T6 y0 y1 y2 y3 y4 y5)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4) || ((x4 A.== y4) && (x5 < y5)))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5,
              Ord x6) =>
             Ord (x0, x1, x2, x3, x4, x5, x6) where
      (<) (T7 x0 x1 x2 x3 x4 x5 x6) (T7 y0 y1 y2 y3 y4 y5 y6)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    && (x6 < y6)))))))))))))
      (>) (T7 x0 x1 x2 x3 x4 x5 x6) (T7 y0 y1 y2 y3 y4 y5 y6)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    && (x6 > y6)))))))))))))
      (>=) (T7 x0 x1 x2 x3 x4 x5 x6) (T7 y0 y1 y2 y3 y4 y5 y6)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    && (x6 > y6)))))))))))))
      (<=) (T7 x0 x1 x2 x3 x4 x5 x6) (T7 y0 y1 y2 y3 y4 y5 y6)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    && (x6 < y6)))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7) where
      (<) (T8 x0 x1 x2 x3 x4 x5 x6 x7) (T8 y0 y1 y2 y3 y4 y5 y6 y7)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                (x7
                                                                                   < y7)))))))))))))))
      (>) (T8 x0 x1 x2 x3 x4 x5 x6 x7) (T8 y0 y1 y2 y3 y4 y5 y6 y7)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                (x7
                                                                                   > y7)))))))))))))))
      (>=) (T8 x0 x1 x2 x3 x4 x5 x6 x7) (T8 y0 y1 y2 y3 y4 y5 y6 y7)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                (x7
                                                                                   > y7)))))))))))))))
      (<=) (T8 x0 x1 x2 x3 x4 x5 x6 x7) (T8 y0 y1 y2 y3 y4 y5 y6 y7)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                (x7
                                                                                   < y7)))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8) where
      (<) (T9 x0 x1 x2 x3 x4 x5 x6 x7 x8) (T9 y0 y1 y2 y3 y4 y5 y6 y7 y8)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          (x8
                                                                                             < y8)))))))))))))))))
      (>) (T9 x0 x1 x2 x3 x4 x5 x6 x7 x8) (T9 y0 y1 y2 y3 y4 y5 y6 y7 y8)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          (x8
                                                                                             > y8)))))))))))))))))
      (>=)
        (T9 x0 x1 x2 x3 x4 x5 x6 x7 x8)
        (T9 y0 y1 y2 y3 y4 y5 y6 y7 y8)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          (x8
                                                                                             > y8)))))))))))))))))
      (<=)
        (T9 x0 x1 x2 x3 x4 x5 x6 x7 x8)
        (T9 y0 y1 y2 y3 y4 y5 y6 y7 y8)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          (x8
                                                                                             < y8)))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) where
      (<)
        (T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9)
        (T10 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    (x9
                                                                                                       < y9)))))))))))))))))))
      (>)
        (T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9)
        (T10 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    (x9
                                                                                                       > y9)))))))))))))))))))
      (>=)
        (T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9)
        (T10 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    (x9
                                                                                                       > y9)))))))))))))))))))
      (<=)
        (T10 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9)
        (T10 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    (x9
                                                                                                       < y9)))))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9, Ord x10) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) where
      (<)
        (T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)
        (T11 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              (x10
                                                                                                                 < y10)))))))))))))))))))))
      (>)
        (T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)
        (T11 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              (x10
                                                                                                                 > y10)))))))))))))))))))))
      (>=)
        (T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)
        (T11 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              (x10
                                                                                                                 > y10)))))))))))))))))))))
      (<=)
        (T11 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)
        (T11 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              (x10
                                                                                                                 < y10)))))))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9, Ord x10, Ord x11) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) where
      (<)
        (T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)
        (T12 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        (x11
                                                                                                                           < y11)))))))))))))))))))))))
      (>)
        (T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)
        (T12 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        (x11
                                                                                                                           > y11)))))))))))))))))))))))
      (>=)
        (T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)
        (T12 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        (x11
                                                                                                                           > y11)))))))))))))))))))))))
      (<=)
        (T12 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)
        (T12 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        (x11
                                                                                                                           < y11)))))))))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9, Ord x10, Ord x11, Ord x12) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) where
      (<)
        (T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)
        (T13 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  (x12
                                                                                                                                     < y12)))))))))))))))))))))))))
      (>)
        (T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)
        (T13 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  (x12
                                                                                                                                     > y12)))))))))))))))))))))))))
      (>=)
        (T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)
        (T13 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  (x12
                                                                                                                                     > y12)))))))))))))))))))))))))
      (<=)
        (T13 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)
        (T13 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  (x12
                                                                                                                                     < y12)))))))))))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9, Ord x10, Ord x11, Ord x12, Ord x13) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
                  x13) where
      (<)
        (T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)
        (T14 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      < y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            (x13
                                                                                                                                               < y13)))))))))))))))))))))))))))
      (>)
        (T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)
        (T14 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      > y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            (x13
                                                                                                                                               > y13)))))))))))))))))))))))))))
      (>=)
        (T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)
        (T14 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      > y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            (x13
                                                                                                                                               > y13)))))))))))))))))))))))))))
      (<=)
        (T14 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)
        (T14 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      < y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            (x13
                                                                                                                                               < y13)))))))))))))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9, Ord x10, Ord x11, Ord x12, Ord x13,
              Ord x14) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                  x14) where
      (<)
        (T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)
        (T15 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      < y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                < y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      (x14
                                                                                                                                                         < y14)))))))))))))))))))))))))))))
      (>)
        (T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)
        (T15 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      > y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                > y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      (x14
                                                                                                                                                         > y14)))))))))))))))))))))))))))))
      (>=)
        (T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)
        (T15 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      > y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                > y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      (x14
                                                                                                                                                         > y14)))))))))))))))))))))))))))))
      (<=)
        (T15 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)
        (T15 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      < y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                < y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      (x14
                                                                                                                                                         < y14)))))))))))))))))))))))))))))
    instance (Ord x0, Ord x1, Ord x2, Ord x3, Ord x4, Ord x5, Ord x6,
              Ord x7, Ord x8, Ord x9, Ord x10, Ord x11, Ord x12, Ord x13,
              Ord x14, Ord x15) =>
             Ord (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13,
                  x14, x15) where
      (<)
        (T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)
        (T16 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      < y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                < y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      ((x14
                                                                                                                                                          < y14)
                                                                                                                                                         ||
                                                                                                                                                           ((x14
                                                                                                                                                               A.==
                                                                                                                                                                 y14)
                                                                                                                                                              &&
                                                                                                                                                                (x15
                                                                                                                                                                   < y15)))))))))))))))))))))))))))))))
      (>)
        (T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)
        (T16 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      > y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                > y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      ((x14
                                                                                                                                                          > y14)
                                                                                                                                                         ||
                                                                                                                                                           ((x14
                                                                                                                                                               A.==
                                                                                                                                                                 y14)
                                                                                                                                                              &&
                                                                                                                                                                (x15
                                                                                                                                                                   > y15)))))))))))))))))))))))))))))))
      (>=)
        (T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)
        (T16 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15)
        = ((x0 > y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 > y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 > y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 > y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 > y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 > y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 > y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 > y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 > y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        > y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  > y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            > y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      > y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                > y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      ((x14
                                                                                                                                                          > y14)
                                                                                                                                                         ||
                                                                                                                                                           ((x14
                                                                                                                                                               A.==
                                                                                                                                                                 y14)
                                                                                                                                                              &&
                                                                                                                                                                (x15
                                                                                                                                                                   > y15)))))))))))))))))))))))))))))))
      (<=)
        (T16 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)
        (T16 y0 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15)
        = ((x0 < y0)
             ||
               ((x0 A.== y0)
                  &&
                    ((x1 < y1)
                       ||
                         ((x1 A.== y1)
                            &&
                              ((x2 < y2)
                                 ||
                                   ((x2 A.== y2)
                                      &&
                                        ((x3 < y3)
                                           ||
                                             ((x3 A.== y3)
                                                &&
                                                  ((x4 < y4)
                                                     ||
                                                       ((x4 A.== y4)
                                                          &&
                                                            ((x5 < y5)
                                                               ||
                                                                 ((x5 A.== y5)
                                                                    &&
                                                                      ((x6 < y6)
                                                                         ||
                                                                           ((x6 A.== y6)
                                                                              &&
                                                                                ((x7 < y7)
                                                                                   ||
                                                                                     ((x7 A.== y7)
                                                                                        &&
                                                                                          ((x8 < y8)
                                                                                             ||
                                                                                               ((x8
                                                                                                   A.==
                                                                                                     y8)
                                                                                                  &&
                                                                                                    ((x9
                                                                                                        < y9)
                                                                                                       ||
                                                                                                         ((x9
                                                                                                             A.==
                                                                                                               y9)
                                                                                                            &&
                                                                                                              ((x10
                                                                                                                  < y10)
                                                                                                                 ||
                                                                                                                   ((x10
                                                                                                                       A.==
                                                                                                                         y10)
                                                                                                                      &&
                                                                                                                        ((x11
                                                                                                                            < y11)
                                                                                                                           ||
                                                                                                                             ((x11
                                                                                                                                 A.==
                                                                                                                                   y11)
                                                                                                                                &&
                                                                                                                                  ((x12
                                                                                                                                      < y12)
                                                                                                                                     ||
                                                                                                                                       ((x12
                                                                                                                                           A.==
                                                                                                                                             y12)
                                                                                                                                          &&
                                                                                                                                            ((x13
                                                                                                                                                < y13)
                                                                                                                                               ||
                                                                                                                                                 ((x13
                                                                                                                                                     A.==
                                                                                                                                                       y13)
                                                                                                                                                    &&
                                                                                                                                                      ((x14
                                                                                                                                                          < y14)
                                                                                                                                                         ||
                                                                                                                                                           ((x14
                                                                                                                                                               A.==
                                                                                                                                                                 y14)
                                                                                                                                                              &&
                                                                                                                                                                (x15
                                                                                                                                                                   < y15)))))))))))))))))))))))))))))))
[128 of 150] Compiling Data.Array.Accelerate.Data.Semigroup
[129 of 150] Compiling Data.Array.Accelerate.Classes.Real
[130 of 150] Compiling Data.Array.Accelerate.Classes.Integral
[131 of 150] Compiling Data.Array.Accelerate.Language
[132 of 150] Compiling Data.Array.Accelerate.Debug.Trace
[133 of 150] Compiling Data.Array.Accelerate.Data.Monoid
[134 of 150] Compiling Data.Array.Accelerate.Data.Fold
[135 of 150] Compiling Data.Array.Accelerate.Control.Monad
[136 of 150] Compiling Data.Array.Accelerate.Data.Bits
[137 of 150] Compiling Data.Array.Accelerate.Classes.FromIntegral
/home/david/Documents/accelerate/accelerate/src/Data/Array/Accelerate/Classes/FromIntegral.hs:(52,2)-(84,2): Splicing declarations
    runQ
      $ do let digItOut_ajhbI :: Name -> Q [Name]
               digItOut_ajhbI name_ajhbK
                 = do TyConI (DataD _ _ _ _ cons_ajhbL _) <- reify name_ajhbK
                      let dig_ajhbM (NormalC _ [(_, AppT (ConT n_ajhbN) (VarT _))])
                            = digItOut_ajhbI n_ajhbN
                          dig_ajhbM
                            (ForallC _ _ (GadtC _ [(_, AppT (ConT n_ajhbO) (VarT _))] _))
                            = digItOut_ajhbI n_ajhbO
                          dig_ajhbM (GadtC _ _ (AppT (ConT _) (ConT n_ajhbP)))
                            = return [n_ajhbP]
                          dig_ajhbM _
                            = error "Unexpected case generating FromIntegral instances"
                      concat `fmap` mapM dig_ajhbM cons_ajhbL
               thFromIntegral_ajhbJ :: Name -> Name -> Q Dec
               thFromIntegral_ajhbJ a_ajhbQ b_ajhbR
                 = let
                     ty_ajhbS
                       = AppT
                           (AppT (ConT (mkName "FromIntegral")) (ConT a_ajhbQ)) (ConT b_ajhbR)
                     dec_ajhbT
                       = ValD
                           (VarP (mkName "fromIntegral")) (NormalB (VarE (mkName f_ajhbU))) []
                     f_ajhbU
                       | a_ajhbQ == b_ajhbR = "id"
                       | otherwise = "mkFromIntegral"
                   in instanceD (return []) (return ty_ajhbS) [return dec_ajhbT]
           as_ajhbV <- digItOut_ajhbI ''IntegralType
           bs_ajhbW <- digItOut_ajhbI ''NumType
           sequence
             [thFromIntegral_ajhbJ a_ajhbX b_ajhbY |
                a_ajhbX <- as_ajhbV, b_ajhbY <- bs_ajhbW]
  ======>
    instance FromIntegral Int Int where
      fromIntegral = id
    instance FromIntegral Int Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Int8 where
      fromIntegral = id
    instance FromIntegral Int8 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int8 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Int16 where
      fromIntegral = id
    instance FromIntegral Int16 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int16 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Int32 where
      fromIntegral = id
    instance FromIntegral Int32 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int32 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Int64 where
      fromIntegral = id
    instance FromIntegral Int64 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Int64 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Word where
      fromIntegral = id
    instance FromIntegral Word Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Word8 where
      fromIntegral = id
    instance FromIntegral Word8 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word8 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Word16 where
      fromIntegral = id
    instance FromIntegral Word16 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word16 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Word32 where
      fromIntegral = id
    instance FromIntegral Word32 Word64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word32 Double where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Int where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Int8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Int16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Int32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Int64 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Word where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Word8 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Word16 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Word32 where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Word64 where
      fromIntegral = id
    instance FromIntegral Word64 Half where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Float where
      fromIntegral = mkFromIntegral
    instance FromIntegral Word64 Double where
      fromIntegral = mkFromIntegral
[138 of 150] Compiling Data.Array.Accelerate.Prelude
[139 of 150] Compiling Data.Array.Accelerate.Data.Maybe
[140 of 150] Compiling Data.Array.Accelerate.Data.Either
[141 of 150] Compiling Data.Array.Accelerate.Classes.RealFloat[boot]
[142 of 150] Compiling Data.Array.Accelerate.Classes.RealFrac
[143 of 150] Compiling Data.Array.Accelerate.Data.Ratio
[144 of 150] Compiling Data.Array.Accelerate.Classes.RealFloat
[145 of 150] Compiling Data.Array.Accelerate.Data.Complex
[146 of 150] Compiling Data.Array.Accelerate.Test.Similar
[147 of 150] Compiling Data.Array.Accelerate.Classes.Rational
[148 of 150] Compiling Data.Array.Accelerate
[149 of 150] Compiling Data.Array.Accelerate.Array.Remote.LRU
[150 of 150] Compiling Data.Array.Accelerate.Array.Remote
accelerate> copy/register
Installing library in /home/david/Documents/accelerate/accelerate/.stack-work/install/x86_64-linux/d18140fc827bb2b8e622a4e4cf297a83268bb54c382aa973d1858981347e7f21/9.0.2/lib/x86_64-linux-ghc-9.0.2/accelerate-1.3.0.0-HmNjXN1kkQzJrmuHExogBj
Registering library for accelerate-1.3.0.0..
